// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Avatar = require("../../../shared/Avatar.bs.js");
var DateFns = require("../../../shared/utils/DateFns.bs.js");
var ArrayUtils = require("../../../shared/utils/ArrayUtils.bs.js");
var UsersHome__Course = require("../types/UsersHome__Course.bs.js");
var UsersHome__Community = require("../types/UsersHome__Community.bs.js");
var UsersHome__IssuedCertificate = require("../types/UsersHome__IssuedCertificate.bs.js");

((require("courses/shared/background_patterns.css")));

((require("./UserHome__Root.css")));

function str(prim) {
  return prim;
}

function headerSectiom(userName, userTitle, avatarUrl, showUserEdit) {
  return React.createElement("div", {
              className: "max-w-4xl mx-auto pt-12 flex items-center justify-between px-3 lg:px-0"
            }, React.createElement("div", {
                  className: "flex"
                }, avatarUrl !== undefined ? React.createElement("img", {
                        className: "w-16 h-16 rounded-full border object-cover border-gray-400 rounded-full overflow-hidden flex-shrink-0 mr-4",
                        src: avatarUrl
                      }) : React.createElement(Avatar.make, {
                        name: userName,
                        className: "w-16 h-16 mr-4 border border-gray-400 rounded-full overflow-hidden flex-shrink-0"
                      }), React.createElement("div", {
                      className: "text-sm flex flex-col justify-center"
                    }, React.createElement("div", {
                          className: "text-black font-bold inline-block"
                        }, userName), React.createElement("div", {
                          className: "text-gray-600 inline-block"
                        }, userTitle))), showUserEdit ? React.createElement("a", {
                    className: "btn",
                    href: "/user/edit"
                  }, React.createElement("i", {
                        className: "fas fa-edit text-xs md:text-sm mr-2"
                      }), React.createElement("span", undefined, "Edit Profile")) : null);
}

function navButtonClasses(selected) {
  return "font-semibold border-b-2 border-transparent text-sm py-4 mr-6 focus:outline-none " + (
          selected ? "text-primary-500 border-primary-500" : ""
        );
}

function navSection(view, setView, communities, issuedCertificates) {
  return React.createElement("div", {
              className: "border-b mt-6"
            }, React.createElement("div", {
                  className: "flex max-w-4xl mx-auto px-3 lg:px-0"
                }, React.createElement("button", {
                      className: navButtonClasses(view === /* ShowCourses */0),
                      onClick: (function (param) {
                          return Curry._1(setView, (function (param) {
                                        return /* ShowCourses */0;
                                      }));
                        })
                    }, React.createElement("i", {
                          className: "fas fa-book text-xs md:text-sm mr-2"
                        }), React.createElement("span", undefined, "My Courses")), ArrayUtils.isNotEmpty(communities) ? React.createElement("button", {
                        className: navButtonClasses(view === /* ShowCommunities */1),
                        onClick: (function (param) {
                            return Curry._1(setView, (function (param) {
                                          return /* ShowCommunities */1;
                                        }));
                          })
                      }, React.createElement("i", {
                            className: "fas fa-users text-xs md:text-sm mr-2"
                          }), React.createElement("span", undefined, "Communities")) : null, ArrayUtils.isNotEmpty(issuedCertificates) ? React.createElement("button", {
                        className: navButtonClasses(view === /* ShowCertificates */2),
                        onClick: (function (param) {
                            return Curry._1(setView, (function (param) {
                                          return /* ShowCertificates */2;
                                        }));
                          })
                      }, React.createElement("i", {
                            className: "fas fa-certificate text-xs md:text-sm mr-2"
                          }), React.createElement("span", undefined, "Certificates")) : null));
}

function courseLink(href, title, icon) {
  return React.createElement("a", {
              key: href,
              className: "px-2 py-1 mr-2 mt-2 rounded text-sm bg-gray-100 text-gray-800 hover:bg-gray-200 hover:text-primary-500",
              href: href
            }, React.createElement("i", {
                  className: icon
                }), React.createElement("span", {
                  className: "font-semibold ml-2"
                }, title));
}

function ctaButton(title, href) {
  return React.createElement("a", {
              className: "w-full bg-gray-200 mt-4 px-6 py-4 flex text-sm font-semibold justify-between items-center cursor-pointer text-primary-500 hover:bg-gray-300",
              href: href
            }, React.createElement("span", undefined, React.createElement("i", {
                      className: "fas fa-book"
                    }), React.createElement("span", {
                      className: "ml-2"
                    }, title)), React.createElement("i", {
                  className: "fas fa-arrow-right"
                }));
}

function ctaText(message, icon) {
  return React.createElement("div", {
              className: "w-full bg-red-100 text-red-600 mt-4 px-6 py-4 flex text-sm font-semibold justify-center items-center "
            }, React.createElement("span", undefined, React.createElement("i", {
                      className: icon
                    }), React.createElement("span", {
                      className: "ml-2"
                    }, message)));
}

function studentLink(courseId, suffix) {
  return "/courses/" + (courseId + ("/" + suffix));
}

function callToAction(course, currentSchoolAdmin) {
  if (currentSchoolAdmin) {
    return /* ViewCourse */75103552;
  } else if (UsersHome__Course.author(course)) {
    return /* EditCourse */148528805;
  } else if (UsersHome__Course.review(course)) {
    return /* ReviewSubmissions */-313716913;
  } else if (UsersHome__Course.exited(course)) {
    return /* DroppedOut */861059214;
  } else if (UsersHome__Course.ended(course)) {
    return /* CourseEnded */253976063;
  } else {
    return /* ViewCourse */75103552;
  }
}

function ctaFooter(course, currentSchoolAdmin) {
  var courseId = UsersHome__Course.id(course);
  var match = callToAction(course, currentSchoolAdmin);
  if (match !== 75103552) {
    if (match >= 253976063) {
      if (match >= 861059214) {
        return ctaText("Dropped out", "fas fa-user-slash");
      } else {
        return ctaText("Course Ended", "fas fa-history");
      }
    } else if (match >= 148528805) {
      return ctaButton("Edit Curriculum", "/school/courses/" + (courseId + "/curriculum"));
    } else {
      return ctaButton("Review Submissions", studentLink(courseId, "review"));
    }
  } else {
    return ctaButton("View Course", studentLink(courseId, "curriculum"));
  }
}

function communityLinks(communityIds, communities) {
  return $$Array.map((function (id) {
                var community = communities.find((function (c) {
                        return UsersHome__Community.id(c) === id;
                      }));
                if (community !== undefined) {
                  return React.createElement("a", {
                              key: UsersHome__Community.id(community),
                              className: "px-2 py-1 mr-2 mt-2 rounded text-sm bg-gray-100 text-gray-800 hover:bg-gray-200 hover:text-primary-500",
                              href: UsersHome__Community.path(community)
                            }, React.createElement("i", {
                                  className: "fas fa-users"
                                }), React.createElement("span", {
                                  className: "font-semibold ml-2"
                                }, UsersHome__Community.name(community)));
                } else {
                  return null;
                }
              }), communityIds);
}

function courseLinks(course, currentSchoolAdmin, communities) {
  var courseId = UsersHome__Course.id(course);
  var cta = callToAction(course, currentSchoolAdmin);
  return React.createElement("div", {
              className: "flex flex-wrap px-4 mt-2"
            }, UsersHome__Course.author(course) && cta !== /* EditCourse */148528805 ? courseLink("/school/courses/" + (courseId + "/curriculum"), "Edit Curriculum", "fas fa-check-square") : null, cta !== /* ViewCourse */75103552 ? courseLink(studentLink(courseId, "curriculum"), "View Curriculum", "fas fa-book") : null, UsersHome__Course.enableLeaderboard(course) ? courseLink(studentLink(courseId, "leaderboard"), "Leaderboard", "fas fa-calendar-alt") : null, UsersHome__Course.review(course) && cta !== /* ReviewSubmissions */-313716913 ? courseLink(studentLink(courseId, "review"), "Review Submissions", "fas fa-check-square") : null, UsersHome__Course.review(course) ? courseLink(studentLink(courseId, "students"), "My Users", "fas fa-user-friends") : null, communityLinks(UsersHome__Course.linkedCommunities(course), communities));
}

function coursesSection(courses, communities, currentSchoolAdmin) {
  return React.createElement("div", {
              className: "w-full max-w-4xl mx-auto"
            }, React.createElement("div", {
                  className: "flex flex-wrap flex-1 lg:-mx-5"
                }, $$Array.map((function (course) {
                        var match = UsersHome__Course.thumbnailUrl(course);
                        return React.createElement("div", {
                                    key: UsersHome__Course.id(course),
                                    "aria-label": UsersHome__Course.name(course),
                                    className: "w-full px-3 lg:px-5 md:w-1/2 mt-6 md:mt-10"
                                  }, React.createElement("div", {
                                        key: UsersHome__Course.id(course),
                                        className: "flex overflow-hidden shadow bg-white rounded-lg flex flex-col justify-between h-full"
                                      }, React.createElement("div", undefined, React.createElement("div", {
                                                className: "relative"
                                              }, React.createElement("div", {
                                                    className: "relative pb-1/2 bg-gray-800"
                                                  }, match !== undefined ? React.createElement("img", {
                                                          className: "absolute h-full w-full object-cover",
                                                          src: match
                                                        }) : React.createElement("div", {
                                                          className: "user-home-course__cover absolute h-full w-full svg-bg-pattern-1"
                                                        })), React.createElement("div", {
                                                    key: UsersHome__Course.id(course),
                                                    className: "user-home-course__title-container absolute w-full flex items-center h-16 bottom-0 z-50"
                                                  }, React.createElement("h4", {
                                                        className: "user-home-course__title text-white font-semibold leading-tight pl-6 pr-4 text-lg md:text-xl"
                                                      }, UsersHome__Course.name(course)))), React.createElement("div", {
                                                className: "user-home-course__description text-sm px-6 pt-4 w-full leading-relaxed"
                                              }, UsersHome__Course.description(course)), UsersHome__Course.exited(course) ? React.createElement("div", {
                                                  className: "text-sm py-4 bg-red-100 rounded mt-2 px-6"
                                                }, "Your student profile for this course is locked, and cannot be updated.") : React.createElement("div", undefined, courseLinks(course, currentSchoolAdmin, communities))), React.createElement("div", undefined, ctaFooter(course, currentSchoolAdmin))));
                      }), courses)));
}

function communitiesSection(communities) {
  return React.createElement("div", {
              className: "w-full max-w-4xl mx-auto"
            }, React.createElement("div", {
                  className: "flex flex-wrap flex-1 lg:-mx-5"
                }, $$Array.map((function (community) {
                        return React.createElement("div", {
                                    key: UsersHome__Community.id(community),
                                    className: "flex w-full px-3 lg:px-5 md:w-1/2 mt-6 md:mt-10"
                                  }, React.createElement("a", {
                                        className: "w-full h-full shadow rounded-lg hover:shadow-lg",
                                        href: UsersHome__Community.path(community)
                                      }, React.createElement("div", {
                                            className: "user-home-community__cover flex w-full bg-gray-600 h-40 svg-bg-pattern-5 items-center justify-center p-4 shadow rounded-t-lg"
                                          }), React.createElement("div", {
                                            className: "w-full flex justify-between items-center flex-wrap px-4 pt-2 pb-4"
                                          }, React.createElement("h4", {
                                                className: "font-bold text-sm pt-2 leading-tight"
                                              }, UsersHome__Community.name(community)), React.createElement("div", {
                                                className: "btn btn-small btn-primary-ghost mt-2"
                                              }, "Visit Community"))));
                      }), communities)));
}

function certificatesSection(issuedCertificates) {
  return React.createElement("div", {
              className: "w-full max-w-4xl mx-auto"
            }, React.createElement("div", {
                  className: "flex flex-wrap flex-1 lg:-mx-5"
                }, $$Array.map((function (issuedCertificate) {
                        return React.createElement("div", {
                                    key: UsersHome__IssuedCertificate.id(issuedCertificate),
                                    className: "flex w-full px-3 lg:px-5 md:w-1/2 mt-6 md:mt-10"
                                  }, React.createElement("a", {
                                        className: "w-full h-full shadow rounded-lg hover:shadow-lg",
                                        href: "/c/" + UsersHome__IssuedCertificate.serialNumber(issuedCertificate)
                                      }, React.createElement("div", {
                                            className: "user-home-community__cover flex w-full bg-gray-600 h-40 svg-bg-pattern-5 items-center justify-center p-4 shadow rounded-t-lg"
                                          }), React.createElement("div", {
                                            className: "w-full flex justify-between items-center flex-wrap px-4 pt-2 pb-4"
                                          }, React.createElement("div", undefined, React.createElement("h4", {
                                                    className: "font-bold text-sm pt-2 leading-tight"
                                                  }, UsersHome__IssuedCertificate.courseName(issuedCertificate)), React.createElement("div", {
                                                    className: "text-xs"
                                                  }, React.createElement("span", undefined, "Issued on:"), React.createElement("span", {
                                                        className: "ml-1"
                                                      }, DateFns.formatPreset(UsersHome__IssuedCertificate.createdAt(issuedCertificate), true, true, undefined, /* () */0)))), React.createElement("div", {
                                                className: "btn btn-small btn-primary-ghost mt-2"
                                              }, "View Certificate"))));
                      }), issuedCertificates)));
}

function UsersHome__Root(Props) {
  var currentSchoolAdmin = Props.currentSchoolAdmin;
  var courses = Props.courses;
  var communities = Props.communities;
  var showUserEdit = Props.showUserEdit;
  var userName = Props.userName;
  var userTitle = Props.userTitle;
  var avatarUrl = Props.avatarUrl;
  var issuedCertificates = Props.issuedCertificates;
  var match = React.useState((function () {
          return /* ShowCourses */0;
        }));
  var view = match[0];
  var tmp;
  switch (view) {
    case /* ShowCourses */0 :
        tmp = coursesSection(courses, communities, currentSchoolAdmin);
        break;
    case /* ShowCommunities */1 :
        tmp = communitiesSection(communities);
        break;
    case /* ShowCertificates */2 :
        tmp = certificatesSection(issuedCertificates);
        break;
    
  }
  return React.createElement("div", {
              className: "bg-gray-100"
            }, React.createElement("div", {
                  className: "bg-white"
                }, headerSectiom(userName, userTitle, avatarUrl, showUserEdit), navSection(view, match[1], communities, issuedCertificates)), React.createElement("div", {
                  className: "pb-8"
                }, tmp));
}

var make = UsersHome__Root;

exports.str = str;
exports.headerSectiom = headerSectiom;
exports.navButtonClasses = navButtonClasses;
exports.navSection = navSection;
exports.courseLink = courseLink;
exports.ctaButton = ctaButton;
exports.ctaText = ctaText;
exports.studentLink = studentLink;
exports.callToAction = callToAction;
exports.ctaFooter = ctaFooter;
exports.communityLinks = communityLinks;
exports.courseLinks = courseLinks;
exports.coursesSection = coursesSection;
exports.communitiesSection = communitiesSection;
exports.certificatesSection = certificatesSection;
exports.make = make;
/*  Not a pure module */
