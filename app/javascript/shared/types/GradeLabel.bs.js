// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var GradeLabelsEmpty = Caml_exceptions.create("GradeLabel.GradeLabelsEmpty");

function decode(json) {
  return {
          label: Json_decode.field("label", Json_decode.string, json),
          grade: Json_decode.field("grade", Json_decode.$$int, json)
        };
}

function grade(t) {
  return t.grade;
}

function label(t) {
  return t.label;
}

function labelFor(gradeLabels, grade) {
  return List.find((function (gradeLabel) {
                return gradeLabel.grade === grade;
              }), gradeLabels).label;
}

function create(grade, label) {
  return {
          label: label,
          grade: grade
        };
}

function empty(grade) {
  return {
          label: "",
          grade: grade
        };
}

function update(label, t) {
  return {
          label: label,
          grade: t.grade
        };
}

function asJsObject(t) {
  return {
          grade: t.grade,
          label: t.label
        };
}

function valid(t) {
  return t.label.trim().length >= 1;
}

function makeFromJs(rawGradeLabel) {
  return {
          label: rawGradeLabel.label,
          grade: rawGradeLabel.grade
        };
}

function maxGrade(gradeLabels) {
  var aux = function (_max, _remains) {
    while(true) {
      var remains = _remains;
      var max = _max;
      if (remains) {
        _remains = remains[1];
        _max = Math.max(remains[0].grade, max);
        continue ;
      } else {
        return max;
      }
    };
  };
  var validGrade = aux(0, gradeLabels);
  if (validGrade !== 0) {
    return validGrade;
  } else {
    Rollbar.error("GradeLabel.maxGrade received an empty list of gradeLabels");
    throw GradeLabelsEmpty;
  }
}

exports.GradeLabelsEmpty = GradeLabelsEmpty;
exports.decode = decode;
exports.grade = grade;
exports.label = label;
exports.labelFor = labelFor;
exports.create = create;
exports.empty = empty;
exports.update = update;
exports.asJsObject = asJsObject;
exports.valid = valid;
exports.makeFromJs = makeFromJs;
exports.maxGrade = maxGrade;
/* No side effect */
