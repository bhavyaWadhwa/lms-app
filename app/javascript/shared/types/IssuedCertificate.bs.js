// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var DateFns = require("../utils/DateFns.bs.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var OptionUtils = require("../utils/OptionUtils.bs.js");

function serialNumber(t) {
  return t.serialNumber;
}

function issuedTo(t) {
  return t.issuedTo;
}

function issuedAt(t) {
  return t.issuedAt;
}

function courseName(t) {
  return t.courseName;
}

function imageUrl(t) {
  return t.imageUrl;
}

function margin(t) {
  return t.margin;
}

function nameOffsetTop(t) {
  return t.nameOffsetTop;
}

function fontSize(t) {
  return t.fontSize;
}

function qrCorner(t) {
  return t.qrCorner;
}

function qrScale(t) {
  return t.qrScale;
}

function decode(json) {
  return {
          serialNumber: Json_decode.field("serialNumber", Json_decode.string, json),
          issuedTo: Json_decode.field("issuedTo", Json_decode.string, json),
          issuedAt: Json_decode.field("issuedAt", DateFns.decodeISO, json),
          courseName: Json_decode.field("courseName", Json_decode.string, json),
          imageUrl: Json_decode.field("imageUrl", Json_decode.string, json),
          margin: Json_decode.field("margin", Json_decode.$$int, json),
          fontSize: Json_decode.field("fontSize", Json_decode.$$int, json),
          nameOffsetTop: Json_decode.field("nameOffsetTop", Json_decode.$$int, json),
          qrCorner: OptionUtils.mapWithDefault((function (corner) {
                  switch (corner) {
                    case "BottomLeft" :
                        return /* BottomLeft */4;
                    case "BottomRight" :
                        return /* BottomRight */3;
                    case "Hidden" :
                        return /* Hidden */0;
                    case "TopLeft" :
                        return /* TopLeft */1;
                    case "TopRight" :
                        return /* TopRight */2;
                    default:
                      Rollbar.warning("Encountered unknown value for qrCorder: " + (corner + " while decoding props."));
                      return /* Hidden */0;
                  }
                }), /* Hidden */0, Json_decode.optional((function (param) {
                      return Json_decode.field("qrCorner", Json_decode.string, param);
                    }), json)),
          qrScale: Json_decode.field("qrScale", Json_decode.$$int, json)
        };
}

exports.serialNumber = serialNumber;
exports.issuedTo = issuedTo;
exports.issuedAt = issuedAt;
exports.courseName = courseName;
exports.imageUrl = imageUrl;
exports.margin = margin;
exports.nameOffsetTop = nameOffsetTop;
exports.fontSize = fontSize;
exports.qrCorner = qrCorner;
exports.qrScale = qrScale;
exports.decode = decode;
/* DateFns Not a pure module */
