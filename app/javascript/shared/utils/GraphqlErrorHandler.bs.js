// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var $$Notification = require("../Notification.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

function Make($$Error) {
  var Errors = Caml_exceptions.create("GraphqlErrorHandler.Make(Error).Errors");
  var handler = function (param, match) {
    if (Caml_exceptions.caml_is_extension(match) && match[0] === Errors) {
      return $$Array.iter((function (error) {
                    var match = Curry._1($$Error.notification, error);
                    return $$Notification.error(match[0], match[1]);
                  }), match[1]);
    }
    
  };
  var $$catch = function (callback, promise) {
    return promise.catch((function (error) {
                  var match = handler(/* () */0, error);
                  if (match !== undefined) {
                    Curry._1(callback, /* () */0);
                  } else {
                    $$Notification.error("Something went wrong!", "An unexpected error has occurred, and our team has been notified about this. Please reload the page and try again.");
                    Curry._1(callback, /* () */0);
                  }
                  return Promise.resolve(/* () */0);
                }));
  };
  return {
          Errors: Errors,
          handler: handler,
          $$catch: $$catch
        };
}

exports.Make = Make;
/* Notification Not a pure module */
