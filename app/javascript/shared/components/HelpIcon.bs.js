// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var FaIcon = require("./FaIcon.bs.js");
var OptionUtils = require("../utils/OptionUtils.bs.js");

function str(prim) {
  return prim;
}

((require("./HelpIcon.css")));

function onWindowClick(helpVisible, setHelpVisible, _event) {
  if (helpVisible) {
    return Curry._1(setHelpVisible, (function (param) {
                  return false;
                }));
  } else {
    return /* () */0;
  }
}

function toggleHelp(setHelpVisible, _event) {
  return Curry._1(setHelpVisible, (function (helpVisible) {
                return !helpVisible;
              }));
}

function alignmentClass(alignment) {
  switch (alignment) {
    case /* AlignLeft */0 :
        return " left-0";
    case /* AlignRight */1 :
        return " right-0";
    case /* AlignCenter */2 :
        return " help-icon__help-container--center";
    
  }
}

function responsiveAlignmentClass(responsiveAlignment) {
  if (responsiveAlignment.tag) {
    var mobileClass = alignmentClass(responsiveAlignment[0]);
    var desktopClass;
    switch (responsiveAlignment[1]) {
      case /* AlignLeft */0 :
          desktopClass = " md:right-auto md:left-0";
          break;
      case /* AlignRight */1 :
          desktopClass = " md:left-auto md:right-0";
          break;
      case /* AlignCenter */2 :
          desktopClass = " help-icon__help-container--md-center";
          break;
      
    }
    return mobileClass + (" " + desktopClass);
  } else {
    return alignmentClass(responsiveAlignment[0]);
  }
}

function HelpIcon(Props) {
  var classNameOpt = Props.className;
  var link = Props.link;
  var responsiveAlignmentOpt = Props.responsiveAlignment;
  var children = Props.children;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var responsiveAlignment = responsiveAlignmentOpt !== undefined ? responsiveAlignmentOpt : /* NonResponsive */Block.__(0, [/* AlignCenter */2]);
  var match = React.useState((function () {
          return false;
        }));
  var setHelpVisible = match[1];
  var helpVisible = match[0];
  React.useEffect((function () {
          var curriedFunction = function (param) {
            return onWindowClick(helpVisible, setHelpVisible, param);
          };
          var $$window$1 = window;
          var removeEventListener = function (param) {
            $$window$1.removeEventListener("click", curriedFunction);
            return /* () */0;
          };
          if (helpVisible) {
            $$window$1.addEventListener("click", curriedFunction);
            return removeEventListener;
          } else {
            removeEventListener(/* () */0);
            return ;
          }
        }), [helpVisible]);
  return React.createElement("div", {
              className: "inline-block relative " + className,
              onClick: (function (param) {
                  return Curry._1(setHelpVisible, (function (helpVisible) {
                                return !helpVisible;
                              }));
                })
            }, React.createElement(FaIcon.make, {
                  classes: "fas fa-question-circle hover:text-gray-700 cursor-pointer"
                }), helpVisible ? React.createElement("div", {
                    className: "help-icon__help-container overflow-y-auto mt-1 border border-gray-900 absolute z-50 px-4 py-3 shadow-lg leading-snug rounded-lg bg-gray-900 text-white max-w-xs text-center" + responsiveAlignmentClass(responsiveAlignment),
                    onClick: (function ($$event) {
                        $$event.stopPropagation();
                        return /* () */0;
                      })
                  }, children, OptionUtils.$$default(null, OptionUtils.map((function (link) {
                              return React.createElement("a", {
                                          className: "block mt-1 text-blue-300 hover:text-blue:200",
                                          href: link,
                                          target: "_blank"
                                        }, React.createElement(FaIcon.make, {
                                              classes: "fas fa-external-link-square-alt"
                                            }), React.createElement("span", {
                                              className: "ml-1"
                                            }, "Read more"));
                            }), link))) : null);
}

var make = HelpIcon;

exports.str = str;
exports.onWindowClick = onWindowClick;
exports.toggleHelp = toggleHelp;
exports.alignmentClass = alignmentClass;
exports.responsiveAlignmentClass = responsiveAlignmentClass;
exports.make = make;
/*  Not a pure module */
