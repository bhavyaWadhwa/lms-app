// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var FaIcon = require("./FaIcon.bs.js");
var ContentBlock = require("../types/ContentBlock.bs.js");
var MarkdownBlock = require("./MarkdownBlock.bs.js");

((require("./TargetContentView.css")));

function str(prim) {
  return prim;
}

function renderBlockClasses(block) {
  var match = ContentBlock.blockType(block);
  switch (match.tag | 0) {
    case /* Markdown */0 :
    case /* File */1 :
    case /* Image */2 :
        return "mt-6";
    case /* Embed */3 :
        return "mt-6 pb-7";
    
  }
}

function markdownContentBlock(markdown) {
  return React.createElement(MarkdownBlock.make, {
              markdown: markdown,
              profile: /* Permissive */2
            });
}

function fileContentBlock(url, title, filename) {
  return React.createElement("a", {
              className: "flex justify-between bg-white border rounded-lg px-6 py-4 items-center shadow hover:border-gray-500 hover:bg-gray-100 hover:text-primary-500 hover:shadow-md",
              href: url,
              target: "_blank"
            }, React.createElement("div", {
                  className: "flex items-center"
                }, React.createElement(FaIcon.make, {
                      classes: "text-4xl text-gray-800 far fa-file-alt"
                    }), React.createElement("div", {
                      className: "pl-4 leading-tight"
                    }, React.createElement("div", {
                          className: "text-lg font-semibold"
                        }, title), React.createElement("div", {
                          className: "text-sm italic text-gray-600"
                        }, filename))), React.createElement("div", undefined, React.createElement(FaIcon.make, {
                      classes: "text-2xl fas fa-download"
                    })));
}

function imageContentBlock(url, caption) {
  return React.createElement("div", {
              className: "rounded-lg bg-white text-center"
            }, React.createElement("img", {
                  className: "mx-auto",
                  alt: caption,
                  src: url
                }), React.createElement("div", {
                  className: "px-4 py-2 text-sm italic"
                }, caption));
}

function embedContentBlock(_url, embedCode) {
  return React.createElement("div", {
              className: "learn-content-block__embed",
              dangerouslySetInnerHTML: {
                __html: embedCode
              }
            });
}

function TargetContentView(Props) {
  var contentBlocks = Props.contentBlocks;
  return React.createElement("div", {
              className: "text-base",
              id: "learn-component"
            }, $$Array.map((function (block) {
                    var match = ContentBlock.blockType(block);
                    var renderedBlock;
                    switch (match.tag | 0) {
                      case /* Markdown */0 :
                          renderedBlock = markdownContentBlock(match[0]);
                          break;
                      case /* File */1 :
                          renderedBlock = fileContentBlock(match[0], match[1], match[2]);
                          break;
                      case /* Image */2 :
                          renderedBlock = imageContentBlock(match[0], match[1]);
                          break;
                      case /* Embed */3 :
                          renderedBlock = embedContentBlock(match[0], match[1]);
                          break;
                      
                    }
                    return React.createElement("div", {
                                key: ContentBlock.id(block),
                                className: renderBlockClasses(block)
                              }, renderedBlock);
                  }), ContentBlock.sort(contentBlocks)));
}

var make = TargetContentView;

exports.str = str;
exports.renderBlockClasses = renderBlockClasses;
exports.markdownContentBlock = markdownContentBlock;
exports.fileContentBlock = fileContentBlock;
exports.imageContentBlock = imageContentBlock;
exports.embedContentBlock = embedContentBlock;
exports.make = make;
/*  Not a pure module */
