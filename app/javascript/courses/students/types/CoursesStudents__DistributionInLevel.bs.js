// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var ArrayUtils = require("../../../shared/utils/ArrayUtils.bs.js");

function id(t) {
  return t.id;
}

function number(t) {
  return t.number;
}

function studentsInLevel(t) {
  return t.studentsInLevel;
}

function teamsInLevel(t) {
  return t.teamsInLevel;
}

function unlocked(t) {
  return t.unlocked;
}

function percentageStudents(t, totalStudents) {
  return t.studentsInLevel / totalStudents * 100.0;
}

function fromJsObject(jsObject) {
  return {
          id: jsObject.id,
          number: jsObject.number,
          studentsInLevel: jsObject.studentsInLevel,
          teamsInLevel: jsObject.teamsInLevel,
          unlocked: jsObject.unlocked
        };
}

function sort(levels) {
  return ArrayUtils.copyAndSort((function (x, y) {
                return x.number - y.number | 0;
              }), levels);
}

function levelsCompletedByAllStudents(levels) {
  var aux = function (_completedLevels, _levels) {
    while(true) {
      var levels = _levels;
      var completedLevels = _completedLevels;
      if (levels) {
        var head = levels[0];
        if (head.studentsInLevel === 0) {
          _levels = levels[1];
          _completedLevels = $$Array.append(completedLevels, [head]);
          continue ;
        } else {
          return completedLevels;
        }
      } else {
        return completedLevels;
      }
    };
  };
  var ls = aux([], $$Array.to_list(sort(levels)));
  if (ls.length === levels.length) {
    return [];
  } else {
    return ls;
  }
}

function shortName(t) {
  return "L" + String(t.number);
}

exports.id = id;
exports.number = number;
exports.studentsInLevel = studentsInLevel;
exports.teamsInLevel = teamsInLevel;
exports.unlocked = unlocked;
exports.percentageStudents = percentageStudents;
exports.fromJsObject = fromJsObject;
exports.sort = sort;
exports.levelsCompletedByAllStudents = levelsCompletedByAllStudents;
exports.shortName = shortName;
/* ArrayUtils Not a pure module */
