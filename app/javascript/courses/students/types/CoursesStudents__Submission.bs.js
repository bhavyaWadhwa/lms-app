// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var DateFns = require("../../../shared/utils/DateFns.bs.js");
var ArrayUtils = require("../../../shared/utils/ArrayUtils.bs.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function make(id, title, createdAt, passedAt, levelId, evaluatorId) {
  return {
          id: id,
          title: title,
          createdAt: createdAt,
          passedAt: passedAt,
          evaluatorId: evaluatorId,
          levelId: levelId
        };
}

function id(t) {
  return t.id;
}

function levelId(t) {
  return t.levelId;
}

function title(t) {
  return t.title;
}

function evaluatorId(t) {
  return t.evaluatorId;
}

function sort(submissions) {
  return ArrayUtils.copyAndSort((function (x, y) {
                return DateFns.differenceInSeconds(y.createdAt, x.createdAt);
              }), submissions);
}

function failed(t) {
  var match = t.passedAt;
  return match === undefined;
}

function createdAtPretty(t) {
  return DateFns.format(t.createdAt, "MMMM d, yyyy");
}

function timeDistance(t) {
  return DateFns.formatDistanceToNowStrict(t.createdAt, true, undefined, undefined, /* () */0);
}

function makeFromJs(submissions) {
  return submissions.map((function (submission) {
                if (submission !== undefined) {
                  var submission$1 = Caml_option.valFromOption(submission);
                  var createdAt = DateFns.decodeISO(submission$1.createdAt);
                  var passedAt = Belt_Option.map(submission$1.passedAt, DateFns.decodeISO);
                  return /* :: */[
                          make(submission$1.id, submission$1.title, createdAt, passedAt, submission$1.levelId, submission$1.evaluatorId),
                          /* [] */0
                        ];
                } else {
                  return /* [] */0;
                }
              }));
}

exports.make = make;
exports.id = id;
exports.levelId = levelId;
exports.title = title;
exports.evaluatorId = evaluatorId;
exports.sort = sort;
exports.failed = failed;
exports.createdAtPretty = createdAtPretty;
exports.timeDistance = timeDistance;
exports.makeFromJs = makeFromJs;
/* DateFns Not a pure module */
