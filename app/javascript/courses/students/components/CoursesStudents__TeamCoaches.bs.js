// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var Avatar = require("../../../shared/Avatar.bs.js");
var Tooltip = require("../../../shared/components/Tooltip.bs.js");
var UserProxy = require("../../../shared/types/UserProxy.bs.js");
var ArrayUtils = require("../../../shared/utils/ArrayUtils.bs.js");
var OptionUtils = require("../../../shared/utils/OptionUtils.bs.js");

function str(prim) {
  return prim;
}

function avatarClasses(size) {
  var mdSize = size[1];
  var defaultSize = size[0];
  return "w-" + (defaultSize + (" h-" + (defaultSize + (" md:w-" + (mdSize + (" md:h-" + (mdSize + " text-xs border border-gray-400 rounded-full overflow-hidden flex-shrink-0 object-cover")))))));
}

function avatar(sizeOpt, avatarUrl, name) {
  var size = sizeOpt !== undefined ? sizeOpt : /* tuple */[
      "8",
      "10"
    ];
  if (avatarUrl !== undefined) {
    return React.createElement("img", {
                className: avatarClasses(size),
                src: avatarUrl
              });
  } else {
    return React.createElement(Avatar.make, {
                name: name,
                className: avatarClasses(size)
              });
  }
}

function CoursesStudents__TeamCoaches(Props) {
  var tooltipPositionOpt = Props.tooltipPosition;
  var defaultAvatarSizeOpt = Props.defaultAvatarSize;
  var mdAvatarSizeOpt = Props.mdAvatarSize;
  var title = Props.title;
  var className = Props.className;
  var coaches = Props.coaches;
  var tooltipPosition = tooltipPositionOpt !== undefined ? tooltipPositionOpt : /* Top */4202101;
  var defaultAvatarSize = defaultAvatarSizeOpt !== undefined ? defaultAvatarSizeOpt : "6";
  var mdAvatarSize = mdAvatarSizeOpt !== undefined ? mdAvatarSizeOpt : "8";
  if (ArrayUtils.isNotEmpty(coaches)) {
    var listedCoaches = coaches.length <= 4 ? coaches : coaches.slice(0, 3);
    var otherCoaches;
    if (coaches.length > 4) {
      var names = coaches.slice(3).map((function (coach) {
              return React.createElement("div", {
                          key: UserProxy.userId(coach)
                        }, UserProxy.name(coach));
            }));
      var count = coaches.length - 3 | 0;
      otherCoaches = /* tuple */[
        names,
        count
      ];
    } else {
      otherCoaches = undefined;
    }
    return React.createElement("div", {
                className: className
              }, React.createElement("div", {
                    className: "text-xs"
                  }, title), React.createElement("div", {
                    className: "inline-flex"
                  }, $$Array.map((function (coach) {
                          return React.createElement(Tooltip.make, {
                                      tip: UserProxy.name(coach),
                                      className: "-mr-1",
                                      position: tooltipPosition,
                                      children: avatar(/* tuple */[
                                            defaultAvatarSize,
                                            mdAvatarSize
                                          ], UserProxy.avatarUrl(coach), UserProxy.name(coach)),
                                      key: UserProxy.userId(coach)
                                    });
                        }), listedCoaches), OptionUtils.mapWithDefault((function (param) {
                          return React.createElement(Tooltip.make, {
                                      tip: param[0],
                                      className: "-mr-1",
                                      children: React.createElement(Avatar.make, {
                                            colors: /* tuple */[
                                              "#EEE",
                                              "#000"
                                            ],
                                            name: "+ " + String(param[1]),
                                            className: avatarClasses(/* tuple */[
                                                  defaultAvatarSize,
                                                  mdAvatarSize
                                                ])
                                          })
                                    });
                        }), null, otherCoaches)));
  } else {
    return React.createElement("div", undefined);
  }
}

var make = CoursesStudents__TeamCoaches;

exports.str = str;
exports.avatarClasses = avatarClasses;
exports.avatar = avatar;
exports.make = make;
/* react Not a pure module */
