// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var CannotParseUnknownRole = Caml_exceptions.create("CoursesCurriculum__Target.CannotParseUnknownRole");

function decode(json) {
  var unknownRole = Json_decode.field("role", Json_decode.string, json);
  var tmp;
  switch (unknownRole) {
    case "student" :
        tmp = /* Student */0;
        break;
    case "team" :
        tmp = /* Team */1;
        break;
    default:
      throw [
            CannotParseUnknownRole,
            unknownRole
          ];
  }
  return {
          id: Json_decode.field("id", Json_decode.string, json),
          role: tmp,
          title: Json_decode.field("title", Json_decode.string, json),
          targetGroupId: Json_decode.field("targetGroupId", Json_decode.string, json),
          sortIndex: Json_decode.field("sortIndex", Json_decode.$$int, json),
          resubmittable: Json_decode.field("resubmittable", Json_decode.bool, json),
          prerequisiteTargetIds: Json_decode.field("prerequisiteTargetIds", (function (param) {
                  return Json_decode.list(Json_decode.string, param);
                }), json),
          reviewed: Json_decode.field("reviewed", Json_decode.bool, json)
        };
}

function id(t) {
  return t.id;
}

function role(t) {
  return t.role;
}

function title(t) {
  return t.title;
}

function sortIndex(t) {
  return t.sortIndex;
}

function targetGroupId(t) {
  return t.targetGroupId;
}

function prerequisiteTargetIds(t) {
  return t.prerequisiteTargetIds;
}

function resubmittable(t) {
  return t.resubmittable;
}

function reviewed(t) {
  return t.reviewed;
}

exports.CannotParseUnknownRole = CannotParseUnknownRole;
exports.decode = decode;
exports.id = id;
exports.role = role;
exports.title = title;
exports.sortIndex = sortIndex;
exports.targetGroupId = targetGroupId;
exports.prerequisiteTargetIds = prerequisiteTargetIds;
exports.resubmittable = resubmittable;
exports.reviewed = reviewed;
/* No side effect */
