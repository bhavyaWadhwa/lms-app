// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");
var ArrayUtils = require("../../../shared/utils/ArrayUtils.bs.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var EvaluationCriterion = require("../../../shared/types/EvaluationCriterion.bs.js");

function decode(json) {
  return {
          submissionId: Json_decode.field("submissionId", Json_decode.string, json),
          evaluationCriterionId: Json_decode.field("evaluationCriterionId", Json_decode.string, json),
          grade: Json_decode.field("grade", Json_decode.$$int, json)
        };
}

function sort(criteria, grades) {
  return $$Array.to_list(ArrayUtils.copyAndSort((function (g1, g2) {
                    var ec1 = ArrayUtils.unsafeFind((function (ec) {
                            return EvaluationCriterion.id(ec) === g1.evaluationCriterionId;
                          }), "Unable to find evaluation criterion with ID: " + (g1.evaluationCriterionId + " in CoursesCurriculum__Grade"), $$Array.of_list(criteria));
                    var ec2 = ArrayUtils.unsafeFind((function (ec) {
                            return EvaluationCriterion.id(ec) === g2.evaluationCriterionId;
                          }), "Unable to find evaluation criterion with ID: " + (g2.evaluationCriterionId + " in CoursesCurriculum__Grade"), $$Array.of_list(criteria));
                    return $$String.compare(EvaluationCriterion.name(ec1), EvaluationCriterion.name(ec2));
                  }), $$Array.of_list(grades)));
}

function grade(t) {
  return t.grade;
}

function submissionId(t) {
  return t.submissionId;
}

function evaluationCriterionId(t) {
  return t.evaluationCriterionId;
}

exports.decode = decode;
exports.sort = sort;
exports.grade = grade;
exports.submissionId = submissionId;
exports.evaluationCriterionId = evaluationCriterionId;
/* ArrayUtils Not a pure module */
