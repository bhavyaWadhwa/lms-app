// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var FaIcon = require("../../../shared/components/FaIcon.bs.js");
var Dropdown = require("../../../shared/components/Dropdown.bs.js");
var CoursesCurriculum__Level = require("../types/CoursesCurriculum__Level.bs.js");

function str(prim) {
  return prim;
}

function levelZeroSelectorClasses(isSelected) {
  return "w-1/2 px-4 py-2 focus:outline-none text-sm font-semibold " + (
          isSelected ? "bg-primary-100 text-primary-500 hover:bg-primary-100 hover:text-primary-500" : ""
        );
}

function levelName(level) {
  return "L" + (String(CoursesCurriculum__Level.number(level)) + (": " + CoursesCurriculum__Level.name(level)));
}

function selectableLevels(orderedLevels, teamLevel, setSelectedLevelId) {
  var teamLevelNumber = CoursesCurriculum__Level.number(teamLevel);
  return $$Array.of_list(List.map((function (level) {
                    var levelNumber = CoursesCurriculum__Level.number(level);
                    var icon = levelNumber < teamLevelNumber ? "fas fa-check text-green-500" : (
                        levelNumber === teamLevelNumber ? "fas fa-map-marker-alt text-blue-400" : (
                            CoursesCurriculum__Level.isUnlocked(level) ? "inline-block" : "fas fa-lock text-gray-600"
                          )
                      );
                    return React.createElement("button", {
                                key: CoursesCurriculum__Level.id(level),
                                className: "focus:outline-none p-2 w-full text-left",
                                onClick: (function (param) {
                                    return Curry._1(setSelectedLevelId, CoursesCurriculum__Level.id(level));
                                  })
                              }, React.createElement("span", {
                                    className: "mr-2"
                                  }, React.createElement(FaIcon.make, {
                                        classes: "fa-fw " + icon
                                      })), levelName(level));
                  }), orderedLevels));
}

function untabbedLevelSelector(selectedLevel, orderedLevels, teamLevel, setSelectedLevelId) {
  var selected = React.createElement("button", {
        className: "font-semibold w-full px-2 h-10 flex items-center justify-between"
      }, React.createElement("span", {
            className: "flex-grow text-center truncate w-0"
          }, levelName(selectedLevel)), React.createElement(FaIcon.make, {
            classes: "fas fa-caret-down ml-1"
          }));
  return React.createElement(Dropdown.make, {
              selected: selected,
              contents: selectableLevels(orderedLevels, teamLevel, setSelectedLevelId),
              className: "flex-grow cursor-pointer rounded-lg bg-primary-100 hover:bg-gray-200 hover:text-primary-500"
            });
}

function tabbedLevelSelector(orderedLevels, teamLevel, selectedLevel, setSelectedLevelId, showLevelZero, setShowLevelZero, levelZero) {
  var selected = function (hideCaret) {
    return React.createElement("button", {
                className: "rounded-l-lg font-semibold w-full px-2 h-10 flex items-center justify-between"
              }, React.createElement("span", {
                    className: "flex-grow text-center truncate w-0"
                  }, levelName(selectedLevel)), React.createElement(FaIcon.make, {
                    classes: "fas fa-caret-down ml-1" + (
                      hideCaret ? " invisible" : ""
                    )
                  }));
  };
  var numberedLevelSelector = showLevelZero ? React.createElement("div", {
          className: "cursor-pointer text-sm flex-grow rounded-l-lg hover:bg-gray-200 hover:text-primary-500",
          onClick: (function (param) {
              return Curry._1(setShowLevelZero, false);
            })
        }, selected(true)) : React.createElement(Dropdown.make, {
          selected: selected(false),
          contents: selectableLevels(orderedLevels, teamLevel, setSelectedLevelId),
          className: "cursor-pointer flex-grow rounded-l-lg bg-primary-100 hover:bg-gray-200 hover:text-primary-500",
          key: "numbered-level-selector"
        });
  return [
          numberedLevelSelector,
          React.createElement("button", {
                key: "level-zero-selector",
                className: "border-l rounded-r-lg bg-white border-gray-400 font-semibold truncate hover:bg-gray-100 hover:text-primary-500 " + levelZeroSelectorClasses(showLevelZero),
                onClick: (function (_e) {
                    return Curry._1(setShowLevelZero, true);
                  })
              }, CoursesCurriculum__Level.name(levelZero))
        ];
}

function CoursesCurriculum__LevelSelector(Props) {
  var levels = Props.levels;
  var teamLevel = Props.teamLevel;
  var selectedLevel = Props.selectedLevel;
  var setSelectedLevelId = Props.setSelectedLevelId;
  var showLevelZero = Props.showLevelZero;
  var setShowLevelZero = Props.setShowLevelZero;
  var levelZero = Props.levelZero;
  var orderedLevels = CoursesCurriculum__Level.sort(List.filter((function (l) {
                return CoursesCurriculum__Level.number(l) !== 0;
              }))(levels));
  return React.createElement("div", {
              className: "bg-gray-100 px-3 py-2 mt-3 md:px-0 sticky top-0 z-20"
            }, React.createElement("div", {
                  className: "flex justify-center max-w-sm md:max-w-xl mx-auto rounded-lg border border-gray-400 h-11"
                }, levelZero !== undefined ? tabbedLevelSelector(orderedLevels, teamLevel, selectedLevel, setSelectedLevelId, showLevelZero, setShowLevelZero, levelZero) : untabbedLevelSelector(selectedLevel, orderedLevels, teamLevel, setSelectedLevelId)));
}

var make = CoursesCurriculum__LevelSelector;

exports.str = str;
exports.levelZeroSelectorClasses = levelZeroSelectorClasses;
exports.levelName = levelName;
exports.selectableLevels = selectableLevels;
exports.untabbedLevelSelector = untabbedLevelSelector;
exports.tabbedLevelSelector = tabbedLevelSelector;
exports.make = make;
/* react Not a pure module */
