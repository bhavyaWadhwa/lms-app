// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Avatar = require("../../../shared/Avatar.bs.js");
var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var GraphqlQuery = require("../../../shared/utils/GraphqlQuery.bs.js");
var MarkdownBlock = require("../../../shared/components/MarkdownBlock.bs.js");
var DisablingCover = require("../../../shared/components/DisablingCover.bs.js");
var CoursesReview__Feedback = require("../types/CoursesReview__Feedback.bs.js");
var CoursesReview__FeedbackEditor = require("./CoursesReview__FeedbackEditor.bs.js");

function str(prim) {
  return prim;
}

var ppx_printed_query = "mutation CreateFeedbackMutation($submissionId: ID!, $feedback: String!)  {\ncreateFeedback(submissionId: $submissionId, feedback: $feedback)  {\nsuccess  \n}\n\n}\n";

function parse(value) {
  var value$1 = Js_option.getExn(Js_json.decodeObject(value));
  var match = Js_dict.get(value$1, "createFeedback");
  var tmp;
  if (match !== undefined) {
    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));
    var match$1 = Js_dict.get(value$2, "success");
    var tmp$1;
    if (match$1 !== undefined) {
      var value$3 = Caml_option.valFromOption(match$1);
      var match$2 = Js_json.decodeBoolean(value$3);
      tmp$1 = match$2 !== undefined ? match$2 : Js_exn.raiseError("graphql_ppx: Expected boolean, got " + JSON.stringify(value$3));
    } else {
      tmp$1 = Js_exn.raiseError("graphql_ppx: Field success on type CreateFeedbackPayload is missing");
    }
    tmp = {
      success: tmp$1
    };
  } else {
    tmp = Js_exn.raiseError("graphql_ppx: Field createFeedback on type Mutation is missing");
  }
  return {
          createFeedback: tmp
        };
}

function make(submissionId, feedback, param) {
  return {
          query: ppx_printed_query,
          variables: Js_dict.fromArray([
                  /* tuple */[
                    "submissionId",
                    submissionId
                  ],
                  /* tuple */[
                    "feedback",
                    feedback
                  ]
                ].filter((function (param) {
                      return !Js_json.test(param[1], /* Null */5);
                    }))),
          parse: parse
        };
}

function makeWithVariables(variables) {
  var submissionId = variables.submissionId;
  var feedback = variables.feedback;
  return {
          query: ppx_printed_query,
          variables: Js_dict.fromArray([
                  /* tuple */[
                    "submissionId",
                    submissionId
                  ],
                  /* tuple */[
                    "feedback",
                    feedback
                  ]
                ].filter((function (param) {
                      return !Js_json.test(param[1], /* Null */5);
                    }))),
          parse: parse
        };
}

function makeVariables(submissionId, feedback, param) {
  return Js_dict.fromArray([
                /* tuple */[
                  "submissionId",
                  submissionId
                ],
                /* tuple */[
                  "feedback",
                  feedback
                ]
              ].filter((function (param) {
                    return !Js_json.test(param[1], /* Null */5);
                  })));
}

function definition_002(graphql_ppx_use_json_variables_fn, submissionId, feedback, param) {
  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([
                    /* tuple */[
                      "submissionId",
                      submissionId
                    ],
                    /* tuple */[
                      "feedback",
                      feedback
                    ]
                  ].filter((function (param) {
                        return !Js_json.test(param[1], /* Null */5);
                      }))));
}

var definition = /* tuple */[
  parse,
  ppx_printed_query,
  definition_002
];

function ret_type(f) {
  return { };
}

var MT_Ret = { };

var CreateFeedbackMutation = {
  ppx_printed_query: ppx_printed_query,
  query: ppx_printed_query,
  parse: parse,
  make: make,
  makeWithVariables: makeWithVariables,
  makeVariables: makeVariables,
  definition: definition,
  ret_type: ret_type,
  MT_Ret: MT_Ret
};

function createFeedback(submissionId, feedback, setState, addFeedbackCB) {
  Curry._1(setState, (function (state) {
          return {
                  saving: true,
                  newFeedback: state.newFeedback,
                  showFeedbackEditor: state.showFeedbackEditor
                };
        }));
  (function (eta) {
          return GraphqlQuery.sendQuery(undefined, eta);
        })(make(submissionId, feedback, /* () */0)).then((function (response) {
          if (response.createFeedback.success) {
            Curry._1(addFeedbackCB, feedback);
            Curry._1(setState, (function (param) {
                    return {
                            saving: false,
                            newFeedback: "",
                            showFeedbackEditor: false
                          };
                  }));
          } else {
            Curry._1(setState, (function (state) {
                    return {
                            saving: false,
                            newFeedback: state.newFeedback,
                            showFeedbackEditor: state.showFeedbackEditor
                          };
                  }));
          }
          return Promise.resolve(/* () */0);
        }));
  return /* () */0;
}

function showFeedback(feedback) {
  return $$Array.mapi((function (index, f) {
                var match = CoursesReview__Feedback.coachAvatarUrl(f);
                return React.createElement("div", {
                            key: String(index),
                            className: "border-t p-4 md:p-6"
                          }, React.createElement("div", {
                                className: "flex items-center"
                              }, React.createElement("div", {
                                    className: "flex-shrink-0 w-12 h-12 bg-gray-300 rounded-full overflow-hidden mr-3 object-cover"
                                  }, match !== undefined ? React.createElement("img", {
                                          src: match
                                        }) : React.createElement(Avatar.make, {
                                          name: CoursesReview__Feedback.coachName(f)
                                        })), React.createElement("div", undefined, React.createElement("p", {
                                        className: "text-xs leading-tight"
                                      }, "Feedback from:"), React.createElement("div", undefined, React.createElement("h4", {
                                            className: "font-semibold text-base leading-tight block md:inline-flex self-end"
                                          }, CoursesReview__Feedback.coachName(f)), React.createElement("span", {
                                            className: "block md:inline-flex text-xs text-gray-800 md:ml-2 leading-tight self-end"
                                          }, "(" + (CoursesReview__Feedback.coachTitle(f) + ")"))))), React.createElement("div", {
                                className: "md:ml-15"
                              }, React.createElement("p", {
                                    className: "text-xs leading-tight font-semibold inline-block p-1 bg-gray-200 rounded mt-3"
                                  }, CoursesReview__Feedback.createdAtPretty(f)), React.createElement(MarkdownBlock.make, {
                                    markdown: CoursesReview__Feedback.value(f),
                                    className: "pt-1 text-sm",
                                    profile: /* Permissive */2
                                  })));
              }), feedback);
}

function updateFeedbackCB(setState, newFeedback) {
  return Curry._1(setState, (function (state) {
                return {
                        saving: state.saving,
                        newFeedback: newFeedback,
                        showFeedbackEditor: state.showFeedbackEditor
                      };
              }));
}

function CoursesReview__ShowFeedback(Props) {
  var feedback = Props.feedback;
  var reviewed = Props.reviewed;
  var submissionId = Props.submissionId;
  var reviewChecklist = Props.reviewChecklist;
  var addFeedbackCB = Props.addFeedbackCB;
  var updateReviewChecklistCB = Props.updateReviewChecklistCB;
  var targetId = Props.targetId;
  var match = React.useState((function () {
          return {
                  saving: false,
                  newFeedback: "",
                  showFeedbackEditor: false
                };
        }));
  var setState = match[1];
  var state = match[0];
  return React.createElement("div", {
              "aria-label": "feedback-section",
              className: "pt-6"
            }, showFeedback(feedback), reviewed ? React.createElement("div", {
                    className: "bg-white rounded-b-lg"
                  }, state.showFeedbackEditor ? React.createElement("div", undefined, React.createElement(DisablingCover.make, {
                              disabled: state.saving,
                              children: React.createElement(CoursesReview__FeedbackEditor.make, {
                                    feedback: state.newFeedback,
                                    updateFeedbackCB: (function (param) {
                                        return updateFeedbackCB(setState, param);
                                      }),
                                    label: "Add feedback",
                                    reviewChecklist: reviewChecklist,
                                    updateReviewChecklistCB: updateReviewChecklistCB,
                                    checklistVisible: false,
                                    targetId: targetId
                                  })
                            }), React.createElement("div", {
                              className: "flex justify-end pr-4 pl-10 pt-2 pb-4 md:px-6 md:pb-6"
                            }, React.createElement("button", {
                                  className: "btn btn-success border border-green-600 w-full md:w-auto",
                                  disabled: state.newFeedback === "" || state.saving,
                                  onClick: (function (param) {
                                      return createFeedback(submissionId, state.newFeedback, setState, addFeedbackCB);
                                    })
                                }, "Share Feedback"))) : React.createElement("div", {
                          className: "bg-gray-200 px-3 py-5 shadow-inner rounded-b-lg text-center"
                        }, React.createElement("button", {
                              className: "btn btn-primary-ghost cursor-pointer shadow hover:shadow-lg w-full md:w-auto",
                              onClick: (function (param) {
                                  return Curry._1(setState, (function (state) {
                                                return {
                                                        saving: state.saving,
                                                        newFeedback: state.newFeedback,
                                                        showFeedbackEditor: true
                                                      };
                                              }));
                                })
                            }, feedback.length !== 0 ? "Add another feedback" : "Add feedback"))) : null);
}

var make$1 = CoursesReview__ShowFeedback;

exports.str = str;
exports.CreateFeedbackMutation = CreateFeedbackMutation;
exports.createFeedback = createFeedback;
exports.showFeedback = showFeedback;
exports.updateFeedbackCB = updateFeedbackCB;
exports.make = make$1;
/* react Not a pure module */
