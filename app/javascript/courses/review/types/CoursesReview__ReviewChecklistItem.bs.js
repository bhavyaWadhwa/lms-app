// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var CoursesReview__ReviewChecklistResult = require("./CoursesReview__ReviewChecklistResult.bs.js");

function title(t) {
  return t.title;
}

function result(t) {
  return t.result;
}

function make(title, result) {
  return {
          title: title,
          result: result
        };
}

function makeFromJs(data) {
  return data.map((function (rc) {
                return {
                        title: rc.title,
                        result: CoursesReview__ReviewChecklistResult.makeFromJs(rc.result)
                      };
              }));
}

function empty(param) {
  return [{
            title: "",
            result: [CoursesReview__ReviewChecklistResult.empty(/* () */0)]
          }];
}

function emptyTemplate(param) {
  return [{
            title: "Default checklist",
            result: CoursesReview__ReviewChecklistResult.emptyTemplate(/* () */0)
          }];
}

function updateTitle(title, t) {
  return {
          title: title,
          result: t.result
        };
}

function updateChecklist(result, t) {
  return {
          title: t.title,
          result: result
        };
}

function replace(t, itemIndex, result) {
  return $$Array.mapi((function (index, item) {
                if (index === itemIndex) {
                  return t;
                } else {
                  return item;
                }
              }), result);
}

function appendEmptyChecklistItem(t) {
  return {
          title: t.title,
          result: $$Array.append(t.result, [CoursesReview__ReviewChecklistResult.empty(/* () */0)])
        };
}

function deleteResultItem(index, t) {
  return {
          title: t.title,
          result: t.result.filter((function (_el, i) {
                  return i !== index;
                }))
        };
}

function trim(t) {
  return {
          title: $$String.trim(t.title),
          result: $$Array.map(CoursesReview__ReviewChecklistResult.trim, t.result)
        };
}

function encode(t) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "title",
                t.title
              ],
              /* :: */[
                /* tuple */[
                  "result",
                  Json_encode.array(CoursesReview__ReviewChecklistResult.encode, t.result)
                ],
                /* [] */0
              ]
            ]);
}

function encodeArray(checklist) {
  return Json_encode.array(encode, checklist);
}

exports.title = title;
exports.result = result;
exports.make = make;
exports.makeFromJs = makeFromJs;
exports.empty = empty;
exports.emptyTemplate = emptyTemplate;
exports.updateTitle = updateTitle;
exports.updateChecklist = updateChecklist;
exports.replace = replace;
exports.appendEmptyChecklistItem = appendEmptyChecklistItem;
exports.deleteResultItem = deleteResultItem;
exports.trim = trim;
exports.encode = encode;
exports.encodeArray = encodeArray;
/* No side effect */
