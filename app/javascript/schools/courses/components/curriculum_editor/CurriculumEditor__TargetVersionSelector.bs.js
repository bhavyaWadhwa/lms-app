// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

function str(prim) {
  return prim;
}

function handleClick(setShowDropdown, versions, $$event) {
  $$event.preventDefault();
  if (versions.length > 1) {
    return Curry._1(setShowDropdown, (function (showDropdown) {
                  return !showDropdown;
                }));
  } else {
    return 0;
  }
}

function handleVersionSelect(setShowDropdown, selectVersionCB, selectedVersion, $$event) {
  $$event.preventDefault();
  Curry._1(setShowDropdown, (function (showDropdown) {
          return !showDropdown;
        }));
  return Curry._1(selectVersionCB, selectedVersion);
}

function handleViewMode(switchViewModeCB, previewMode, $$event) {
  $$event.preventDefault();
  return Curry._1(switchViewModeCB, previewMode);
}

function handleRestoreVersion(handleRestoreVersionCB, versionOn, $$event) {
  $$event.preventDefault();
  return Curry._1(handleRestoreVersionCB, versionOn);
}

var previewModeButtonEnableClass = "bg-primary-100 shadow-inner text-primary-500";

function CurriculumEditor__TargetVersionSelector(Props) {
  var versions = Props.versions;
  var selectedVersion = Props.selectedVersion;
  var selectVersionCB = Props.selectVersionCB;
  var previewMode = Props.previewMode;
  var switchViewModeCB = Props.switchViewModeCB;
  var handleRestoreVersionCB = Props.handleRestoreVersionCB;
  var match = React.useState((function () {
          return false;
        }));
  var setShowDropdown = match[1];
  return React.createElement("div", {
              className: "flex justify-between items-end"
            }, React.createElement("div", {
                  className: "w-2/6"
                }, selectedVersion === Caml_array.caml_array_get(versions, 0) ? React.createElement("div", {
                        className: "flex rounded-lg border border-gray-400"
                      }, React.createElement("button", {
                            className: "w-1/2 py-2 px-3 font-semibold rounded-l-lg text-sm focus:outline-none " + (
                              previewMode ? previewModeButtonEnableClass : "bg-white shadow-md hover:shadow hover:text-primary-500 hover:bg-gray-100"
                            ),
                            onClick: (function (param) {
                                return handleViewMode(switchViewModeCB, true, param);
                              })
                          }, "Preview"), React.createElement("button", {
                            className: "w-1/2 py-2 px-3 font-semibold rounded-r-lg text-sm focus:outline-none " + (
                              previewMode ? "bg-white shadow-md hover:shadow hover:text-primary-500 hover:bg-gray-100" : previewModeButtonEnableClass
                            ),
                            onClick: (function (param) {
                                return handleViewMode(switchViewModeCB, false, param);
                              })
                          }, "Edit")) : null), React.createElement("div", {
                  className: "w-4/6 flex justify-end items-end"
                }, selectedVersion === Caml_array.caml_array_get(versions, 0) ? null : React.createElement("button", {
                        className: "btn btn-warning border border-orange-500 mr-4",
                        onClick: (function (param) {
                            return handleRestoreVersion(handleRestoreVersionCB, selectedVersion, param);
                          })
                      }, "Restore this version"), React.createElement("div", {
                      className: "relative"
                    }, React.createElement("div", {
                          className: "inline-block"
                        }, React.createElement("label", {
                              className: "text-xs block text-gray-600 mb-1"
                            }, versions.length > 1 ? "Versions" : "Version"), React.createElement("button", {
                              className: "target-editor__version-dropdown-button text-sm appearance-none bg-white border inline-flex items-center justify-between focus:outline-none font-semibold relative rounded " + (
                                versions.length > 1 ? "px-3 border-gray-400 hover:bg-gray-100 hover:shadow-lg" : "border-transparent cursor-auto"
                              ),
                              onClick: (function (param) {
                                  return handleClick(setShowDropdown, versions, param);
                                })
                            }, React.createElement("span", {
                                  className: "flex items-center py-2"
                                }, React.createElement("span", {
                                      className: "truncate text-left"
                                    }, selectedVersion)), versions.length > 1 ? React.createElement("span", {
                                    className: "text-right pl-3 py-2 border-l border-gray-400"
                                  }, React.createElement("i", {
                                        className: "fas fa-chevron-down text-sm"
                                      })) : null)), match[0] ? React.createElement("ul", {
                            className: "target-editor__version-dropdown-list text-sm bg-white font-semibold border border-gray-400 mt-1 shadow-lg rounded-lg border absolute overflow-auto h-auto w-full z-20",
                            id: "version-selection-list"
                          }, $$Array.of_list(List.map((function (version) {
                                      return React.createElement("li", {
                                                  key: version,
                                                  className: "target-editor__version-dropdown-list-item flex justify-between whitespace-no-wrap px-3 py-2 cursor-pointer hover:bg-gray-100 hover:text-primary-500",
                                                  id: version,
                                                  onClick: (function (param) {
                                                      return handleVersionSelect(setShowDropdown, selectVersionCB, version, param);
                                                    })
                                                }, version);
                                    }), List.filter((function (version) {
                                            return version !== selectedVersion;
                                          }))($$Array.to_list(versions))))) : null)));
}

var make = CurriculumEditor__TargetVersionSelector;

exports.str = str;
exports.handleClick = handleClick;
exports.handleVersionSelect = handleVersionSelect;
exports.handleViewMode = handleViewMode;
exports.handleRestoreVersion = handleRestoreVersion;
exports.previewModeButtonEnableClass = previewModeButtonEnableClass;
exports.make = make;
/* react Not a pure module */
