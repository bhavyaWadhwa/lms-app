// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Link = require("../../../../shared/components/Link.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ListUtils = require("../../../../shared/utils/ListUtils.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var WindowUtils = require("../../../../shared/utils/WindowUtils.bs.js");
var ReasonReactRouter = require("reason-react/src/ReasonReactRouter.js");
var CurriculumEditor__Course = require("../../types/curriculum_editor/CurriculumEditor__Course.bs.js");
var CurriculumEditor__Target = require("../../types/curriculum_editor/CurriculumEditor__Target.bs.js");
var SchoolAdmin__EditorDrawer = require("../../../components/SchoolAdmin__EditorDrawer.bs.js");
var CurriculumEditor__ContentEditor = require("./CurriculumEditor__ContentEditor.bs.js");
var CurriculumEditor__VersionsEditor = require("./CurriculumEditor__VersionsEditor.bs.js");
var CurriculumEditor__TargetDetailsEditor = require("./CurriculumEditor__TargetDetailsEditor.bs.js");

((require("./CurriculumEditor__TargetDrawer.css")));

function str(prim) {
  return prim;
}

function confirmDirtyAction(dirty, action) {
  if (dirty) {
    return WindowUtils.confirm(undefined, "There are unsaved changes. Are you sure you want to discard them?", (function (param) {
                  return Curry._1(action, /* () */0);
                }));
  } else {
    return Curry._1(action, /* () */0);
  }
}

function tab(page, selectedPage, pathPrefix, dirty, setDirty) {
  var defaultClasses = "curriculum-editor__target-drawer-tab cursor-pointer";
  var match;
  switch (page) {
    case /* Content */0 :
        match = /* tuple */[
          "Content",
          "content",
          "fa-pen-nib"
        ];
        break;
    case /* Details */1 :
        match = /* tuple */[
          "Details",
          "details",
          "fa-list-alt"
        ];
        break;
    case /* Versions */2 :
        match = /* tuple */[
          "Versions",
          "versions",
          "fa-code-branch"
        ];
        break;
    
  }
  var path = pathPrefix + match[1];
  var selected = page === selectedPage;
  var classes = selected ? "curriculum-editor__target-drawer-tab cursor-pointer curriculum-editor__target-drawer-tab--selected" : defaultClasses;
  var confirm = dirty ? "There are unsaved changes. Are you sure you want to discard them?" : undefined;
  var tmp = {
    href: path,
    className: classes,
    onClick: (function (_e) {
        return Curry._1(setDirty, (function (param) {
                      return false;
                    }));
      }),
    children: null
  };
  if (confirm !== undefined) {
    tmp.confirm = Caml_option.valFromOption(confirm);
  }
  return React.createElement(Link.make, tmp, React.createElement("i", {
                  className: "fas " + match[2]
                }), React.createElement("span", {
                  className: "ml-2"
                }, match[0]));
}

function closeDrawer(course) {
  return ReasonReactRouter.push("/school/courses/" + (CurriculumEditor__Course.id(course) + "/curriculum"));
}

function CurriculumEditor__TargetDrawer(Props) {
  var targets = Props.targets;
  var targetGroups = Props.targetGroups;
  var evaluationCriteria = Props.evaluationCriteria;
  var course = Props.course;
  var updateTargetCB = Props.updateTargetCB;
  var url = ReasonReactRouter.useUrl(undefined, /* () */0);
  var match = React.useState((function () {
          return false;
        }));
  var setDirty = match[1];
  var dirty = match[0];
  var _otherRoutes = url.path;
  if (_otherRoutes && _otherRoutes[0] === "school") {
    var match$1 = _otherRoutes[1];
    if (match$1 && match$1[0] === "courses") {
      var match$2 = match$1[1];
      if (match$2) {
        var match$3 = match$2[1];
        if (match$3 && match$3[0] === "targets") {
          var match$4 = match$3[1];
          if (match$4) {
            var match$5 = match$4[1];
            if (match$5 && !match$5[1]) {
              var pageName = match$5[0];
              var targetId = match$4[0];
              var target = ListUtils.unsafeFind((function (t) {
                      return CurriculumEditor__Target.id(t) === targetId;
                    }), "Could not find target for editor drawer with the ID " + targetId, targets);
              var pathPrefix = "/school/courses/" + (CurriculumEditor__Course.id(course) + ("/targets/" + (targetId + "/")));
              var match$6;
              switch (pageName) {
                case "content" :
                    match$6 = /* tuple */[
                      React.createElement(CurriculumEditor__ContentEditor.make, {
                            target: target,
                            setDirtyCB: (function (dirty) {
                                return Curry._1(setDirty, (function (param) {
                                              return dirty;
                                            }));
                              })
                          }),
                      /* Content */0
                    ];
                    break;
                case "details" :
                    match$6 = /* tuple */[
                      React.createElement(CurriculumEditor__TargetDetailsEditor.make, {
                            target: target,
                            targets: targets,
                            targetGroups: targetGroups,
                            evaluationCriteria: evaluationCriteria,
                            updateTargetCB: updateTargetCB,
                            setDirtyCB: (function (dirty) {
                                return Curry._1(setDirty, (function (param) {
                                              return dirty;
                                            }));
                              })
                          }),
                      /* Details */1
                    ];
                    break;
                case "versions" :
                    match$6 = /* tuple */[
                      React.createElement(CurriculumEditor__VersionsEditor.make, {
                            targetId: targetId
                          }),
                      /* Versions */2
                    ];
                    break;
                default:
                  Rollbar.warning("Unexpected page requested for target editor drawer: " + pageName);
                  match$6 = /* tuple */[
                    React.createElement("div", undefined, "Unexpected error. Please reload the page."),
                    /* Content */0
                  ];
              }
              var selectedPage = match$6[1];
              return React.createElement(SchoolAdmin__EditorDrawer.make, {
                          closeDrawerCB: (function (param) {
                              return confirmDirtyAction(dirty, (function (param) {
                                            return closeDrawer(course);
                                          }));
                            }),
                          size: /* Large */1,
                          children: React.createElement("div", undefined, React.createElement("div", {
                                    className: "bg-gray-200 pt-6"
                                  }, React.createElement("div", {
                                        className: "max-w-3xl px-3 mx-auto"
                                      }, React.createElement("h3", undefined, CurriculumEditor__Target.title(target))), React.createElement("div", {
                                        className: "flex w-full max-w-3xl mx-auto px-3 text-sm -mb-px mt-2"
                                      }, tab(/* Content */0, selectedPage, pathPrefix, dirty, setDirty), tab(/* Details */1, selectedPage, pathPrefix, dirty, setDirty), tab(/* Versions */2, selectedPage, pathPrefix, dirty, setDirty))), React.createElement("div", {
                                    className: "bg-white"
                                  }, React.createElement("div", {
                                        className: "mx-auto border-t border-gray-400"
                                      }, match$6[0])))
                        });
            } else {
              return null;
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
}

var make = CurriculumEditor__TargetDrawer;

exports.str = str;
exports.confirmDirtyAction = confirmDirtyAction;
exports.tab = tab;
exports.closeDrawer = closeDrawer;
exports.make = make;
/*  Not a pure module */
