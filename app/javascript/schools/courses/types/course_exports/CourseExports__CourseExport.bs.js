// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var DateFns = require("../../../../shared/utils/DateFns.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var UnexpectedExportType = Caml_exceptions.create("CourseExports__CourseExport.UnexpectedExportType");

function id(t) {
  return t.id;
}

function createdAt(t) {
  return t.createdAt;
}

function tags(t) {
  return t.tags;
}

function file(t) {
  return t.file;
}

function exportType(t) {
  return t.exportType;
}

function reviewedOnly(t) {
  return t.reviewedOnly;
}

function fileCreatedAt(file) {
  return file.createdAt;
}

function filePath(file) {
  return file.path;
}

function decodeFile(json) {
  return {
          path: Json_decode.field("path", Json_decode.string, json),
          createdAt: Json_decode.field("createdAt", DateFns.decodeISO, json)
        };
}

function decode(json) {
  var otherExportType = Json_decode.field("exportType", Json_decode.string, json);
  var tmp;
  switch (otherExportType) {
    case "Students" :
        tmp = /* Students */1;
        break;
    case "Teams" :
        tmp = /* Teams */0;
        break;
    default:
      Rollbar.error("Unexpected exportType encountered: " + otherExportType);
      throw [
            UnexpectedExportType,
            otherExportType
          ];
  }
  return {
          id: Json_decode.field("id", Json_decode.string, json),
          tags: Json_decode.field("tags", (function (param) {
                  return Json_decode.array(Json_decode.string, param);
                }), json),
          createdAt: Json_decode.field("createdAt", DateFns.decodeISO, json),
          file: Caml_option.null_to_opt(Json_decode.field("file", (function (param) {
                      return Json_decode.nullable(decodeFile, param);
                    }), json)),
          reviewedOnly: Json_decode.field("reviewedOnly", Json_decode.bool, json),
          exportType: tmp
        };
}

function make(id, exportType, createdAt, tags, reviewedOnly) {
  var finalTags = exportType ? tags : [];
  return {
          id: id,
          tags: finalTags,
          createdAt: createdAt,
          file: undefined,
          reviewedOnly: reviewedOnly,
          exportType: exportType
        };
}

function exportTypeToString(t) {
  var match = t.exportType;
  if (match) {
    return "Students";
  } else {
    return "Teams";
  }
}

exports.UnexpectedExportType = UnexpectedExportType;
exports.id = id;
exports.createdAt = createdAt;
exports.tags = tags;
exports.file = file;
exports.exportType = exportType;
exports.reviewedOnly = reviewedOnly;
exports.fileCreatedAt = fileCreatedAt;
exports.filePath = filePath;
exports.decodeFile = decodeFile;
exports.decode = decode;
exports.make = make;
exports.exportTypeToString = exportTypeToString;
/* DateFns Not a pure module */
