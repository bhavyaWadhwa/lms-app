// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var ArrayUtils = require("../../../../shared/utils/ArrayUtils.bs.js");

function id(t) {
  return t.id;
}

function avatarUrl(t) {
  return t.avatarUrl;
}

function name(t) {
  return t.name;
}

function selectedAcrossTeams(selectedStudents) {
  return ArrayUtils.distinct($$Array.map((function (s) {
                    return s.teamId;
                  }), selectedStudents)).length > 1;
}

function partOfTeamSelected(selectedStudents) {
  var selectedTeamSize = selectedStudents.length;
  return selectedStudents.filter((function (s) {
                return s.teamSize > selectedTeamSize;
              })).length === selectedTeamSize;
}

function selectedWithinLevel(selectedStudents) {
  return ArrayUtils.sort_uniq($$String.compare, $$Array.map((function (s) {
                    return s.levelId;
                  }), selectedStudents)).length === 1;
}

function isGroupable(selectedStudents) {
  if (selectedStudents.length > 1) {
    if (selectedWithinLevel(selectedStudents) && selectedAcrossTeams(selectedStudents)) {
      return true;
    } else {
      return partOfTeamSelected(selectedStudents);
    }
  } else {
    return false;
  }
}

function isMoveOutable(selectedStudents) {
  if (selectedStudents.length === 1) {
    return Caml_obj.caml_notequal($$Array.map((function (s) {
                      return s.teamSize;
                    }), selectedStudents), [1]);
  } else {
    return false;
  }
}

function make(name, id, teamId, avatarUrl, levelId, teamSize) {
  return {
          name: name,
          id: id,
          teamId: teamId,
          avatarUrl: avatarUrl,
          levelId: levelId,
          teamSize: teamSize
        };
}

exports.id = id;
exports.avatarUrl = avatarUrl;
exports.name = name;
exports.selectedAcrossTeams = selectedAcrossTeams;
exports.partOfTeamSelected = partOfTeamSelected;
exports.selectedWithinLevel = selectedWithinLevel;
exports.isGroupable = isGroupable;
exports.isMoveOutable = isMoveOutable;
exports.make = make;
/* ArrayUtils Not a pure module */
