// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var ArrayUtils = require("../../../../shared/utils/ArrayUtils.bs.js");

function searchString(t) {
  return t.searchString;
}

function tags(t) {
  return t.tags;
}

function levelId(t) {
  return t.levelId;
}

function sortBy(t) {
  return t.sortBy;
}

function empty(param) {
  return {
          searchString: undefined,
          tags: [],
          levelId: undefined,
          sortBy: /* Name */0
        };
}

function addTag(tag, t) {
  return {
          searchString: t.searchString,
          tags: $$Array.append([tag], t.tags),
          levelId: t.levelId,
          sortBy: t.sortBy
        };
}

function changeLevelId(levelId, t) {
  return {
          searchString: t.searchString,
          tags: t.tags,
          levelId: levelId,
          sortBy: t.sortBy
        };
}

function changeSearchString(searchString, t) {
  return {
          searchString: searchString,
          tags: t.tags,
          levelId: t.levelId,
          sortBy: t.sortBy
        };
}

function removeTag(tag, t) {
  return {
          searchString: t.searchString,
          tags: t.tags.filter((function (ts) {
                  return ts !== tag;
                })),
          levelId: t.levelId,
          sortBy: t.sortBy
        };
}

function removeLevelId(t) {
  return {
          searchString: t.searchString,
          tags: t.tags,
          levelId: undefined,
          sortBy: t.sortBy
        };
}

function removeSearchString(t) {
  return {
          searchString: undefined,
          tags: t.tags,
          levelId: t.levelId,
          sortBy: t.sortBy
        };
}

function updateSortBy(sortBy, t) {
  return {
          searchString: t.searchString,
          tags: t.tags,
          levelId: t.levelId,
          sortBy: sortBy
        };
}

function sortByToString(t) {
  var match = t.sortBy;
  switch (match) {
    case /* Name */0 :
        return "name";
    case /* CreatedAt */1 :
        return "created_at";
    case /* UpdatedAt */2 :
        return "updated_at";
    
  }
}

function dropdownOptionsForSortBy(t) {
  var match = t.sortBy;
  switch (match) {
    case /* Name */0 :
        return [
                /* CreatedAt */1,
                /* UpdatedAt */2
              ];
    case /* CreatedAt */1 :
        return [
                /* Name */0,
                /* UpdatedAt */2
              ];
    case /* UpdatedAt */2 :
        return [
                /* Name */0,
                /* CreatedAt */1
              ];
    
  }
}

function sortByTitle(sortBy) {
  switch (sortBy) {
    case /* Name */0 :
        return "Name";
    case /* CreatedAt */1 :
        return "Last Created";
    case /* UpdatedAt */2 :
        return "Last Updated";
    
  }
}

function sortByIcon(sortBy) {
  switch (sortBy) {
    case /* Name */0 :
        return "if i-sort-alpha-down-solid text-sm if-fw text-gray-700";
    case /* CreatedAt */1 :
        return "if i-clock-regular text-sm if-fw text-gray-700";
    case /* UpdatedAt */2 :
        return "if i-user-check-regular text-sm if-fw text-gray-700";
    
  }
}

function isEmpty(t) {
  var match = t.searchString;
  var match$1 = t.levelId;
  var match$2 = ArrayUtils.isEmpty(t.tags);
  if (match !== undefined || match$1 !== undefined || !match$2) {
    return false;
  } else {
    return true;
  }
}

function clear(t) {
  return {
          searchString: undefined,
          tags: [],
          levelId: undefined,
          sortBy: t.sortBy
        };
}

exports.searchString = searchString;
exports.tags = tags;
exports.levelId = levelId;
exports.sortBy = sortBy;
exports.empty = empty;
exports.addTag = addTag;
exports.changeLevelId = changeLevelId;
exports.changeSearchString = changeSearchString;
exports.removeTag = removeTag;
exports.removeLevelId = removeLevelId;
exports.removeSearchString = removeSearchString;
exports.updateSortBy = updateSortBy;
exports.sortByToString = sortByToString;
exports.dropdownOptionsForSortBy = dropdownOptionsForSortBy;
exports.sortByTitle = sortByTitle;
exports.sortByIcon = sortByIcon;
exports.isEmpty = isEmpty;
exports.clear = clear;
/* ArrayUtils Not a pure module */
