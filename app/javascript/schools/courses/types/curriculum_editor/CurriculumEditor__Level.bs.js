// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var DateFns = require("../../../../shared/utils/DateFns.bs.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function id(t) {
  return t.id;
}

function name(t) {
  return t.name;
}

function number(t) {
  return t.number;
}

function unlockOn(t) {
  return t.unlockOn;
}

function decode(json) {
  return {
          id: Json_decode.field("id", Json_decode.string, json),
          name: Json_decode.field("name", Json_decode.string, json),
          number: Json_decode.field("number", Json_decode.$$int, json),
          unlockOn: Json_decode.optional((function (param) {
                  return Json_decode.field("unlockOn", DateFns.decodeISO, param);
                }), json)
        };
}

function selectLevel(levels, level_name) {
  return List.find((function (q) {
                return q.name === level_name;
              }), levels);
}

function create(id, name, number, unlockOn) {
  return {
          id: id,
          name: name,
          number: number,
          unlockOn: unlockOn
        };
}

function updateList(levels, level) {
  var oldLevels = List.filter((function (l) {
            return l.id !== level.id;
          }))(levels);
  return List.rev(List.append(/* :: */[
                  level,
                  /* [] */0
                ], List.rev(oldLevels)));
}

function sort(levels) {
  return List.sort((function (x, y) {
                return x.number - y.number | 0;
              }), levels);
}

exports.id = id;
exports.name = name;
exports.number = number;
exports.unlockOn = unlockOn;
exports.decode = decode;
exports.selectLevel = selectLevel;
exports.create = create;
exports.updateList = updateList;
exports.sort = sort;
/* DateFns Not a pure module */
