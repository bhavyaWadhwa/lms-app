// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var ArrayUtils = require("../../../../shared/utils/ArrayUtils.bs.js");
var CurriculumEditor__AnswerOption = require("./CurriculumEditor__AnswerOption.bs.js");

function id(t) {
  return t.id;
}

function question(t) {
  return t.question;
}

function answerOptions(t) {
  return t.answerOptions;
}

function empty(id) {
  return {
          id: id,
          question: "",
          answerOptions: [
            CurriculumEditor__AnswerOption.empty("0", true),
            CurriculumEditor__AnswerOption.empty("1", false)
          ]
        };
}

function updateQuestion(question, t) {
  return {
          id: t.id,
          question: question,
          answerOptions: t.answerOptions
        };
}

function newAnswerOption(id, t) {
  var answerOption = CurriculumEditor__AnswerOption.empty(id, false);
  var newAnswerOptions = ArrayUtils.copyAndPush(answerOption, t.answerOptions);
  return {
          id: t.id,
          question: t.question,
          answerOptions: newAnswerOptions
        };
}

function removeAnswerOption(id, t) {
  var newAnswerOptions = t.answerOptions.filter((function (a) {
          return CurriculumEditor__AnswerOption.id(a) !== id;
        }));
  return {
          id: t.id,
          question: t.question,
          answerOptions: newAnswerOptions
        };
}

function replace(id, answerOptionB, t) {
  var newAnswerOptions = $$Array.map((function (a) {
          if (CurriculumEditor__AnswerOption.id(a) === id) {
            return answerOptionB;
          } else {
            return a;
          }
        }), t.answerOptions);
  return {
          id: t.id,
          question: t.question,
          answerOptions: newAnswerOptions
        };
}

function markAsCorrect(id, t) {
  var newAnswerOptions = $$Array.map((function (a) {
          if (CurriculumEditor__AnswerOption.id(a) === id) {
            return CurriculumEditor__AnswerOption.markAsCorrect(a);
          } else {
            return CurriculumEditor__AnswerOption.markAsIncorrect(a);
          }
        }), t.answerOptions);
  return {
          id: t.id,
          question: t.question,
          answerOptions: newAnswerOptions
        };
}

function isValidQuizQuestion(t) {
  var validQuestion = t.question.trim().length >= 1;
  var hasZeroInvalidAnswerOptions = ArrayUtils.isEmpty(t.answerOptions.filter((function (answerOption) {
              return CurriculumEditor__AnswerOption.isValidAnswerOption(answerOption) !== true;
            })));
  var hasOnlyOneCorrectAnswerOption = t.answerOptions.filter((function (answerOption) {
          return CurriculumEditor__AnswerOption.correctAnswer(answerOption) === true;
        })).length === 1;
  if (validQuestion && hasZeroInvalidAnswerOptions) {
    return hasOnlyOneCorrectAnswerOption;
  } else {
    return false;
  }
}

function makeFromJs(quizData) {
  return {
          id: quizData.id,
          question: quizData.question,
          answerOptions: $$Array.map(CurriculumEditor__AnswerOption.makeFromJs, quizData.answerOptions)
        };
}

function quizAsJsObject(quiz) {
  return $$Array.map((function (quiz) {
                return {
                        question: quiz.question,
                        answerOptions: CurriculumEditor__AnswerOption.quizAnswersAsJsObject(quiz.answerOptions)
                      };
              }), quiz);
}

exports.id = id;
exports.question = question;
exports.answerOptions = answerOptions;
exports.empty = empty;
exports.updateQuestion = updateQuestion;
exports.newAnswerOption = newAnswerOption;
exports.removeAnswerOption = removeAnswerOption;
exports.replace = replace;
exports.markAsCorrect = markAsCorrect;
exports.isValidQuizQuestion = isValidQuizQuestion;
exports.makeFromJs = makeFromJs;
exports.quizAsJsObject = quizAsJsObject;
/* ArrayUtils Not a pure module */
