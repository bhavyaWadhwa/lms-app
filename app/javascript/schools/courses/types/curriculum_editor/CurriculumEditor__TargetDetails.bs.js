// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var TargetChecklistItem = require("./TargetChecklistItem.bs.js");
var CurriculumEditor__QuizQuestion = require("./CurriculumEditor__QuizQuestion.bs.js");

var InvalidVisibilityValue = Caml_exceptions.create("CurriculumEditor__TargetDetails.InvalidVisibilityValue");

var InvalidRoleValue = Caml_exceptions.create("CurriculumEditor__TargetDetails.InvalidRoleValue");

function title(t) {
  return t.title;
}

function role(t) {
  return t.role;
}

function targetGroupId(t) {
  return t.targetGroupId;
}

function visibility(t) {
  return t.visibility;
}

function quiz(t) {
  return t.quiz;
}

function prerequisiteTargets(t) {
  return t.prerequisiteTargets;
}

function evaluationCriteria(t) {
  return t.evaluationCriteria;
}

function visibilityFromJs(visibilityString) {
  switch (visibilityString) {
    case "archived" :
        return /* Archived */2;
    case "draft" :
        return /* Draft */0;
    case "live" :
        return /* Live */1;
    default:
      throw [
            InvalidVisibilityValue,
            "Unknown Value"
          ];
  }
}

function visibilityAsString(visibility) {
  switch (visibility) {
    case /* Draft */0 :
        return "draft";
    case /* Live */1 :
        return "live";
    case /* Archived */2 :
        return "archived";
    
  }
}

function roleAsString(role) {
  if (role) {
    return "team";
  } else {
    return "student";
  }
}

function roleFromJs(roleString) {
  switch (roleString) {
    case "student" :
        return /* Student */0;
    case "team" :
        return /* Team */1;
    default:
      throw [
            InvalidRoleValue,
            "Unknown Value :" + roleString
          ];
  }
}

function makeFromJs(targetData) {
  return {
          title: targetData.title,
          role: roleFromJs(targetData.role),
          evaluationCriteria: targetData.evaluationCriteria,
          prerequisiteTargets: targetData.prerequisiteTargets,
          targetGroupId: targetData.targetGroupId,
          quiz: $$Array.map(CurriculumEditor__QuizQuestion.makeFromJs, targetData.quiz),
          checklist: Json_decode.array(TargetChecklistItem.decode, targetData.checklist),
          linkToComplete: targetData.linkToComplete,
          visibility: visibilityFromJs(targetData.visibility),
          completionInstructions: targetData.completionInstructions
        };
}

exports.InvalidVisibilityValue = InvalidVisibilityValue;
exports.InvalidRoleValue = InvalidRoleValue;
exports.title = title;
exports.role = role;
exports.targetGroupId = targetGroupId;
exports.visibility = visibility;
exports.quiz = quiz;
exports.prerequisiteTargets = prerequisiteTargets;
exports.evaluationCriteria = evaluationCriteria;
exports.visibilityFromJs = visibilityFromJs;
exports.visibilityAsString = visibilityAsString;
exports.roleAsString = roleAsString;
exports.roleFromJs = roleFromJs;
exports.makeFromJs = makeFromJs;
/* TargetChecklistItem Not a pure module */
