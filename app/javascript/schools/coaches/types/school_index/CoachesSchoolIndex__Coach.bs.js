// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function name(t) {
  return t.name;
}

function id(t) {
  return t.id;
}

function email(t) {
  return t.email;
}

function imageUrl(t) {
  return t.imageUrl;
}

function title(t) {
  return t.title;
}

function linkedinUrl(t) {
  return t.linkedinUrl;
}

function $$public(t) {
  return t.public;
}

function connectLink(t) {
  return t.connectLink;
}

function exited(t) {
  return t.exited;
}

function imageFileName(t) {
  return t.imageFileName;
}

function affiliation(t) {
  return t.affiliation;
}

function decode(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          imageUrl: Json_decode.field("imageUrl", Json_decode.string, json),
          email: Json_decode.field("email", Json_decode.string, json),
          title: Json_decode.field("title", Json_decode.string, json),
          linkedinUrl: Caml_option.null_to_opt(Json_decode.field("linkedinUrl", (function (param) {
                      return Json_decode.nullable(Json_decode.string, param);
                    }), json)),
          public: Json_decode.field("public", Json_decode.bool, json),
          exited: Json_decode.field("exited", Json_decode.bool, json),
          connectLink: Caml_option.null_to_opt(Json_decode.field("connectLink", (function (param) {
                      return Json_decode.nullable(Json_decode.string, param);
                    }), json)),
          imageFileName: Caml_option.null_to_opt(Json_decode.field("imageFileName", (function (param) {
                      return Json_decode.nullable(Json_decode.string, param);
                    }), json)),
          affiliation: Caml_option.null_to_opt(Json_decode.field("affiliation", (function (param) {
                      return Json_decode.nullable(Json_decode.string, param);
                    }), json))
        };
}

function make(id, name, imageUrl, email, title, linkedinUrl, $$public, connectLink, exited, imageFileName, affiliation) {
  return {
          id: id,
          name: name,
          imageUrl: imageUrl,
          email: email,
          title: title,
          linkedinUrl: linkedinUrl,
          public: $$public,
          exited: exited,
          connectLink: connectLink,
          imageFileName: imageFileName,
          affiliation: affiliation
        };
}

function updateList(coaches, coach) {
  var oldList = List.filter((function (t) {
            return t.id !== coach.id;
          }))(coaches);
  return List.sort((function (x, y) {
                return x.id - y.id | 0;
              }), List.rev(List.append(/* :: */[
                      coach,
                      /* [] */0
                    ], List.rev(oldList))));
}

exports.decode = decode;
exports.name = name;
exports.id = id;
exports.imageUrl = imageUrl;
exports.email = email;
exports.title = title;
exports.linkedinUrl = linkedinUrl;
exports.$$public = $$public;
exports.connectLink = connectLink;
exports.exited = exited;
exports.updateList = updateList;
exports.affiliation = affiliation;
exports.imageFileName = imageFileName;
exports.make = make;
/* No side effect */
