// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Api = require("../../../shared/Api.bs.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ListUtils = require("../../../shared/utils/ListUtils.bs.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");
var $$Notification = require("../../../shared/Notification.bs.js");
var InactiveStudentsPanel__Team = require("../types/inactive_students_panel/InactiveStudentsPanel__Team.bs.js");
var InactiveStudentsPanel__Student = require("../types/inactive_students_panel/InactiveStudentsPanel__Student.bs.js");

function str(prim) {
  return prim;
}

function reducer(state, action) {
  switch (action.tag | 0) {
    case /* RefreshData */0 :
        return {
                teams: action[0],
                students: state.students,
                selectedTeams: /* [] */0,
                searchString: state.searchString
              };
    case /* SelectTeam */1 :
        return {
                teams: state.teams,
                students: state.students,
                selectedTeams: /* :: */[
                  action[0],
                  state.selectedTeams
                ],
                searchString: state.searchString
              };
    case /* DeselectTeam */2 :
        var team = action[0];
        return {
                teams: state.teams,
                students: state.students,
                selectedTeams: List.filter((function (s) {
                          return InactiveStudentsPanel__Team.id(s) !== InactiveStudentsPanel__Team.id(team);
                        }))(state.selectedTeams),
                searchString: state.searchString
              };
    case /* UpdateSearchString */3 :
        return {
                teams: state.teams,
                students: state.students,
                selectedTeams: state.selectedTeams,
                searchString: action[0]
              };
    
  }
}

function studentsInTeam(students, team) {
  return List.filter((function (student) {
                  return InactiveStudentsPanel__Student.teamId(student) === InactiveStudentsPanel__Team.id(team);
                }))(students);
}

function markActive(teams, courseId, responseCB, authenticityToken) {
  var payload = { };
  payload["authenticity_token"] = authenticityToken;
  payload["team_ids"] = Json_encode.list((function (prim) {
          return prim;
        }), List.map((function (s) {
              return Caml_format.caml_int_of_string(InactiveStudentsPanel__Team.id(s));
            }), teams));
  var url = "/school/courses/" + (courseId + "/mark_teams_active");
  return Api.create(url, payload, responseCB, (function (param) {
                return /* () */0;
              }));
}

function handleActiveTeamResponse(send, state, json) {
  var message = Json_decode.field("message", Json_decode.string, json);
  var updatedTeams = List.filter((function (team) {
            return !List.exists((function (removedTeam) {
                          return InactiveStudentsPanel__Team.id(team) === InactiveStudentsPanel__Team.id(removedTeam);
                        }), state.selectedTeams);
          }))(state.teams);
  Curry._1(send, /* RefreshData */Block.__(0, [updatedTeams]));
  return $$Notification.success("Success!", message);
}

function SA_InactiveStudentsPanel(Props) {
  var teams = Props.teams;
  var courseId = Props.courseId;
  var students = Props.students;
  var authenticityToken = Props.authenticityToken;
  var isLastPage = Props.isLastPage;
  var currentPage = Props.currentPage;
  var match = React.useReducer(reducer, {
        teams: teams,
        students: students,
        selectedTeams: /* [] */0,
        searchString: ""
      });
  var send = match[1];
  var state = match[0];
  return React.createElement("div", {
              className: "flex flex-1 px-6 pb-4 flex-col bg-gray-100 overflow-y-scroll"
            }, React.createElement("div", {
                  className: "max-w-3xl w-full mx-auto flex justify-between border-b mt-4"
                }, React.createElement("ul", {
                      className: "flex font-semibold text-sm"
                    }, React.createElement("li", {
                          className: "rounded-t-lg cursor-pointer border-b-3 border-transparent hover:bg-gray-200 hover:text-gray-900"
                        }, React.createElement("a", {
                              className: "block px-3 py-3 md:py-2 text-gray-800",
                              href: "/school/courses/" + (courseId + "/students")
                            }, "All Students")), React.createElement("li", {
                          className: "px-3 py-3 md:py-2 text-primary-500 border-b-3 border-primary-500 -mb-px"
                        }, React.createElement("span", undefined, "Inactive Students")))), React.createElement("div", {
                  className: "bg-gray-100 sticky top-0 py-3"
                }, React.createElement("div", {
                      className: "border rounded-lg mx-auto max-w-3xl bg-white "
                    }, React.createElement("div", {
                          className: "flex w-full items-center justify-between p-4"
                        }, React.createElement("div", {
                              className: "flex flex-1"
                            }, React.createElement("input", {
                                  className: "text-sm bg-white border border-gray-400 rounded leading-relaxed max-w-xs w-full py-2 px-3 mr-2 focus:outline-none focus:bg-white focus:border-primary-300",
                                  id: "search",
                                  placeholder: "Search by student or team name...",
                                  type: "search",
                                  value: state.searchString,
                                  onChange: (function ($$event) {
                                      return Curry._1(send, /* UpdateSearchString */Block.__(3, [$$event.target.value]));
                                    })
                                }), React.createElement("a", {
                                  className: "btn btn-default no-underline",
                                  href: "/school/courses/" + (courseId + ("/inactive_students?search=" + state.searchString))
                                }, "Search")), ListUtils.isEmpty(state.selectedTeams) ? null : React.createElement("button", {
                                className: "btn btn-success ml-3 mr-3 focus:outline-none",
                                onClick: (function (_e) {
                                    return markActive(state.selectedTeams, courseId, (function (param) {
                                                  return handleActiveTeamResponse(send, state, param);
                                                }), authenticityToken);
                                  })
                              }, "Reactivate Students")))), React.createElement("div", {
                  className: "max-w-3xl mx-auto w-full"
                }, List.length(state.teams) > 0 ? $$Array.of_list(List.map((function (team) {
                              var isSingleFounder = List.length(studentsInTeam(state.students, team)) === 1;
                              var isChecked = List.mem(team, state.selectedTeams);
                              var checkboxId = "select-team-" + InactiveStudentsPanel__Team.id(team);
                              return React.createElement("div", {
                                          key: InactiveStudentsPanel__Team.id(team),
                                          className: "student-team-container flex items-center shadow bg-white rounded-lg mb-4 overflow-hidden",
                                          id: InactiveStudentsPanel__Team.name(team)
                                        }, React.createElement("label", {
                                              className: "flex self-stretch items-center text-grey leading-tight font-bold px-4 py-5 hover:bg-gray-100",
                                              htmlFor: checkboxId
                                            }, React.createElement("input", {
                                                  className: "leading-tight",
                                                  id: checkboxId,
                                                  checked: isChecked,
                                                  type: "checkbox",
                                                  onChange: isChecked ? (function (_e) {
                                                        return Curry._1(send, /* DeselectTeam */Block.__(2, [team]));
                                                      }) : (function (_e) {
                                                        return Curry._1(send, /* SelectTeam */Block.__(1, [team]));
                                                      })
                                                })), React.createElement("div", {
                                              className: "flex-1 w-3/5 order-last border-l"
                                            }, $$Array.of_list(List.map((function (student) {
                                                        return React.createElement("div", {
                                                                    key: InactiveStudentsPanel__Student.id(student),
                                                                    className: "student-team__card flex items-center bg-white pl-4",
                                                                    id: InactiveStudentsPanel__Student.name(student)
                                                                  }, React.createElement("div", {
                                                                        className: "flex-1 w-3/5"
                                                                      }, React.createElement("div", {
                                                                            className: "flex items-center"
                                                                          }, React.createElement("a", {
                                                                                className: "flex flex-1 self-stretch items-center py-4 pr-4",
                                                                                id: InactiveStudentsPanel__Student.name(student) + "_edit"
                                                                              }, React.createElement("img", {
                                                                                    className: "w-10 h-10 rounded-full mr-4 object-cover",
                                                                                    src: InactiveStudentsPanel__Student.avatarUrl(student)
                                                                                  }), React.createElement("div", {
                                                                                    className: "text-sm flex flex-col"
                                                                                  }, React.createElement("p", {
                                                                                        className: "text-black font-semibold inline-block "
                                                                                      }, InactiveStudentsPanel__Student.name(student)))))));
                                                      }), studentsInTeam(state.students, team)))), isSingleFounder ? null : React.createElement("div", {
                                                className: "flex w-2/5 items-center"
                                              }, React.createElement("div", {
                                                    className: "w-3/5 py-4 px-3"
                                                  }, React.createElement("div", {
                                                        className: "students-team--name mb-5"
                                                      }, React.createElement("p", {
                                                            className: "mb-1 text-xs"
                                                          }, "Team"), React.createElement("h4", undefined, InactiveStudentsPanel__Team.name(team))))));
                            }), List.sort((function (team1, team2) {
                                  return Caml_format.caml_int_of_string(InactiveStudentsPanel__Team.id(team2)) - Caml_format.caml_int_of_string(InactiveStudentsPanel__Team.id(team1)) | 0;
                                }), state.teams))) : React.createElement("div", {
                        className: "shadow bg-white rounded-lg mb-4 p-4"
                      }, "No inactive user matches your search criteria."), ListUtils.isNotEmpty(teams) ? React.createElement("div", {
                        className: "max-w-3xl w-full flex flex-row mx-auto justify-center pb-8"
                      }, currentPage > 1 ? React.createElement("a", {
                              className: "block btn btn-default no-underline border shadow mx-2",
                              href: "/school/courses/" + (courseId + ("/inactive_students?page=" + String(currentPage - 1 | 0)))
                            }, React.createElement("i", {
                                  className: "fas fa-arrow-left"
                                }), React.createElement("span", {
                                  className: "ml-2"
                                }, "Prev")) : null, isLastPage ? null : React.createElement("a", {
                              className: "block btn btn-default no-underline border shadow mx-2",
                              href: "/school/courses/" + (courseId + ("/inactive_students?page=" + String(currentPage + 1 | 0)))
                            }, React.createElement("span", {
                                  className: "mr-2"
                                }, "Next"), React.createElement("i", {
                                  className: "fas fa-arrow-right"
                                }))) : null));
}

var make = SA_InactiveStudentsPanel;

exports.str = str;
exports.reducer = reducer;
exports.studentsInTeam = studentsInTeam;
exports.markActive = markActive;
exports.handleActiveTeamResponse = handleActiveTeamResponse;
exports.make = make;
/* Api Not a pure module */
