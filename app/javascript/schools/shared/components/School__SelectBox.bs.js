// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var $$String = require("bs-platform/lib/js/string.js");
var ListUtils = require("../../../shared/utils/ListUtils.bs.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");

function str(prim) {
  return prim;
}

function convertOldItems(items) {
  return List.map((function (param) {
                return /* tuple */[
                        String(param[0]),
                        param[1],
                        param[2]
                      ];
              }), items);
}

function convertOldCallback(cb, key, value, selected) {
  return Curry._3(cb, Caml_format.caml_int_of_string(key), value, selected);
}

function School__SelectBox(Props) {
  var items = Props.items;
  var selectCB = Props.selectCB;
  var noSelectionHeadingOpt = Props.noSelectionHeading;
  var noSelectionDescriptionOpt = Props.noSelectionDescription;
  var emptyListDescriptionOpt = Props.emptyListDescription;
  var noSelectionHeading = noSelectionHeadingOpt !== undefined ? noSelectionHeadingOpt : "None Selected";
  var noSelectionDescription = noSelectionDescriptionOpt !== undefined ? noSelectionDescriptionOpt : "Select from the following list.";
  var emptyListDescription = emptyListDescriptionOpt !== undefined ? emptyListDescriptionOpt : "There are no items to select.";
  var match = React.useState((function () {
          return "";
        }));
  var setSearchString = match[1];
  var searchString = match[0];
  var selectedList = List.filter((function (param) {
            return param[2] === true;
          }))(items);
  var nonSelectedList = List.filter((function (param) {
            return param[2] === false;
          }))(items);
  var filteredList = nonSelectedList ? List.filter((function (param) {
              return $$String.lowercase_ascii(param[1]).includes($$String.lowercase_ascii(searchString));
            }))(nonSelectedList) : /* [] */0;
  return React.createElement("div", {
              className: "p-6 border rounded bg-gray-100"
            }, List.length(selectedList) > 0 ? $$Array.of_list(List.map((function (param) {
                          var value = param[1];
                          var key = param[0];
                          return React.createElement("div", {
                                      key: key,
                                      className: "select-list__item-selected flex items-center justify-between bg-white font-semibold text-xs border rounded mb-2"
                                    }, React.createElement("div", {
                                          className: "p-3 flex-1"
                                        }, value), React.createElement("button", {
                                          className: "flex p-3 text-gray-800 hover:bg-gray-200 hover:text-gray-900 focus:outline-none",
                                          title: "Remove",
                                          onClick: (function (_event) {
                                              _event.preventDefault();
                                              Curry._1(setSearchString, (function (param) {
                                                      return "";
                                                    }));
                                              return Curry._3(selectCB, key, value, false);
                                            })
                                        }, React.createElement("i", {
                                              className: "fas fa-trash-alt text-base"
                                            })));
                        }), List.rev(selectedList))) : React.createElement("div", {
                    className: "flex flex-col items-center justify-center bg-gray-100 text-gray-800 rounded px-3 pt-3 "
                  }, React.createElement("i", {
                        className: "fas fa-inbox text-3xl"
                      }), React.createElement("h5", {
                        className: "mt-1 font-semibold"
                      }, noSelectionHeading), React.createElement("span", {
                        className: "text-xs"
                      }, ListUtils.isEmpty(items) ? emptyListDescription : noSelectionDescription)), List.length(nonSelectedList) > 0 ? React.createElement("div", {
                    className: "flex relative pt-4"
                  }, React.createElement("div", {
                        className: "select-list__group text-sm bg-white rounded shadow pb-2 w-full"
                      }, List.length(nonSelectedList) > 3 ? React.createElement("div", {
                              className: "px-3 pt-3 pb-2"
                            }, React.createElement("input", {
                                  className: "appearance-none bg-transparent border-b w-full text-gray-700 pb-3 px-2 pl-0 leading-normal focus:outline-none",
                                  placeholder: "Type to Search",
                                  type: "text",
                                  onChange: (function ($$event) {
                                      return Curry._1(setSearchString, $$event.target.value);
                                    })
                                })) : null, React.createElement("div", {
                            className: List.length(nonSelectedList) > 3 ? "h-28 overflow-y-scroll" : ""
                          }, $$Array.of_list(List.map((function (param) {
                                      var value = param[1];
                                      var key = param[0];
                                      return React.createElement("div", {
                                                  key: key,
                                                  className: "px-3 py-2 font-semibold hover:bg-primary-100 hover:text-primary-500 cursor-pointer",
                                                  title: "Select " + value,
                                                  onClick: (function (_event) {
                                                      _event.preventDefault();
                                                      Curry._1(setSearchString, (function (param) {
                                                              return "";
                                                            }));
                                                      return Curry._3(selectCB, key, value, true);
                                                    })
                                                }, value);
                                    }), filteredList))))) : null);
}

var make = School__SelectBox;

exports.str = str;
exports.convertOldItems = convertOldItems;
exports.convertOldCallback = convertOldCallback;
exports.make = make;
/* react Not a pure module */
