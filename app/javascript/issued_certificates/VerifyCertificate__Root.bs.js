// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var DateFns = require("../shared/utils/DateFns.bs.js");
var IssuedCertificate = require("../shared/types/IssuedCertificate.bs.js");
var IssuedCertificate__Root = require("./IssuedCertificate__Root.bs.js");
var GraduateIconSvg = require("./images/graduate-icon.svg");

((require("./VerifyCertificate__Root.css")));

var graduateIcon = GraduateIconSvg.default;

function str(prim) {
  return prim;
}

function printCertificate(setViewMode, _event) {
  Curry._1(setViewMode, (function (param) {
          return /* Print */1;
        }));
  setTimeout((function (param) {
          window.print();
          return /* () */0;
        }), 1000);
  return /* () */0;
}

function heading(currentUser, issuedCertificate) {
  if (currentUser) {
    return React.createElement("span", undefined, "Congratulations ", React.createElement("strong", undefined, IssuedCertificate.issuedTo(issuedCertificate)), "!", React.createElement("br", undefined), "You've earned it.");
  } else {
    return IssuedCertificate.serialNumber(issuedCertificate);
  }
}

function handleCancelPrint(setViewMode, _event) {
  return Curry._1(setViewMode, (function (param) {
                return /* Screen */0;
              }));
}

function VerifyCertificate__Root(Props) {
  var issuedCertificate = Props.issuedCertificate;
  var verifyImageUrl = Props.verifyImageUrl;
  var currentUser = Props.currentUser;
  var match = React.useState((function () {
          return /* Screen */0;
        }));
  var setViewMode = match[1];
  if (match[0]) {
    return React.createElement("div", {
                className: "flex flex-col items-center"
              }, React.createElement("button", {
                    className: "btn btn-secondary my-4 md:my-6 verify-certificate__cancel-button",
                    onClick: (function (param) {
                        return Curry._1(setViewMode, (function (param) {
                                      return /* Screen */0;
                                    }));
                      })
                  }, React.createElement("i", {
                        className: "fas fa-undo-alt"
                      }), React.createElement("span", {
                        className: "ml-1"
                      }, "Cancel and return")), React.createElement(IssuedCertificate__Root.make, {
                    issuedCertificate: issuedCertificate,
                    verifyImageUrl: verifyImageUrl
                  }));
  } else {
    return React.createElement("div", {
                className: "container mx-auto px-3 max-w-5xl py-8"
              }, React.createElement("div", {
                    className: "border border-gray-300 rounded-lg shadow-lg bg-white p-3 md:p-6 flex flex-col md:flex-row items-start md:items-center"
                  }, React.createElement("div", {
                        className: "text-center md:w-5/12 pr-0 md:pr-5"
                      }, React.createElement("img", {
                            className: "w-18 md:w-24 mx-auto",
                            src: graduateIcon
                          }), React.createElement("h3", {
                            className: "font-semibold mt-1 md:mt-2"
                          }, heading(currentUser, issuedCertificate)), React.createElement("div", {
                            className: "text-sm mt-4"
                          }, React.createElement("span", undefined, "This certificate was issued to "), React.createElement("strong", undefined, IssuedCertificate.issuedTo(issuedCertificate)), React.createElement("span", undefined, " on "), React.createElement("strong", undefined, DateFns.formatPreset(IssuedCertificate.issuedAt(issuedCertificate), true, true, undefined, /* () */0)), React.createElement("span", undefined, " for completing the course "), React.createElement("strong", undefined, IssuedCertificate.courseName(issuedCertificate)), React.createElement("span", undefined, ".")), currentUser ? React.createElement("div", {
                              className: "mt-4 text-xs"
                            }, React.createElement("code", undefined, "Serial No. ", IssuedCertificate.serialNumber(issuedCertificate))) : null, React.createElement("div", {
                            className: "mt-4"
                          }, React.createElement("button", {
                                className: "btn btn-primary",
                                onClick: (function (param) {
                                    return printCertificate(setViewMode, param);
                                  })
                              }, React.createElement("i", {
                                    className: "fas fa-print"
                                  }), React.createElement("span", {
                                    className: "ml-2"
                                  }, "Print, or save as PDF")))), React.createElement("div", {
                        className: "md:w-7/12 mt-6 md:mt-0 rounded-lg overflow-hidden border-8 border-white shadow-lg"
                      }, React.createElement(IssuedCertificate__Root.make, {
                            issuedCertificate: issuedCertificate,
                            verifyImageUrl: verifyImageUrl
                          }))));
  }
}

var make = VerifyCertificate__Root;

exports.graduateIcon = graduateIcon;
exports.str = str;
exports.printCertificate = printCertificate;
exports.heading = heading;
exports.handleCancelPrint = handleCancelPrint;
exports.make = make;
/*  Not a pure module */
