// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var User = require("../../shared/types/User.bs.js");
var React = require("react");
var Avatar = require("../../shared/Avatar.bs.js");
var Tooltip = require("../../shared/components/Tooltip.bs.js");
var ArrayUtils = require("../../shared/utils/ArrayUtils.bs.js");
var MarkdownBlock = require("../../shared/components/MarkdownBlock.bs.js");
var TopicsShow__Post = require("../types/TopicsShow__Post.bs.js");

function str(prim) {
  return prim;
}

((require("./TopicsShow__PostReply.css")));

var avatarClasses = "w-6 h-6 md:w-8 md:h-8 text-xs border border-gray-400 rounded-full overflow-hidden flex-shrink-0 object-cover";

function avatar(avatarUrl, name) {
  if (avatarUrl !== undefined) {
    return React.createElement("img", {
                className: avatarClasses,
                src: avatarUrl
              });
  } else {
    return React.createElement(Avatar.make, {
                name: name,
                className: avatarClasses
              });
  }
}

function navigateToPost(postId) {
  var elementId = "post-show-" + postId;
  var element = document.getElementById(elementId);
  if (element == null) {
    Rollbar.error("Could not find the post to scroll to.");
  } else {
    element.scrollIntoView();
    element.className = "topics-show__highlighted-item";
  }
  return /* () */0;
}

function TopicsShow__PostReply(Props) {
  var post = Props.post;
  var users = Props.users;
  var user = ArrayUtils.unsafeFind((function (user) {
          return TopicsShow__Post.creatorId(post) === User.id(user);
        }), "Unable to find user with ID: " + (TopicsShow__Post.creatorId(post) + " in TopicsShow__PostReplyShow"), users);
  var tip = React.createElement("div", {
        className: "text-left"
      }, "Jump to reply");
  return React.createElement("div", {
              className: "topics-post-reply-show__replies flex flex-col border bg-gray-100 rounded-lg mb-2 p-4"
            }, React.createElement("div", {
                  className: "flex justify-between"
                }, React.createElement("div", {
                      className: "flex items-center"
                    }, avatar(User.avatarUrl(user), User.name(user)), React.createElement("span", {
                          className: "text-xs font-semibold ml-2"
                        }, User.name(user))), React.createElement(Tooltip.make, {
                      tip: tip,
                      position: /* Left */847852583,
                      children: React.createElement("div", {
                            "aria-label": "Navigate to post " + TopicsShow__Post.id(post),
                            className: "flex-shrink-0 flex items-center justify-center w-7 h-7 rounded leading-tight border bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-300",
                            onClick: (function (param) {
                                return navigateToPost(TopicsShow__Post.id(post));
                              })
                          }, React.createElement("i", {
                                className: "fas fa-angle-double-down"
                              }))
                    })), React.createElement("div", {
                  className: "text-sm ml-9"
                }, React.createElement(MarkdownBlock.make, {
                      markdown: TopicsShow__Post.body(post),
                      className: "leading-normal text-sm ",
                      profile: /* QuestionAndAnswer */1
                    })));
}

var make = TopicsShow__PostReply;

exports.str = str;
exports.avatarClasses = avatarClasses;
exports.avatar = avatar;
exports.navigateToPost = navigateToPost;
exports.make = make;
/*  Not a pure module */
