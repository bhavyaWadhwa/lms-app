{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar DateFns = require(\"../../../shared/utils/DateFns.bs.js\");\n\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\n\nvar ListUtils = require(\"../../../shared/utils/ListUtils.bs.js\");\n\nvar Belt_Option = require(\"bs-platform/lib/js/belt_Option.js\");\n\nvar CoursesCurriculum__Team = require(\"./CoursesCurriculum__Team.bs.js\");\n\nvar CoursesCurriculum__Level = require(\"./CoursesCurriculum__Level.bs.js\");\n\nvar CoursesCurriculum__Course = require(\"./CoursesCurriculum__Course.bs.js\");\n\nvar CoursesCurriculum__Target = require(\"./CoursesCurriculum__Target.bs.js\");\n\nvar CoursesCurriculum__TargetGroup = require(\"./CoursesCurriculum__TargetGroup.bs.js\");\n\nvar CoursesCurriculum__LatestSubmission = require(\"./CoursesCurriculum__LatestSubmission.bs.js\");\n\nfunction isPast(date) {\n  return Belt_Option.mapWithDefault(date, false, DateFns.isPast);\n}\n\nfunction makePending(targets) {\n  return List.map(function (t) {\n    return {\n      targetId: CoursesCurriculum__Target.id(t),\n      status:\n      /* Pending */\n      0\n    };\n  }, targets);\n}\n\nfunction lockTargets(targets, reason) {\n  return List.map(function (t) {\n    return {\n      targetId: CoursesCurriculum__Target.id(t),\n      status:\n      /* Locked */\n      [reason]\n    };\n  }, targets);\n}\n\nfunction allTargetsComplete(targetCache, targetIds) {\n  return List.for_all(function (targetId) {\n    var cachedTarget = List.find(function (ct) {\n      return ct.targetId === targetId;\n    }, targetCache);\n    return cachedTarget.submissionStatus ===\n    /* SubmissionPassed */\n    2;\n  }, targetIds);\n}\n\nfunction compute(preview, team, course, levels, targetGroups, targets, submissions) {\n  if (preview) {\n    return makePending(targets);\n  } else {\n    var date = CoursesCurriculum__Course.endsAt(course);\n\n    if (Belt_Option.mapWithDefault(date, false, DateFns.isPast)) {\n      return lockTargets(targets,\n      /* CourseLocked */\n      0);\n    } else {\n      var date$1 = CoursesCurriculum__Team.accessEndsAt(team);\n\n      if (Belt_Option.mapWithDefault(date$1, false, DateFns.isPast)) {\n        return lockTargets(targets,\n        /* AccessLocked */\n        1);\n      } else {\n        var studentLevelNumber = CoursesCurriculum__Level.number(List.find(function (l) {\n          return CoursesCurriculum__Level.id(l) === CoursesCurriculum__Team.levelId(team);\n        }, levels));\n        var targetsCache = List.map(function (target) {\n          var targetId = CoursesCurriculum__Target.id(target);\n          var targetGroup = List.find(function (tg) {\n            return CoursesCurriculum__TargetGroup.id(tg) === CoursesCurriculum__Target.targetGroupId(target);\n          }, targetGroups);\n          var milestone = CoursesCurriculum__TargetGroup.milestone(targetGroup);\n          var levelNumber = CoursesCurriculum__Level.number(List.find(function (l) {\n            return CoursesCurriculum__Level.id(l) === CoursesCurriculum__TargetGroup.levelId(targetGroup);\n          }, levels));\n          var submission = ListUtils.findOpt(function (s) {\n            return CoursesCurriculum__LatestSubmission.targetId(s) === targetId;\n          }, submissions);\n          var submissionStatus;\n\n          if (submission !== undefined) {\n            var s = submission;\n            submissionStatus = CoursesCurriculum__LatestSubmission.hasPassed(s) ?\n            /* SubmissionPassed */\n            2 : CoursesCurriculum__LatestSubmission.hasBeenEvaluated(s) ?\n            /* SubmissionFailed */\n            3 :\n            /* SubmissionPendingReview */\n            1;\n          } else {\n            submissionStatus =\n            /* SubmissionMissing */\n            0;\n          }\n\n          return {\n            targetId: targetId,\n            targetReviewed: CoursesCurriculum__Target.reviewed(target),\n            levelNumber: levelNumber,\n            milestone: milestone,\n            submissionStatus: submissionStatus,\n            prerequisiteTargetIds: CoursesCurriculum__Target.prerequisiteTargetIds(target)\n          };\n        }, targets);\n        return List.map(function (ct) {\n          var match = ct.submissionStatus;\n          var status;\n\n          switch (match) {\n            case\n            /* SubmissionMissing */\n            0:\n              status = ct.levelNumber > studentLevelNumber && ct.targetReviewed ?\n              /* Locked */\n              [\n              /* LevelLocked */\n              2] : allTargetsComplete(targetsCache, ct.prerequisiteTargetIds) ?\n              /* Pending */\n              0 :\n              /* Locked */\n              [\n              /* PrerequisitesIncomplete */\n              3];\n              break;\n\n            case\n            /* SubmissionPendingReview */\n            1:\n              status =\n              /* Submitted */\n              1;\n              break;\n\n            case\n            /* SubmissionPassed */\n            2:\n              status =\n              /* Passed */\n              2;\n              break;\n\n            case\n            /* SubmissionFailed */\n            3:\n              status =\n              /* Failed */\n              3;\n              break;\n          }\n\n          return {\n            targetId: ct.targetId,\n            status: status\n          };\n        }, targetsCache);\n      }\n    }\n  }\n}\n\nfunction targetId(t) {\n  return t.targetId;\n}\n\nfunction status(t) {\n  return t.status;\n}\n\nfunction lockReasonToString(lr) {\n  switch (lr) {\n    case\n    /* CourseLocked */\n    0:\n      return \"The course has ended and submissions are disabled for all targets!\";\n\n    case\n    /* AccessLocked */\n    1:\n      return \"Your access to this course has ended.\";\n\n    case\n    /* LevelLocked */\n    2:\n      return \"You must level up to complete this target.\";\n\n    case\n    /* PrerequisitesIncomplete */\n    3:\n      return \"This target has pre-requisites that are incomplete.\";\n  }\n}\n\nfunction statusToString(t) {\n  var match = t.status;\n\n  if (typeof match === \"number\") {\n    switch (match) {\n      case\n      /* Pending */\n      0:\n        return \"Pending\";\n\n      case\n      /* Submitted */\n      1:\n        return \"Submitted\";\n\n      case\n      /* Passed */\n      2:\n        return \"Passed\";\n\n      case\n      /* Failed */\n      3:\n        return \"Failed\";\n    }\n  } else {\n    return \"Locked\";\n  }\n}\n\nfunction canSubmit(resubmittable, t) {\n  var match = t.status;\n\n  if (resubmittable) {\n    if (typeof match === \"number\" && match === 2) {\n      return true;\n    }\n  } else if (typeof match === \"number\" && match === 2) {\n    return false;\n  }\n\n  if (typeof match === \"number\") {\n    return match !== 1;\n  } else {\n    return false;\n  }\n}\n\nfunction currentLevelStatuses(progressionBehavior) {\n  if (typeof progressionBehavior === \"number\" && progressionBehavior < 751362817) {\n    return (\n      /* :: */\n      [\n      /* Passed */\n      2,\n      /* [] */\n      0]\n    );\n  } else {\n    return (\n      /* :: */\n      [\n      /* Submitted */\n      1,\n      /* :: */\n      [\n      /* Passed */\n      2,\n      /* [] */\n      0]]\n    );\n  }\n}\n\nfunction matchesStatuses(statuses, ts) {\n  var matchedTargetStatuses = List.filter(function (t) {\n    return List.mem(t.status, statuses);\n  })(ts);\n  return Caml_obj.caml_equal(ts, matchedTargetStatuses);\n}\n\nvar Course =\n/* alias */\n0;\nvar Team =\n/* alias */\n0;\nvar Target =\n/* alias */\n0;\nvar Level =\n/* alias */\n0;\nvar TargetGroup =\n/* alias */\n0;\nvar LatestSubmission =\n/* alias */\n0;\nvar minimumRequiredLevelStatuses =\n/* :: */\n[\n/* Passed */\n2,\n/* [] */\n0];\nexports.Course = Course;\nexports.Team = Team;\nexports.Target = Target;\nexports.Level = Level;\nexports.TargetGroup = TargetGroup;\nexports.LatestSubmission = LatestSubmission;\nexports.isPast = isPast;\nexports.makePending = makePending;\nexports.lockTargets = lockTargets;\nexports.allTargetsComplete = allTargetsComplete;\nexports.compute = compute;\nexports.targetId = targetId;\nexports.status = status;\nexports.lockReasonToString = lockReasonToString;\nexports.statusToString = statusToString;\nexports.canSubmit = canSubmit;\nexports.currentLevelStatuses = currentLevelStatuses;\nexports.minimumRequiredLevelStatuses = minimumRequiredLevelStatuses;\nexports.matchesStatuses = matchesStatuses;\n/* DateFns Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/courses/curricula/types/CoursesCurriculum__TargetStatus.bs.js"],"names":["List","require","DateFns","Caml_obj","ListUtils","Belt_Option","CoursesCurriculum__Team","CoursesCurriculum__Level","CoursesCurriculum__Course","CoursesCurriculum__Target","CoursesCurriculum__TargetGroup","CoursesCurriculum__LatestSubmission","isPast","date","mapWithDefault","makePending","targets","map","t","targetId","id","status","lockTargets","reason","allTargetsComplete","targetCache","targetIds","for_all","cachedTarget","find","ct","submissionStatus","compute","preview","team","course","levels","targetGroups","submissions","endsAt","date$1","accessEndsAt","studentLevelNumber","number","l","levelId","targetsCache","target","targetGroup","tg","targetGroupId","milestone","levelNumber","submission","findOpt","s","undefined","hasPassed","hasBeenEvaluated","targetReviewed","reviewed","prerequisiteTargetIds","match","lockReasonToString","lr","statusToString","canSubmit","resubmittable","currentLevelStatuses","progressionBehavior","matchesStatuses","statuses","ts","matchedTargetStatuses","filter","mem","caml_equal","Course","Team","Target","Level","TargetGroup","LatestSubmission","minimumRequiredLevelStatuses","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar DateFns = require(\"../../../shared/utils/DateFns.bs.js\");\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\nvar ListUtils = require(\"../../../shared/utils/ListUtils.bs.js\");\nvar Belt_Option = require(\"bs-platform/lib/js/belt_Option.js\");\nvar CoursesCurriculum__Team = require(\"./CoursesCurriculum__Team.bs.js\");\nvar CoursesCurriculum__Level = require(\"./CoursesCurriculum__Level.bs.js\");\nvar CoursesCurriculum__Course = require(\"./CoursesCurriculum__Course.bs.js\");\nvar CoursesCurriculum__Target = require(\"./CoursesCurriculum__Target.bs.js\");\nvar CoursesCurriculum__TargetGroup = require(\"./CoursesCurriculum__TargetGroup.bs.js\");\nvar CoursesCurriculum__LatestSubmission = require(\"./CoursesCurriculum__LatestSubmission.bs.js\");\n\nfunction isPast(date) {\n  return Belt_Option.mapWithDefault(date, false, DateFns.isPast);\n}\n\nfunction makePending(targets) {\n  return List.map((function (t) {\n                return {\n                        targetId: CoursesCurriculum__Target.id(t),\n                        status: /* Pending */0\n                      };\n              }), targets);\n}\n\nfunction lockTargets(targets, reason) {\n  return List.map((function (t) {\n                return {\n                        targetId: CoursesCurriculum__Target.id(t),\n                        status: /* Locked */[reason]\n                      };\n              }), targets);\n}\n\nfunction allTargetsComplete(targetCache, targetIds) {\n  return List.for_all((function (targetId) {\n                var cachedTarget = List.find((function (ct) {\n                        return ct.targetId === targetId;\n                      }), targetCache);\n                return cachedTarget.submissionStatus === /* SubmissionPassed */2;\n              }), targetIds);\n}\n\nfunction compute(preview, team, course, levels, targetGroups, targets, submissions) {\n  if (preview) {\n    return makePending(targets);\n  } else {\n    var date = CoursesCurriculum__Course.endsAt(course);\n    if (Belt_Option.mapWithDefault(date, false, DateFns.isPast)) {\n      return lockTargets(targets, /* CourseLocked */0);\n    } else {\n      var date$1 = CoursesCurriculum__Team.accessEndsAt(team);\n      if (Belt_Option.mapWithDefault(date$1, false, DateFns.isPast)) {\n        return lockTargets(targets, /* AccessLocked */1);\n      } else {\n        var studentLevelNumber = CoursesCurriculum__Level.number(List.find((function (l) {\n                    return CoursesCurriculum__Level.id(l) === CoursesCurriculum__Team.levelId(team);\n                  }), levels));\n        var targetsCache = List.map((function (target) {\n                var targetId = CoursesCurriculum__Target.id(target);\n                var targetGroup = List.find((function (tg) {\n                        return CoursesCurriculum__TargetGroup.id(tg) === CoursesCurriculum__Target.targetGroupId(target);\n                      }), targetGroups);\n                var milestone = CoursesCurriculum__TargetGroup.milestone(targetGroup);\n                var levelNumber = CoursesCurriculum__Level.number(List.find((function (l) {\n                            return CoursesCurriculum__Level.id(l) === CoursesCurriculum__TargetGroup.levelId(targetGroup);\n                          }), levels));\n                var submission = ListUtils.findOpt((function (s) {\n                        return CoursesCurriculum__LatestSubmission.targetId(s) === targetId;\n                      }), submissions);\n                var submissionStatus;\n                if (submission !== undefined) {\n                  var s = submission;\n                  submissionStatus = CoursesCurriculum__LatestSubmission.hasPassed(s) ? /* SubmissionPassed */2 : (\n                      CoursesCurriculum__LatestSubmission.hasBeenEvaluated(s) ? /* SubmissionFailed */3 : /* SubmissionPendingReview */1\n                    );\n                } else {\n                  submissionStatus = /* SubmissionMissing */0;\n                }\n                return {\n                        targetId: targetId,\n                        targetReviewed: CoursesCurriculum__Target.reviewed(target),\n                        levelNumber: levelNumber,\n                        milestone: milestone,\n                        submissionStatus: submissionStatus,\n                        prerequisiteTargetIds: CoursesCurriculum__Target.prerequisiteTargetIds(target)\n                      };\n              }), targets);\n        return List.map((function (ct) {\n                      var match = ct.submissionStatus;\n                      var status;\n                      switch (match) {\n                        case /* SubmissionMissing */0 :\n                            status = ct.levelNumber > studentLevelNumber && ct.targetReviewed ? /* Locked */[/* LevelLocked */2] : (\n                                allTargetsComplete(targetsCache, ct.prerequisiteTargetIds) ? /* Pending */0 : /* Locked */[/* PrerequisitesIncomplete */3]\n                              );\n                            break;\n                        case /* SubmissionPendingReview */1 :\n                            status = /* Submitted */1;\n                            break;\n                        case /* SubmissionPassed */2 :\n                            status = /* Passed */2;\n                            break;\n                        case /* SubmissionFailed */3 :\n                            status = /* Failed */3;\n                            break;\n                        \n                      }\n                      return {\n                              targetId: ct.targetId,\n                              status: status\n                            };\n                    }), targetsCache);\n      }\n    }\n  }\n}\n\nfunction targetId(t) {\n  return t.targetId;\n}\n\nfunction status(t) {\n  return t.status;\n}\n\nfunction lockReasonToString(lr) {\n  switch (lr) {\n    case /* CourseLocked */0 :\n        return \"The course has ended and submissions are disabled for all targets!\";\n    case /* AccessLocked */1 :\n        return \"Your access to this course has ended.\";\n    case /* LevelLocked */2 :\n        return \"You must level up to complete this target.\";\n    case /* PrerequisitesIncomplete */3 :\n        return \"This target has pre-requisites that are incomplete.\";\n    \n  }\n}\n\nfunction statusToString(t) {\n  var match = t.status;\n  if (typeof match === \"number\") {\n    switch (match) {\n      case /* Pending */0 :\n          return \"Pending\";\n      case /* Submitted */1 :\n          return \"Submitted\";\n      case /* Passed */2 :\n          return \"Passed\";\n      case /* Failed */3 :\n          return \"Failed\";\n      \n    }\n  } else {\n    return \"Locked\";\n  }\n}\n\nfunction canSubmit(resubmittable, t) {\n  var match = t.status;\n  if (resubmittable) {\n    if (typeof match === \"number\" && match === 2) {\n      return true;\n    }\n    \n  } else if (typeof match === \"number\" && match === 2) {\n    return false;\n  }\n  if (typeof match === \"number\") {\n    return match !== 1;\n  } else {\n    return false;\n  }\n}\n\nfunction currentLevelStatuses(progressionBehavior) {\n  if (typeof progressionBehavior === \"number\" && progressionBehavior < 751362817) {\n    return /* :: */[\n            /* Passed */2,\n            /* [] */0\n          ];\n  } else {\n    return /* :: */[\n            /* Submitted */1,\n            /* :: */[\n              /* Passed */2,\n              /* [] */0\n            ]\n          ];\n  }\n}\n\nfunction matchesStatuses(statuses, ts) {\n  var matchedTargetStatuses = List.filter((function (t) {\n            return List.mem(t.status, statuses);\n          }))(ts);\n  return Caml_obj.caml_equal(ts, matchedTargetStatuses);\n}\n\nvar Course = /* alias */0;\n\nvar Team = /* alias */0;\n\nvar Target = /* alias */0;\n\nvar Level = /* alias */0;\n\nvar TargetGroup = /* alias */0;\n\nvar LatestSubmission = /* alias */0;\n\nvar minimumRequiredLevelStatuses = /* :: */[\n  /* Passed */2,\n  /* [] */0\n];\n\nexports.Course = Course;\nexports.Team = Team;\nexports.Target = Target;\nexports.Level = Level;\nexports.TargetGroup = TargetGroup;\nexports.LatestSubmission = LatestSubmission;\nexports.isPast = isPast;\nexports.makePending = makePending;\nexports.lockTargets = lockTargets;\nexports.allTargetsComplete = allTargetsComplete;\nexports.compute = compute;\nexports.targetId = targetId;\nexports.status = status;\nexports.lockReasonToString = lockReasonToString;\nexports.statusToString = statusToString;\nexports.canSubmit = canSubmit;\nexports.currentLevelStatuses = currentLevelStatuses;\nexports.minimumRequiredLevelStatuses = minimumRequiredLevelStatuses;\nexports.matchesStatuses = matchesStatuses;\n/* DateFns Not a pure module */\n"]},"metadata":{},"sourceType":"module"}