{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\n\nvar Pervasives = require(\"bs-platform/lib/js/pervasives.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar UnsafeFindFailed = Caml_exceptions.create(\"ListUtils.UnsafeFindFailed\");\n\nfunction isEmpty(l) {\n  if (l) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction isNotEmpty(l) {\n  return !isEmpty(l);\n}\n\nfunction findOpt(p, l) {\n  try {\n    return Caml_option.some(List.find(p, l));\n  } catch (exn) {\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return;\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction unsafeFind(p, message, l) {\n  try {\n    return List.find(p, l);\n  } catch (exn) {\n    if (exn === Caml_builtin_exceptions.not_found) {\n      Rollbar.error(message);\n      throw [UnsafeFindFailed, message];\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction distinct(l) {\n  var _l = l;\n  var _d =\n  /* [] */\n  0;\n\n  while (true) {\n    var d = _d;\n    var l$1 = _l;\n\n    if (l$1) {\n      var tail = l$1[1];\n      var head = l$1[0];\n\n      if (List.exists(function (head) {\n        return function (u) {\n          return Caml_obj.caml_equal(u, head);\n        };\n      }(head), d)) {\n        _l = tail;\n        continue;\n      } else {\n        _d =\n        /* :: */\n        [head, d];\n        _l = tail;\n        continue;\n      }\n    } else {\n      return d;\n    }\n  }\n\n  ;\n}\n\nfunction swapDown(e, l) {\n  var _prev =\n  /* [] */\n  0;\n  var _l = l;\n  var e$1 = e;\n\n  while (true) {\n    var l$1 = _l;\n    var prev = _prev;\n\n    if (l$1) {\n      var tail = l$1[1];\n      var head = l$1[0];\n\n      if (tail && Caml_obj.caml_equal(head, e$1)) {\n        return Pervasives.$at(prev,\n        /* :: */\n        [tail[0],\n        /* :: */\n        [head, tail[1]]]);\n      }\n\n      _l = tail;\n      _prev = Pervasives.$at(prev,\n      /* :: */\n      [head,\n      /* [] */\n      0]);\n      continue;\n    } else {\n      return prev;\n    }\n  }\n\n  ;\n}\n\nfunction swapUp(e, l) {\n  return List.rev(swapDown(e, List.rev(l)));\n}\n\nfunction swap(up, e, l) {\n  if (up) {\n    return swapUp(e, l);\n  } else {\n    return swapDown(e, l);\n  }\n}\n\nexports.UnsafeFindFailed = UnsafeFindFailed;\nexports.isEmpty = isEmpty;\nexports.isNotEmpty = isNotEmpty;\nexports.findOpt = findOpt;\nexports.unsafeFind = unsafeFind;\nexports.distinct = distinct;\nexports.swapDown = swapDown;\nexports.swapUp = swapUp;\nexports.swap = swap;\n/* No side effect */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/shared/utils/ListUtils.bs.js"],"names":["List","require","Caml_obj","Pervasives","Caml_option","Caml_exceptions","Caml_builtin_exceptions","UnsafeFindFailed","create","isEmpty","l","isNotEmpty","findOpt","p","some","find","exn","not_found","unsafeFind","message","Rollbar","error","distinct","_l","_d","d","l$1","tail","head","exists","u","caml_equal","swapDown","e","_prev","e$1","prev","$at","swapUp","rev","swap","up","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\nvar Pervasives = require(\"bs-platform/lib/js/pervasives.js\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar UnsafeFindFailed = Caml_exceptions.create(\"ListUtils.UnsafeFindFailed\");\n\nfunction isEmpty(l) {\n  if (l) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction isNotEmpty(l) {\n  return !isEmpty(l);\n}\n\nfunction findOpt(p, l) {\n  try {\n    return Caml_option.some(List.find(p, l));\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return ;\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction unsafeFind(p, message, l) {\n  try {\n    return List.find(p, l);\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      Rollbar.error(message);\n      throw [\n            UnsafeFindFailed,\n            message\n          ];\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction distinct(l) {\n  var _l = l;\n  var _d = /* [] */0;\n  while(true) {\n    var d = _d;\n    var l$1 = _l;\n    if (l$1) {\n      var tail = l$1[1];\n      var head = l$1[0];\n      if (List.exists((function(head){\n            return function (u) {\n              return Caml_obj.caml_equal(u, head);\n            }\n            }(head)), d)) {\n        _l = tail;\n        continue ;\n      } else {\n        _d = /* :: */[\n          head,\n          d\n        ];\n        _l = tail;\n        continue ;\n      }\n    } else {\n      return d;\n    }\n  };\n}\n\nfunction swapDown(e, l) {\n  var _prev = /* [] */0;\n  var _l = l;\n  var e$1 = e;\n  while(true) {\n    var l$1 = _l;\n    var prev = _prev;\n    if (l$1) {\n      var tail = l$1[1];\n      var head = l$1[0];\n      if (tail && Caml_obj.caml_equal(head, e$1)) {\n        return Pervasives.$at(prev, /* :: */[\n                    tail[0],\n                    /* :: */[\n                      head,\n                      tail[1]\n                    ]\n                  ]);\n      }\n      _l = tail;\n      _prev = Pervasives.$at(prev, /* :: */[\n            head,\n            /* [] */0\n          ]);\n      continue ;\n    } else {\n      return prev;\n    }\n  };\n}\n\nfunction swapUp(e, l) {\n  return List.rev(swapDown(e, List.rev(l)));\n}\n\nfunction swap(up, e, l) {\n  if (up) {\n    return swapUp(e, l);\n  } else {\n    return swapDown(e, l);\n  }\n}\n\nexports.UnsafeFindFailed = UnsafeFindFailed;\nexports.isEmpty = isEmpty;\nexports.isNotEmpty = isNotEmpty;\nexports.findOpt = findOpt;\nexports.unsafeFind = unsafeFind;\nexports.distinct = distinct;\nexports.swapDown = swapDown;\nexports.swapUp = swapUp;\nexports.swap = swap;\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}