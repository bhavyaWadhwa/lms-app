{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar ListUtils = require(\"./ListUtils.bs.js\");\n\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar $$Notification = require(\"../Notification.bs.js\");\n\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar UnsafeFindFailed = Caml_exceptions.create(\"ArrayUtils.UnsafeFindFailed\");\n\nfunction copyAndSort(f, t) {\n  var cp = $$Array.copy(t);\n  $$Array.sort(f, cp);\n  return cp;\n}\n\nfunction copyAndPush(e, t) {\n  var copy = $$Array.copy(t);\n  copy.push(e);\n  return copy;\n}\n\nfunction isEmpty(a) {\n  return a.length === 0;\n}\n\nfunction isNotEmpty(a) {\n  return !isEmpty(a);\n}\n\nfunction unsafeFind(p, message, l) {\n  var match = l.find(Curry.__1(p));\n\n  if (match !== undefined) {\n    return match;\n  } else {\n    Rollbar.error(message);\n    $$Notification.error(\"An unexpected error occurred\", \"Our team has been notified about this error. Please try reloading this page.\");\n    throw [UnsafeFindFailed, message];\n  }\n}\n\nfunction flatten(t) {\n  return $$Array.of_list(List.flatten($$Array.to_list(t)));\n}\n\nfunction distinct(t) {\n  return $$Array.of_list(ListUtils.distinct($$Array.to_list(t)));\n}\n\nfunction sort_uniq(f, t) {\n  return $$Array.of_list(List.sort_uniq(f, $$Array.to_list(t)));\n}\n\nfunction getOpt(a, i) {\n  try {\n    return Caml_option.some(Caml_array.caml_array_get(i, a));\n  } catch (exn) {\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return;\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction swapUp(i, t) {\n  if (i <= 0 || i >= t.length) {\n    Rollbar.warning(\"Index to swap out of bounds in array!\");\n    return t;\n  } else {\n    var copy = $$Array.copy(t);\n    Caml_array.caml_array_set(copy, i, Caml_array.caml_array_get(t, i - 1 | 0));\n    Caml_array.caml_array_set(copy, i - 1 | 0, Caml_array.caml_array_get(t, i));\n    return copy;\n  }\n}\n\nfunction swapDown(i, t) {\n  return swapUp(i + 1 | 0, t);\n}\n\nexports.UnsafeFindFailed = UnsafeFindFailed;\nexports.copyAndSort = copyAndSort;\nexports.copyAndPush = copyAndPush;\nexports.isEmpty = isEmpty;\nexports.isNotEmpty = isNotEmpty;\nexports.unsafeFind = unsafeFind;\nexports.flatten = flatten;\nexports.distinct = distinct;\nexports.sort_uniq = sort_uniq;\nexports.getOpt = getOpt;\nexports.swapUp = swapUp;\nexports.swapDown = swapDown;\n/* Notification Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/shared/utils/ArrayUtils.bs.js"],"names":["List","require","$$Array","Curry","ListUtils","Caml_array","Caml_option","$$Notification","Caml_exceptions","Caml_builtin_exceptions","UnsafeFindFailed","create","copyAndSort","f","t","cp","copy","sort","copyAndPush","e","push","isEmpty","a","length","isNotEmpty","unsafeFind","p","message","l","match","find","__1","undefined","Rollbar","error","flatten","of_list","to_list","distinct","sort_uniq","getOpt","i","some","caml_array_get","exn","not_found","swapUp","warning","caml_array_set","swapDown","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar ListUtils = require(\"./ListUtils.bs.js\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar $$Notification = require(\"../Notification.bs.js\");\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar UnsafeFindFailed = Caml_exceptions.create(\"ArrayUtils.UnsafeFindFailed\");\n\nfunction copyAndSort(f, t) {\n  var cp = $$Array.copy(t);\n  $$Array.sort(f, cp);\n  return cp;\n}\n\nfunction copyAndPush(e, t) {\n  var copy = $$Array.copy(t);\n  copy.push(e);\n  return copy;\n}\n\nfunction isEmpty(a) {\n  return a.length === 0;\n}\n\nfunction isNotEmpty(a) {\n  return !isEmpty(a);\n}\n\nfunction unsafeFind(p, message, l) {\n  var match = l.find(Curry.__1(p));\n  if (match !== undefined) {\n    return match;\n  } else {\n    Rollbar.error(message);\n    $$Notification.error(\"An unexpected error occurred\", \"Our team has been notified about this error. Please try reloading this page.\");\n    throw [\n          UnsafeFindFailed,\n          message\n        ];\n  }\n}\n\nfunction flatten(t) {\n  return $$Array.of_list(List.flatten($$Array.to_list(t)));\n}\n\nfunction distinct(t) {\n  return $$Array.of_list(ListUtils.distinct($$Array.to_list(t)));\n}\n\nfunction sort_uniq(f, t) {\n  return $$Array.of_list(List.sort_uniq(f, $$Array.to_list(t)));\n}\n\nfunction getOpt(a, i) {\n  try {\n    return Caml_option.some(Caml_array.caml_array_get(i, a));\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return ;\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction swapUp(i, t) {\n  if (i <= 0 || i >= t.length) {\n    Rollbar.warning(\"Index to swap out of bounds in array!\");\n    return t;\n  } else {\n    var copy = $$Array.copy(t);\n    Caml_array.caml_array_set(copy, i, Caml_array.caml_array_get(t, i - 1 | 0));\n    Caml_array.caml_array_set(copy, i - 1 | 0, Caml_array.caml_array_get(t, i));\n    return copy;\n  }\n}\n\nfunction swapDown(i, t) {\n  return swapUp(i + 1 | 0, t);\n}\n\nexports.UnsafeFindFailed = UnsafeFindFailed;\nexports.copyAndSort = copyAndSort;\nexports.copyAndPush = copyAndPush;\nexports.isEmpty = isEmpty;\nexports.isNotEmpty = isNotEmpty;\nexports.unsafeFind = unsafeFind;\nexports.flatten = flatten;\nexports.distinct = distinct;\nexports.sort_uniq = sort_uniq;\nexports.getOpt = getOpt;\nexports.swapUp = swapUp;\nexports.swapDown = swapDown;\n/* Notification Not a pure module */\n"]},"metadata":{},"sourceType":"module"}