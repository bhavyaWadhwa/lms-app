{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar DateFns = require(\"date-fns\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\n\nvar DateFnsTz = require(\"date-fns-tz\");\n\nfunction formatDistance(date, baseDate, includeSecondsOpt, addSuffixOpt, param) {\n  var includeSeconds = includeSecondsOpt !== undefined ? includeSecondsOpt : false;\n  var addSuffix = addSuffixOpt !== undefined ? addSuffixOpt : false;\n  var options = {\n    includeSeconds: includeSeconds,\n    addSuffix: addSuffix\n  };\n  return DateFns.formatDistance(date, baseDate, options);\n}\n\nfunction formatDistanceStrict(date, baseDate, addSuffixOpt, unit, roundingMethodOpt, param) {\n  var addSuffix = addSuffixOpt !== undefined ? addSuffixOpt : false;\n  var roundingMethod = roundingMethodOpt !== undefined ? roundingMethodOpt : \"round\";\n  var tmp = {\n    addSuffix: addSuffix,\n    roundingMethod: roundingMethod\n  };\n\n  if (unit !== undefined) {\n    tmp.unit = Caml_option.valFromOption(unit);\n  }\n\n  var options = tmp;\n  return DateFns.formatDistanceStrict(date, baseDate, options);\n}\n\nfunction formatDistanceToNow(date, includeSecondsOpt, addSuffixOpt, param) {\n  var includeSeconds = includeSecondsOpt !== undefined ? includeSecondsOpt : false;\n  var addSuffix = addSuffixOpt !== undefined ? addSuffixOpt : false;\n  var options = {\n    includeSeconds: includeSeconds,\n    addSuffix: addSuffix\n  };\n  return DateFns.formatDistanceToNow(date, options);\n}\n\nfunction formatDistanceToNowStrict(date, addSuffixOpt, unit, roundingMethodOpt, param) {\n  var addSuffix = addSuffixOpt !== undefined ? addSuffixOpt : false;\n  var roundingMethod = roundingMethodOpt !== undefined ? roundingMethodOpt : \"round\";\n  var tmp = {\n    addSuffix: addSuffix,\n    roundingMethod: roundingMethod\n  };\n\n  if (unit !== undefined) {\n    tmp.unit = Caml_option.valFromOption(unit);\n  }\n\n  var options = tmp;\n  return DateFns.formatDistanceToNowStrict(date, options);\n}\n\nfunction format(date, fmt) {\n  return DateFnsTz.format(date, fmt, {\n    timeZone: \"Asia/Kolkata\"\n  });\n}\n\nfunction formatPreset(date, shortOpt, yearOpt, timeOpt, param) {\n  var $$short = shortOpt !== undefined ? shortOpt : false;\n  var year = yearOpt !== undefined ? yearOpt : false;\n  var time = timeOpt !== undefined ? timeOpt : false;\n  var leading = $$short ? \"MMM d\" : \"MMMM d\";\n  var middle = year ? \", yyyy\" : \"\";\n  var trailing = time ? \" HH:mm\" : \"\";\n  return format(date, leading + (middle + trailing));\n}\n\nfunction decodeISO(json) {\n  if (typeof json === \"string\") {\n    return DateFns.parseISO(json);\n  } else {\n    throw [Json_decode.DecodeError, \"Expected string, got \" + typeof json];\n  }\n}\n\nfunction encodeISO(date) {\n  return date.toISOString();\n}\n\nfunction parseISO(prim) {\n  return DateFns.parseISO(prim);\n}\n\nfunction differenceInSeconds(prim, prim$1) {\n  return DateFns.differenceInSeconds(prim, prim$1);\n}\n\nfunction isPast(prim) {\n  return DateFns.isPast(prim);\n}\n\nfunction isFuture(prim) {\n  return DateFns.isFuture(prim);\n}\n\nexports.parseISO = parseISO;\nexports.decodeISO = decodeISO;\nexports.encodeISO = encodeISO;\nexports.differenceInSeconds = differenceInSeconds;\nexports.isPast = isPast;\nexports.isFuture = isFuture;\nexports.format = format;\nexports.formatPreset = formatPreset;\nexports.formatDistance = formatDistance;\nexports.formatDistanceStrict = formatDistanceStrict;\nexports.formatDistanceToNow = formatDistanceToNow;\nexports.formatDistanceToNowStrict = formatDistanceToNowStrict;\n/* date-fns Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/shared/utils/DateFns.bs.js"],"names":["DateFns","require","Caml_option","Json_decode","DateFnsTz","formatDistance","date","baseDate","includeSecondsOpt","addSuffixOpt","param","includeSeconds","undefined","addSuffix","options","formatDistanceStrict","unit","roundingMethodOpt","roundingMethod","tmp","valFromOption","formatDistanceToNow","formatDistanceToNowStrict","format","fmt","timeZone","formatPreset","shortOpt","yearOpt","timeOpt","$$short","year","time","leading","middle","trailing","decodeISO","json","parseISO","DecodeError","encodeISO","toISOString","prim","differenceInSeconds","prim$1","isPast","isFuture","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar DateFns = require(\"date-fns\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\nvar DateFnsTz = require(\"date-fns-tz\");\n\nfunction formatDistance(date, baseDate, includeSecondsOpt, addSuffixOpt, param) {\n  var includeSeconds = includeSecondsOpt !== undefined ? includeSecondsOpt : false;\n  var addSuffix = addSuffixOpt !== undefined ? addSuffixOpt : false;\n  var options = {\n    includeSeconds: includeSeconds,\n    addSuffix: addSuffix\n  };\n  return DateFns.formatDistance(date, baseDate, options);\n}\n\nfunction formatDistanceStrict(date, baseDate, addSuffixOpt, unit, roundingMethodOpt, param) {\n  var addSuffix = addSuffixOpt !== undefined ? addSuffixOpt : false;\n  var roundingMethod = roundingMethodOpt !== undefined ? roundingMethodOpt : \"round\";\n  var tmp = {\n    addSuffix: addSuffix,\n    roundingMethod: roundingMethod\n  };\n  if (unit !== undefined) {\n    tmp.unit = Caml_option.valFromOption(unit);\n  }\n  var options = tmp;\n  return DateFns.formatDistanceStrict(date, baseDate, options);\n}\n\nfunction formatDistanceToNow(date, includeSecondsOpt, addSuffixOpt, param) {\n  var includeSeconds = includeSecondsOpt !== undefined ? includeSecondsOpt : false;\n  var addSuffix = addSuffixOpt !== undefined ? addSuffixOpt : false;\n  var options = {\n    includeSeconds: includeSeconds,\n    addSuffix: addSuffix\n  };\n  return DateFns.formatDistanceToNow(date, options);\n}\n\nfunction formatDistanceToNowStrict(date, addSuffixOpt, unit, roundingMethodOpt, param) {\n  var addSuffix = addSuffixOpt !== undefined ? addSuffixOpt : false;\n  var roundingMethod = roundingMethodOpt !== undefined ? roundingMethodOpt : \"round\";\n  var tmp = {\n    addSuffix: addSuffix,\n    roundingMethod: roundingMethod\n  };\n  if (unit !== undefined) {\n    tmp.unit = Caml_option.valFromOption(unit);\n  }\n  var options = tmp;\n  return DateFns.formatDistanceToNowStrict(date, options);\n}\n\nfunction format(date, fmt) {\n  return DateFnsTz.format(date, fmt, {\n              timeZone: \"Asia/Kolkata\"\n            });\n}\n\nfunction formatPreset(date, shortOpt, yearOpt, timeOpt, param) {\n  var $$short = shortOpt !== undefined ? shortOpt : false;\n  var year = yearOpt !== undefined ? yearOpt : false;\n  var time = timeOpt !== undefined ? timeOpt : false;\n  var leading = $$short ? \"MMM d\" : \"MMMM d\";\n  var middle = year ? \", yyyy\" : \"\";\n  var trailing = time ? \" HH:mm\" : \"\";\n  return format(date, leading + (middle + trailing));\n}\n\nfunction decodeISO(json) {\n  if (typeof json === \"string\") {\n    return DateFns.parseISO(json);\n  } else {\n    throw [\n          Json_decode.DecodeError,\n          \"Expected string, got \" + typeof json\n        ];\n  }\n}\n\nfunction encodeISO(date) {\n  return date.toISOString();\n}\n\nfunction parseISO(prim) {\n  return DateFns.parseISO(prim);\n}\n\nfunction differenceInSeconds(prim, prim$1) {\n  return DateFns.differenceInSeconds(prim, prim$1);\n}\n\nfunction isPast(prim) {\n  return DateFns.isPast(prim);\n}\n\nfunction isFuture(prim) {\n  return DateFns.isFuture(prim);\n}\n\nexports.parseISO = parseISO;\nexports.decodeISO = decodeISO;\nexports.encodeISO = encodeISO;\nexports.differenceInSeconds = differenceInSeconds;\nexports.isPast = isPast;\nexports.isFuture = isFuture;\nexports.format = format;\nexports.formatPreset = formatPreset;\nexports.formatDistance = formatDistance;\nexports.formatDistanceStrict = formatDistanceStrict;\nexports.formatDistanceToNow = formatDistanceToNow;\nexports.formatDistanceToNowStrict = formatDistanceToNowStrict;\n/* date-fns Not a pure module */\n"]},"metadata":{},"sourceType":"module"}