{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar $$String = require(\"bs-platform/lib/js/string.js\");\n\nvar ArrayUtils = require(\"../../../shared/utils/ArrayUtils.bs.js\");\n\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\n\nvar Caml_format = require(\"bs-platform/lib/js/caml_format.js\");\n\nvar CoursesStudents__TeamInfo = require(\"./CoursesStudents__TeamInfo.bs.js\");\n\nvar CoursesStudents__CoachNote = require(\"./CoursesStudents__CoachNote.bs.js\");\n\nvar CoursesStudents__EvaluationCriterion = require(\"./CoursesStudents__EvaluationCriterion.bs.js\");\n\nfunction team(t) {\n  return t.team;\n}\n\nfunction student(t) {\n  return CoursesStudents__TeamInfo.studentWithId(t.id, t.team);\n}\n\nfunction name(t) {\n  return CoursesStudents__TeamInfo.studentName(student(t));\n}\n\nfunction title(t) {\n  return CoursesStudents__TeamInfo.studentTitle(student(t));\n}\n\nfunction email(t) {\n  return t.email;\n}\n\nfunction levelId(t) {\n  return CoursesStudents__TeamInfo.levelId(t.team);\n}\n\nfunction phone(t) {\n  return t.phone;\n}\n\nfunction socialLinks(t) {\n  return t.socialLinks;\n}\n\nfunction avatarUrl(t) {\n  return CoursesStudents__TeamInfo.studentAvatarUrl(student(t));\n}\n\nfunction coachNotes(t) {\n  return t.coachNotes;\n}\n\nfunction teamCoachUserIds(t) {\n  return CoursesStudents__TeamInfo.coachUserIds(t.team);\n}\n\nfunction makeAverageGrade(gradesData) {\n  return gradesData.map(function (gradeData) {\n    return {\n      evaluationCriterionId: gradeData.evaluationCriterionId,\n      grade: gradeData.averageGrade\n    };\n  });\n}\n\nfunction totalTargets(t) {\n  return t.totalTargets;\n}\n\nfunction gradeAsPercentage(averageGrade, evaluationCriterion) {\n  var maxGrade = evaluationCriterion.maxGrade;\n  return String(averageGrade.grade / maxGrade * 100.0 | 0);\n}\n\nfunction targetsCompleted(t) {\n  return t.targetsCompleted;\n}\n\nfunction quizzesAttempted(t) {\n  return String(t.quizScores.length);\n}\n\nfunction evaluationCriteria(t) {\n  return t.evaluationCriteria;\n}\n\nfunction averageGrades(t) {\n  return t.averageGrades;\n}\n\nfunction completedLevelIds(t) {\n  return t.completedLevelIds;\n}\n\nfunction gradeValue(averageGrade) {\n  return averageGrade.grade;\n}\n\nfunction evaluationCriterionForGrade(grade, evaluationCriteria, componentName) {\n  return ArrayUtils.unsafeFind(function (ec) {\n    return CoursesStudents__EvaluationCriterion.id(ec) === grade.evaluationCriterionId;\n  }, \"Unable to find evaluation criterion with id: \" + (grade.evaluationCriterionId + (\" in component: \" + componentName)), evaluationCriteria);\n}\n\nfunction addNewNote(note, t) {\n  var notes = $$Array.append(t.coachNotes, [note]);\n  return {\n    id: t.id,\n    email: t.email,\n    phone: t.phone,\n    coachNotes: notes,\n    evaluationCriteria: t.evaluationCriteria,\n    socialLinks: t.socialLinks,\n    totalTargets: t.totalTargets,\n    targetsCompleted: t.targetsCompleted,\n    quizScores: t.quizScores,\n    averageGrades: t.averageGrades,\n    completedLevelIds: t.completedLevelIds,\n    team: t.team\n  };\n}\n\nfunction removeNote(noteId, t) {\n  var notes = t.coachNotes.filter(function (note) {\n    return CoursesStudents__CoachNote.id(note) !== noteId;\n  });\n  return {\n    id: t.id,\n    email: t.email,\n    phone: t.phone,\n    coachNotes: notes,\n    evaluationCriteria: t.evaluationCriteria,\n    socialLinks: t.socialLinks,\n    totalTargets: t.totalTargets,\n    targetsCompleted: t.targetsCompleted,\n    quizScores: t.quizScores,\n    averageGrades: t.averageGrades,\n    completedLevelIds: t.completedLevelIds,\n    team: t.team\n  };\n}\n\nfunction computeAverageQuizScore(quizScores) {\n  var sumOfPercentageScores = $$Array.map(function (quizScore) {\n    var fractionArray = $$Array.of_list($$String.split_on_char(\n    /* \"/\" */\n    47, quizScore));\n    var numerator = Caml_format.caml_float_of_string(Caml_array.caml_array_get(fractionArray, 0));\n    var denominator = Caml_format.caml_float_of_string(Caml_array.caml_array_get(fractionArray, 1));\n    return numerator / denominator * 100.0;\n  }, quizScores).reduce(function (a, b) {\n    return a + b;\n  }, 0.0);\n  return sumOfPercentageScores / quizScores.length;\n}\n\nfunction averageQuizScore(t) {\n  if (ArrayUtils.isEmpty(t.quizScores)) {\n    return;\n  } else {\n    return computeAverageQuizScore(t.quizScores);\n  }\n}\n\nfunction makeFromJs(id, studentDetails, coachNotes) {\n  return {\n    id: id,\n    email: studentDetails.email,\n    phone: studentDetails.phone,\n    coachNotes: coachNotes.map(CoursesStudents__CoachNote.makeFromJs),\n    evaluationCriteria: CoursesStudents__EvaluationCriterion.makeFromJs(studentDetails.evaluationCriteria),\n    socialLinks: studentDetails.socialLinks,\n    totalTargets: studentDetails.totalTargets,\n    targetsCompleted: studentDetails.targetsCompleted,\n    quizScores: studentDetails.quizScores,\n    averageGrades: makeAverageGrade(studentDetails.averageGrades),\n    completedLevelIds: studentDetails.completedLevelIds,\n    team: CoursesStudents__TeamInfo.makeFromJS(studentDetails.team)\n  };\n}\n\nfunction teamHasManyStudents(t) {\n  return CoursesStudents__TeamInfo.students(t.team).length > 1;\n}\n\nexports.team = team;\nexports.student = student;\nexports.name = name;\nexports.title = title;\nexports.email = email;\nexports.levelId = levelId;\nexports.phone = phone;\nexports.socialLinks = socialLinks;\nexports.avatarUrl = avatarUrl;\nexports.coachNotes = coachNotes;\nexports.teamCoachUserIds = teamCoachUserIds;\nexports.makeAverageGrade = makeAverageGrade;\nexports.totalTargets = totalTargets;\nexports.gradeAsPercentage = gradeAsPercentage;\nexports.targetsCompleted = targetsCompleted;\nexports.quizzesAttempted = quizzesAttempted;\nexports.evaluationCriteria = evaluationCriteria;\nexports.averageGrades = averageGrades;\nexports.completedLevelIds = completedLevelIds;\nexports.gradeValue = gradeValue;\nexports.evaluationCriterionForGrade = evaluationCriterionForGrade;\nexports.addNewNote = addNewNote;\nexports.removeNote = removeNote;\nexports.computeAverageQuizScore = computeAverageQuizScore;\nexports.averageQuizScore = averageQuizScore;\nexports.makeFromJs = makeFromJs;\nexports.teamHasManyStudents = teamHasManyStudents;\n/* ArrayUtils Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/courses/students/types/CoursesStudents__StudentDetails.bs.js"],"names":["$$Array","require","$$String","ArrayUtils","Caml_array","Caml_format","CoursesStudents__TeamInfo","CoursesStudents__CoachNote","CoursesStudents__EvaluationCriterion","team","t","student","studentWithId","id","name","studentName","title","studentTitle","email","levelId","phone","socialLinks","avatarUrl","studentAvatarUrl","coachNotes","teamCoachUserIds","coachUserIds","makeAverageGrade","gradesData","map","gradeData","evaluationCriterionId","grade","averageGrade","totalTargets","gradeAsPercentage","evaluationCriterion","maxGrade","String","targetsCompleted","quizzesAttempted","quizScores","length","evaluationCriteria","averageGrades","completedLevelIds","gradeValue","evaluationCriterionForGrade","componentName","unsafeFind","ec","addNewNote","note","notes","append","removeNote","noteId","filter","computeAverageQuizScore","sumOfPercentageScores","quizScore","fractionArray","of_list","split_on_char","numerator","caml_float_of_string","caml_array_get","denominator","reduce","a","b","averageQuizScore","isEmpty","makeFromJs","studentDetails","makeFromJS","teamHasManyStudents","students","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar $$String = require(\"bs-platform/lib/js/string.js\");\nvar ArrayUtils = require(\"../../../shared/utils/ArrayUtils.bs.js\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\nvar Caml_format = require(\"bs-platform/lib/js/caml_format.js\");\nvar CoursesStudents__TeamInfo = require(\"./CoursesStudents__TeamInfo.bs.js\");\nvar CoursesStudents__CoachNote = require(\"./CoursesStudents__CoachNote.bs.js\");\nvar CoursesStudents__EvaluationCriterion = require(\"./CoursesStudents__EvaluationCriterion.bs.js\");\n\nfunction team(t) {\n  return t.team;\n}\n\nfunction student(t) {\n  return CoursesStudents__TeamInfo.studentWithId(t.id, t.team);\n}\n\nfunction name(t) {\n  return CoursesStudents__TeamInfo.studentName(student(t));\n}\n\nfunction title(t) {\n  return CoursesStudents__TeamInfo.studentTitle(student(t));\n}\n\nfunction email(t) {\n  return t.email;\n}\n\nfunction levelId(t) {\n  return CoursesStudents__TeamInfo.levelId(t.team);\n}\n\nfunction phone(t) {\n  return t.phone;\n}\n\nfunction socialLinks(t) {\n  return t.socialLinks;\n}\n\nfunction avatarUrl(t) {\n  return CoursesStudents__TeamInfo.studentAvatarUrl(student(t));\n}\n\nfunction coachNotes(t) {\n  return t.coachNotes;\n}\n\nfunction teamCoachUserIds(t) {\n  return CoursesStudents__TeamInfo.coachUserIds(t.team);\n}\n\nfunction makeAverageGrade(gradesData) {\n  return gradesData.map((function (gradeData) {\n                return {\n                        evaluationCriterionId: gradeData.evaluationCriterionId,\n                        grade: gradeData.averageGrade\n                      };\n              }));\n}\n\nfunction totalTargets(t) {\n  return t.totalTargets;\n}\n\nfunction gradeAsPercentage(averageGrade, evaluationCriterion) {\n  var maxGrade = evaluationCriterion.maxGrade;\n  return String(averageGrade.grade / maxGrade * 100.0 | 0);\n}\n\nfunction targetsCompleted(t) {\n  return t.targetsCompleted;\n}\n\nfunction quizzesAttempted(t) {\n  return String(t.quizScores.length);\n}\n\nfunction evaluationCriteria(t) {\n  return t.evaluationCriteria;\n}\n\nfunction averageGrades(t) {\n  return t.averageGrades;\n}\n\nfunction completedLevelIds(t) {\n  return t.completedLevelIds;\n}\n\nfunction gradeValue(averageGrade) {\n  return averageGrade.grade;\n}\n\nfunction evaluationCriterionForGrade(grade, evaluationCriteria, componentName) {\n  return ArrayUtils.unsafeFind((function (ec) {\n                return CoursesStudents__EvaluationCriterion.id(ec) === grade.evaluationCriterionId;\n              }), \"Unable to find evaluation criterion with id: \" + (grade.evaluationCriterionId + (\" in component: \" + componentName)), evaluationCriteria);\n}\n\nfunction addNewNote(note, t) {\n  var notes = $$Array.append(t.coachNotes, [note]);\n  return {\n          id: t.id,\n          email: t.email,\n          phone: t.phone,\n          coachNotes: notes,\n          evaluationCriteria: t.evaluationCriteria,\n          socialLinks: t.socialLinks,\n          totalTargets: t.totalTargets,\n          targetsCompleted: t.targetsCompleted,\n          quizScores: t.quizScores,\n          averageGrades: t.averageGrades,\n          completedLevelIds: t.completedLevelIds,\n          team: t.team\n        };\n}\n\nfunction removeNote(noteId, t) {\n  var notes = t.coachNotes.filter((function (note) {\n          return CoursesStudents__CoachNote.id(note) !== noteId;\n        }));\n  return {\n          id: t.id,\n          email: t.email,\n          phone: t.phone,\n          coachNotes: notes,\n          evaluationCriteria: t.evaluationCriteria,\n          socialLinks: t.socialLinks,\n          totalTargets: t.totalTargets,\n          targetsCompleted: t.targetsCompleted,\n          quizScores: t.quizScores,\n          averageGrades: t.averageGrades,\n          completedLevelIds: t.completedLevelIds,\n          team: t.team\n        };\n}\n\nfunction computeAverageQuizScore(quizScores) {\n  var sumOfPercentageScores = $$Array.map((function (quizScore) {\n            var fractionArray = $$Array.of_list($$String.split_on_char(/* \"/\" */47, quizScore));\n            var numerator = Caml_format.caml_float_of_string(Caml_array.caml_array_get(fractionArray, 0));\n            var denominator = Caml_format.caml_float_of_string(Caml_array.caml_array_get(fractionArray, 1));\n            return numerator / denominator * 100.0;\n          }), quizScores).reduce((function (a, b) {\n          return a + b;\n        }), 0.0);\n  return sumOfPercentageScores / quizScores.length;\n}\n\nfunction averageQuizScore(t) {\n  if (ArrayUtils.isEmpty(t.quizScores)) {\n    return ;\n  } else {\n    return computeAverageQuizScore(t.quizScores);\n  }\n}\n\nfunction makeFromJs(id, studentDetails, coachNotes) {\n  return {\n          id: id,\n          email: studentDetails.email,\n          phone: studentDetails.phone,\n          coachNotes: coachNotes.map(CoursesStudents__CoachNote.makeFromJs),\n          evaluationCriteria: CoursesStudents__EvaluationCriterion.makeFromJs(studentDetails.evaluationCriteria),\n          socialLinks: studentDetails.socialLinks,\n          totalTargets: studentDetails.totalTargets,\n          targetsCompleted: studentDetails.targetsCompleted,\n          quizScores: studentDetails.quizScores,\n          averageGrades: makeAverageGrade(studentDetails.averageGrades),\n          completedLevelIds: studentDetails.completedLevelIds,\n          team: CoursesStudents__TeamInfo.makeFromJS(studentDetails.team)\n        };\n}\n\nfunction teamHasManyStudents(t) {\n  return CoursesStudents__TeamInfo.students(t.team).length > 1;\n}\n\nexports.team = team;\nexports.student = student;\nexports.name = name;\nexports.title = title;\nexports.email = email;\nexports.levelId = levelId;\nexports.phone = phone;\nexports.socialLinks = socialLinks;\nexports.avatarUrl = avatarUrl;\nexports.coachNotes = coachNotes;\nexports.teamCoachUserIds = teamCoachUserIds;\nexports.makeAverageGrade = makeAverageGrade;\nexports.totalTargets = totalTargets;\nexports.gradeAsPercentage = gradeAsPercentage;\nexports.targetsCompleted = targetsCompleted;\nexports.quizzesAttempted = quizzesAttempted;\nexports.evaluationCriteria = evaluationCriteria;\nexports.averageGrades = averageGrades;\nexports.completedLevelIds = completedLevelIds;\nexports.gradeValue = gradeValue;\nexports.evaluationCriterionForGrade = evaluationCriterionForGrade;\nexports.addNewNote = addNewNote;\nexports.removeNote = removeNote;\nexports.computeAverageQuizScore = computeAverageQuizScore;\nexports.averageQuizScore = averageQuizScore;\nexports.makeFromJs = makeFromJs;\nexports.teamHasManyStudents = teamHasManyStudents;\n/* ArrayUtils Not a pure module */\n"]},"metadata":{},"sourceType":"module"}