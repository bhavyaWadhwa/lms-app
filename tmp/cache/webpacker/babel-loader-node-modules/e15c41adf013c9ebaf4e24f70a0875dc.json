{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar Block = require(\"bs-platform/lib/js/block.js\");\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar React = require(\"react\");\n\nvar Js_exn = require(\"bs-platform/lib/js/js_exn.js\");\n\nvar $$String = require(\"bs-platform/lib/js/string.js\");\n\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\n\nvar Js_json = require(\"bs-platform/lib/js/js_json.js\");\n\nvar Js_option = require(\"bs-platform/lib/js/js_option.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar GraphqlQuery = require(\"../../../shared/utils/GraphqlQuery.bs.js\");\n\nvar $$Notification = require(\"../../../shared/Notification.bs.js\");\n\nvar Belt_SetString = require(\"bs-platform/lib/js/belt_SetString.js\");\n\nvar DisablingCover = require(\"../../../shared/components/DisablingCover.bs.js\");\n\nvar MultiselectInline = require(\"../../../packages/multiselect-inline/src/components/MultiselectInline.bs.js\");\n\nvar GraphqlErrorHandler = require(\"../../../shared/utils/GraphqlErrorHandler.bs.js\");\n\nvar School__InputGroupError = require(\"../../shared/components/School__InputGroupError.bs.js\");\n\nvar SchoolCommunities__Course = require(\"../types/index/SchoolCommunities__Course.bs.js\");\n\nvar SchoolCommunities__Community = require(\"../types/index/SchoolCommunities__Community.bs.js\");\n\nvar SchoolCommunities__Connection = require(\"../types/index/SchoolCommunities__Connection.bs.js\");\n\nfunction str(prim) {\n  return prim;\n}\n\nvar ppx_printed_query = \"mutation CreateCommunityMutation($name: String!, $targetLinkable: Boolean!, $courseIds: [ID!]!)  {\\ncreateCommunity(name: $name, targetLinkable: $targetLinkable, courseIds: $courseIds)  {\\ncommunityId  \\nerrors  \\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"createCommunity\");\n  var tmp;\n\n  if (match !== undefined) {\n    var match$1 = Js_json.decodeObject(Caml_option.valFromOption(match));\n\n    if (match$1 !== undefined) {\n      var value$2 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_dict.get(value$2, \"communityId\");\n\n      if (match$2 !== undefined) {\n        var temp = Caml_option.valFromOption(match$2);\n        var match$3 = Js_json.decodeNull(temp);\n\n        if (match$3 !== undefined) {\n          var match$4 = Js_dict.get(value$2, \"errors\");\n\n          if (match$4 !== undefined) {\n            var temp$1 = Caml_option.valFromOption(match$4);\n            var match$5 = Js_json.decodeNull(temp$1);\n            tmp = match$5 !== undefined ? Js_exn.raiseError(\"graphql_ppx: All fields on variant selection set on type CreateCommunityPayload were null\") :\n            /* `Errors */\n            [100464587, Js_option.getExn(Js_json.decodeArray(temp$1)).map(function (value) {\n              var match = Js_json.decodeString(value);\n\n              if (match !== undefined) {\n                var value$1 = match;\n\n                switch (value$1) {\n                  case \"IncorrectCourseIds\":\n                    return (\n                      /* IncorrectCourseIds */\n                      -548933032\n                    );\n\n                  case \"InvalidLengthName\":\n                    return (\n                      /* InvalidLengthName */\n                      781203464\n                    );\n\n                  default:\n                    return Js_exn.raiseError(\"graphql_ppx: Unknown enum variant for CreateCommunityErrors: \" + value$1);\n                }\n              } else {\n                return Js_exn.raiseError(\"graphql_ppx: Expected enum value for CreateCommunityErrors, got \" + JSON.stringify(value));\n              }\n            })];\n          } else {\n            tmp = Js_exn.raiseError(\"graphql_ppx: Field errors on type CreateCommunityPayload is missing\");\n          }\n        } else {\n          var match$6 = Js_json.decodeString(temp);\n          tmp =\n          /* `CommunityId */\n          [74516740, match$6 !== undefined ? match$6 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(temp))];\n        }\n      } else {\n        tmp = Js_exn.raiseError(\"graphql_ppx: Field communityId on type CreateCommunityPayload is missing\");\n      }\n    } else {\n      tmp = Js_exn.raiseError(\"graphql_ppx: Expected type CreateCommunityPayload to be an object\");\n    }\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field createCommunity on type Mutation is missing\");\n  }\n\n  return {\n    createCommunity: tmp\n  };\n}\n\nfunction make(name, targetLinkable, courseIds, param) {\n  return {\n    query: ppx_printed_query,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"name\", name],\n    /* tuple */\n    [\"targetLinkable\", targetLinkable],\n    /* tuple */\n    [\"courseIds\", courseIds.map(function (prim) {\n      return prim;\n    })]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse\n  };\n}\n\nfunction makeWithVariables(variables) {\n  var name = variables.name;\n  var targetLinkable = variables.targetLinkable;\n  var courseIds = variables.courseIds;\n  return {\n    query: ppx_printed_query,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"name\", name],\n    /* tuple */\n    [\"targetLinkable\", targetLinkable],\n    /* tuple */\n    [\"courseIds\", courseIds.map(function (prim) {\n      return prim;\n    })]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse\n  };\n}\n\nfunction makeVariables(name, targetLinkable, courseIds, param) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"name\", name],\n  /* tuple */\n  [\"targetLinkable\", targetLinkable],\n  /* tuple */\n  [\"courseIds\", courseIds.map(function (prim) {\n    return prim;\n  })]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn, name, targetLinkable, courseIds, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n  /* tuple */\n  [\"name\", name],\n  /* tuple */\n  [\"targetLinkable\", targetLinkable],\n  /* tuple */\n  [\"courseIds\", courseIds.map(function (prim) {\n    return prim;\n  })]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  })));\n}\n\nvar definition =\n/* tuple */\n[parse, ppx_printed_query, definition_002];\n\nfunction ret_type(f) {\n  return {};\n}\n\nvar MT_Ret = {};\nvar CreateCommunityQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\nvar ppx_printed_query$1 = \"mutation UpdateCommunityMutation($id: ID!, $name: String!, $targetLinkable: Boolean!, $courseIds: [ID!]!)  {\\nupdateCommunity(id: $id, name: $name, targetLinkable: $targetLinkable, courseIds: $courseIds)  {\\ncommunityId  \\nerrors  \\n}\\n\\n}\\n\";\n\nfunction parse$1(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"updateCommunity\");\n  var tmp;\n\n  if (match !== undefined) {\n    var match$1 = Js_json.decodeObject(Caml_option.valFromOption(match));\n\n    if (match$1 !== undefined) {\n      var value$2 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_dict.get(value$2, \"communityId\");\n\n      if (match$2 !== undefined) {\n        var temp = Caml_option.valFromOption(match$2);\n        var match$3 = Js_json.decodeNull(temp);\n\n        if (match$3 !== undefined) {\n          var match$4 = Js_dict.get(value$2, \"errors\");\n\n          if (match$4 !== undefined) {\n            var temp$1 = Caml_option.valFromOption(match$4);\n            var match$5 = Js_json.decodeNull(temp$1);\n            tmp = match$5 !== undefined ? Js_exn.raiseError(\"graphql_ppx: All fields on variant selection set on type UpdateCommunityPayload were null\") :\n            /* `Errors */\n            [100464587, Js_option.getExn(Js_json.decodeArray(temp$1)).map(function (value) {\n              var match = Js_json.decodeString(value);\n\n              if (match !== undefined) {\n                var value$1 = match;\n\n                switch (value$1) {\n                  case \"IncorrectCommunityId\":\n                    return (\n                      /* IncorrectCommunityId */\n                      -449861089\n                    );\n\n                  case \"IncorrectCourseIds\":\n                    return (\n                      /* IncorrectCourseIds */\n                      -548933032\n                    );\n\n                  case \"InvalidLengthName\":\n                    return (\n                      /* InvalidLengthName */\n                      781203464\n                    );\n\n                  default:\n                    return Js_exn.raiseError(\"graphql_ppx: Unknown enum variant for UpdateCommunityErrors: \" + value$1);\n                }\n              } else {\n                return Js_exn.raiseError(\"graphql_ppx: Expected enum value for UpdateCommunityErrors, got \" + JSON.stringify(value));\n              }\n            })];\n          } else {\n            tmp = Js_exn.raiseError(\"graphql_ppx: Field errors on type UpdateCommunityPayload is missing\");\n          }\n        } else {\n          var match$6 = Js_json.decodeString(temp);\n          tmp =\n          /* `CommunityId */\n          [74516740, match$6 !== undefined ? match$6 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(temp))];\n        }\n      } else {\n        tmp = Js_exn.raiseError(\"graphql_ppx: Field communityId on type UpdateCommunityPayload is missing\");\n      }\n    } else {\n      tmp = Js_exn.raiseError(\"graphql_ppx: Expected type UpdateCommunityPayload to be an object\");\n    }\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field updateCommunity on type Mutation is missing\");\n  }\n\n  return {\n    updateCommunity: tmp\n  };\n}\n\nfunction make$1(id, name, targetLinkable, courseIds, param) {\n  return {\n    query: ppx_printed_query$1,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"id\", id],\n    /* tuple */\n    [\"name\", name],\n    /* tuple */\n    [\"targetLinkable\", targetLinkable],\n    /* tuple */\n    [\"courseIds\", courseIds.map(function (prim) {\n      return prim;\n    })]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse$1\n  };\n}\n\nfunction makeWithVariables$1(variables) {\n  var id = variables.id;\n  var name = variables.name;\n  var targetLinkable = variables.targetLinkable;\n  var courseIds = variables.courseIds;\n  return {\n    query: ppx_printed_query$1,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"id\", id],\n    /* tuple */\n    [\"name\", name],\n    /* tuple */\n    [\"targetLinkable\", targetLinkable],\n    /* tuple */\n    [\"courseIds\", courseIds.map(function (prim) {\n      return prim;\n    })]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse$1\n  };\n}\n\nfunction makeVariables$1(id, name, targetLinkable, courseIds, param) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"id\", id],\n  /* tuple */\n  [\"name\", name],\n  /* tuple */\n  [\"targetLinkable\", targetLinkable],\n  /* tuple */\n  [\"courseIds\", courseIds.map(function (prim) {\n    return prim;\n  })]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction definition_002$1(graphql_ppx_use_json_variables_fn, id, name, targetLinkable, courseIds, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n  /* tuple */\n  [\"id\", id],\n  /* tuple */\n  [\"name\", name],\n  /* tuple */\n  [\"targetLinkable\", targetLinkable],\n  /* tuple */\n  [\"courseIds\", courseIds.map(function (prim) {\n    return prim;\n  })]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  })));\n}\n\nvar definition$1 =\n/* tuple */\n[parse$1, ppx_printed_query$1, definition_002$1];\n\nfunction ret_type$1(f) {\n  return {};\n}\n\nvar MT_Ret$1 = {};\nvar UpdateCommunityQuery = {\n  ppx_printed_query: ppx_printed_query$1,\n  query: ppx_printed_query$1,\n  parse: parse$1,\n  make: make$1,\n  makeWithVariables: makeWithVariables$1,\n  makeVariables: makeVariables$1,\n  definition: definition$1,\n  ret_type: ret_type$1,\n  MT_Ret: MT_Ret$1\n};\n\nfunction notification(error) {\n  if (error >= 781203464) {\n    return (\n      /* tuple */\n      [\"InvalidLengthName\", \"Course name should be between 1 and 50 characters long.\"]\n    );\n  } else {\n    return (\n      /* tuple */\n      [\"IncorrectCourseIds\", \"Could not find courses with the supplied IDs.\"]\n    );\n  }\n}\n\nvar CreateCommunityError = {\n  notification: notification\n};\n\nfunction notification$1(error) {\n  if (error !== -449861089) {\n    if (error >= 781203464) {\n      return (\n        /* tuple */\n        [\"InvalidLengthName\", \"Course name should be between 1 and 50 characters long.\"]\n      );\n    } else {\n      return (\n        /* tuple */\n        [\"IncorrectCourseIds\", \"Could not find courses with the supplied IDs.\"]\n      );\n    }\n  } else {\n    return (\n      /* tuple */\n      [\"IncorrectCommunityId\", \"Community does not exist.\"]\n    );\n  }\n}\n\nvar UpdateCommunityError = {\n  notification: notification$1\n};\nvar CreateCommunityErrorHandler = GraphqlErrorHandler.Make(CreateCommunityError);\nvar UpdateCommunityErrorHandler = GraphqlErrorHandler.Make(UpdateCommunityError);\n\nfunction computeInitialState(param) {\n  var community = param[0];\n  var match;\n\n  if (community !== undefined) {\n    var community$1 = community;\n    match =\n    /* tuple */\n    [SchoolCommunities__Community.name(community$1), SchoolCommunities__Community.targetLinkable(community$1), Belt_SetString.fromArray($$Array.of_list(List.map(SchoolCommunities__Connection.courseId, List.filter(function (connection) {\n      return SchoolCommunities__Connection.communityId(connection) === SchoolCommunities__Community.id(community$1);\n    })(param[1]))))];\n  } else {\n    match =\n    /* tuple */\n    [\"\", false, null];\n  }\n\n  return {\n    saving: false,\n    dirty: false,\n    name: match[0],\n    targetLinkable: match[1],\n    selectedCourseIds: match[2],\n    courseSearch: \"\"\n  };\n}\n\nfunction reducer(state, action) {\n  if (typeof action === \"number\") {\n    switch (action) {\n      case\n      /* BeginSaving */\n      0:\n        return {\n          saving: true,\n          dirty: state.dirty,\n          name: state.name,\n          targetLinkable: state.targetLinkable,\n          selectedCourseIds: state.selectedCourseIds,\n          courseSearch: state.courseSearch\n        };\n\n      case\n      /* FailSaving */\n      1:\n        return {\n          saving: false,\n          dirty: state.dirty,\n          name: state.name,\n          targetLinkable: state.targetLinkable,\n          selectedCourseIds: state.selectedCourseIds,\n          courseSearch: state.courseSearch\n        };\n\n      case\n      /* FinishSaving */\n      2:\n        return {\n          saving: false,\n          dirty: false,\n          name: state.name,\n          targetLinkable: state.targetLinkable,\n          selectedCourseIds: state.selectedCourseIds,\n          courseSearch: state.courseSearch\n        };\n    }\n  } else {\n    switch (action.tag | 0) {\n      case\n      /* UpdateName */\n      0:\n        return {\n          saving: state.saving,\n          dirty: true,\n          name: action[0],\n          targetLinkable: state.targetLinkable,\n          selectedCourseIds: state.selectedCourseIds,\n          courseSearch: state.courseSearch\n        };\n\n      case\n      /* SetTargetLinkable */\n      1:\n        return {\n          saving: state.saving,\n          dirty: true,\n          name: state.name,\n          targetLinkable: action[0],\n          selectedCourseIds: state.selectedCourseIds,\n          courseSearch: state.courseSearch\n        };\n\n      case\n      /* SelectCourse */\n      2:\n        return {\n          saving: state.saving,\n          dirty: true,\n          name: state.name,\n          targetLinkable: state.targetLinkable,\n          selectedCourseIds: Belt_SetString.add(state.selectedCourseIds, action[0]),\n          courseSearch: state.courseSearch\n        };\n\n      case\n      /* DeselectCourse */\n      3:\n        return {\n          saving: state.saving,\n          dirty: true,\n          name: state.name,\n          targetLinkable: state.targetLinkable,\n          selectedCourseIds: Belt_SetString.remove(state.selectedCourseIds, action[0]),\n          courseSearch: state.courseSearch\n        };\n\n      case\n      /* UpdateCourseSearch */\n      4:\n        return {\n          saving: state.saving,\n          dirty: state.dirty,\n          name: state.name,\n          targetLinkable: state.targetLinkable,\n          selectedCourseIds: state.selectedCourseIds,\n          courseSearch: action[0]\n        };\n    }\n  }\n}\n\nfunction handleConnections(communityId, connections, courseIds) {\n  var oldConnections = List.filter(function (connection) {\n    return SchoolCommunities__Connection.communityId(connection) !== communityId;\n  })(connections);\n  var newConnectionsForCommunity = $$Array.to_list($$Array.map(function (courseId) {\n    return SchoolCommunities__Connection.create(communityId, courseId);\n  }, courseIds));\n  return List.append(newConnectionsForCommunity, oldConnections);\n}\n\nfunction handleQuery(community, connections, state, send, addCommunityCB, updateCommunitiesCB, $$event) {\n  $$event.preventDefault();\n  var targetLinkable = state.targetLinkable;\n  var name = state.name;\n  var courseIds = Belt_SetString.toArray(state.selectedCourseIds);\n\n  if (name !== \"\") {\n    Curry._1(send,\n    /* BeginSaving */\n    0);\n\n    if (community !== undefined) {\n      Curry._2(UpdateCommunityErrorHandler.$$catch, function (param) {\n        return Curry._1(send,\n        /* FailSaving */\n        1);\n      }, function (eta) {\n        return GraphqlQuery.sendQuery(undefined, eta);\n      }(make$1(SchoolCommunities__Community.id(community), name, targetLinkable, courseIds,\n      /* () */\n      0)).then(function (response) {\n        var match = response.updateCommunity;\n\n        if (match[0] >= 100464587) {\n          return Promise.reject([UpdateCommunityErrorHandler.Errors, match[1]]);\n        } else {\n          var communityId = match[1];\n\n          Curry._1(send,\n          /* FinishSaving */\n          2);\n\n          Curry._2(updateCommunitiesCB, SchoolCommunities__Community.create(communityId, name, targetLinkable), handleConnections(communityId, connections, courseIds));\n\n          $$Notification.success(\"Success\", \"Community updated successfully.\");\n          return Promise.resolve(\n          /* () */\n          0);\n        }\n      }));\n\n      return (\n        /* () */\n        0\n      );\n    } else {\n      Curry._2(CreateCommunityErrorHandler.$$catch, function (param) {\n        return Curry._1(send,\n        /* FailSaving */\n        1);\n      }, function (eta) {\n        return GraphqlQuery.sendQuery(undefined, eta);\n      }(make(name, targetLinkable, courseIds,\n      /* () */\n      0)).then(function (response) {\n        var match = response.createCommunity;\n\n        if (match[0] >= 100464587) {\n          return Promise.reject([CreateCommunityErrorHandler.Errors, match[1]]);\n        } else {\n          var communityId = match[1];\n\n          Curry._1(send,\n          /* FinishSaving */\n          2);\n\n          Curry._2(addCommunityCB, SchoolCommunities__Community.create(communityId, name, targetLinkable), handleConnections(communityId, connections, courseIds));\n\n          $$Notification.success(\"Success\", \"Community created successfully.\");\n          return Promise.resolve(\n          /* () */\n          0);\n        }\n      }));\n\n      return (\n        /* () */\n        0\n      );\n    }\n  } else {\n    return $$Notification.error(\"Empty\", \"Answer cant be blank\");\n  }\n}\n\nfunction booleanButtonClasses(bool) {\n  return \"toggle-button__button\" + (bool ? \" toggle-button__button--active\" : \"\");\n}\n\nvar value = SchoolCommunities__Course.name;\nvar Selectable = {\n  value: value,\n  searchString: value\n};\nvar CourseSelector = MultiselectInline.Make(Selectable);\n\nfunction selectedCourses(invertOpt, courses, selectedCourseIds) {\n  var invert = invertOpt !== undefined ? invertOpt : false;\n  return $$Array.of_list(courses).filter(function (course) {\n    var condition = Belt_SetString.has(selectedCourseIds, SchoolCommunities__Course.id(course));\n\n    if (invert) {\n      return !condition;\n    } else {\n      return condition;\n    }\n  });\n}\n\nfunction unselectedCourses(courses, selectedCourseIds) {\n  return selectedCourses(true, courses, selectedCourseIds);\n}\n\nfunction onChangeCourseSearch(send, value) {\n  return Curry._1(send,\n  /* UpdateCourseSearch */\n  Block.__(4, [value]));\n}\n\nfunction onSelectCourse(send, course) {\n  return Curry._1(send,\n  /* SelectCourse */\n  Block.__(2, [SchoolCommunities__Course.id(course)]));\n}\n\nfunction onDeselectCourse(send, course) {\n  return Curry._1(send,\n  /* DeselectCourse */\n  Block.__(3, [SchoolCommunities__Course.id(course)]));\n}\n\nfunction SchoolCommunities__Editor(Props) {\n  var courses = Props.courses;\n  var community = Props.community;\n  var connections = Props.connections;\n  var addCommunityCB = Props.addCommunityCB;\n  var updateCommunitiesCB = Props.updateCommunitiesCB;\n  var match = React.useReducer(reducer,\n  /* tuple */\n  [community, connections], computeInitialState);\n  var send = match[1];\n  var state = match[0];\n  var saveDisabled = $$String.trim(state.name) === \"\" || !state.dirty;\n  return React.createElement(\"div\", {\n    className: \"mx-8 pt-8\"\n  }, React.createElement(\"h5\", {\n    className: \"uppercase text-center border-b border-gray-400 pb-2\"\n  }, \"Community Editor\"), React.createElement(DisablingCover.make, {\n    disabled: state.saving,\n    children: null\n  }, React.createElement(\"div\", {\n    key: \"communities-editor\",\n    className: \"mt-3\"\n  }, React.createElement(\"div\", {\n    className: \"mt-2\"\n  }, React.createElement(\"label\", {\n    className: \"inline-block tracking-wide text-gray-700 text-xs font-semibold\",\n    htmlFor: \"communities-editor__name\"\n  }, \"What do you want to call this community?\"), React.createElement(\"input\", {\n    className: \"appearance-none h-10 mt-2 block w-full text-gray-700 border border-gray-400 rounded py-2 px-4 text-sm bg-gray-100 hover:bg-gray-200 focus:outline-none focus:bg-white focus:border-primary-400\",\n    id: \"communities-editor__name\",\n    placeholder: \"This community needs a name!\",\n    value: state.name,\n    onChange: function onChange($$event) {\n      var name = $$event.target.value;\n      return Curry._1(send,\n      /* UpdateName */\n      Block.__(0, [name]));\n    }\n  }), React.createElement(School__InputGroupError.make, {\n    message: \"is not a valid name\",\n    active: state.dirty ? $$String.trim(state.name) === \"\" : false\n  })), React.createElement(\"div\", {\n    className: \"flex items-center mt-6\"\n  }, React.createElement(\"label\", {\n    className: \"inline-block tracking-wide text-gray-700 text-xs font-semibold\",\n    htmlFor: \"communities-editor__course-list\"\n  }, \"Should users be allowed to discuss targets in this community?\"), React.createElement(\"div\", {\n    className: \"flex toggle-button__group flex-no-shrink rounded-lg overflow-hidden ml-2\"\n  }, React.createElement(\"button\", {\n    className: booleanButtonClasses(state.targetLinkable),\n    onClick: function onClick(param) {\n      return Curry._1(send,\n      /* SetTargetLinkable */\n      Block.__(1, [true]));\n    }\n  }, \"Yes\"), React.createElement(\"button\", {\n    className: booleanButtonClasses(!state.targetLinkable),\n    onClick: function onClick(param) {\n      return Curry._1(send,\n      /* SetTargetLinkable */\n      Block.__(1, [false]));\n    }\n  }, \"No\"))), React.createElement(\"div\", {\n    className: \"mt-4\"\n  }, React.createElement(\"label\", {\n    className: \"inline-block tracking-wide text-gray-700 text-xs font-semibold mb-2\",\n    htmlFor: \"communities-editor__course-targetLinkable\"\n  }, \"Give access to students from:\"), React.createElement(CourseSelector.make, {\n    placeholder: \"Search for a course\",\n    onChange: function onChange(param) {\n      return Curry._1(send,\n      /* UpdateCourseSearch */\n      Block.__(4, [param]));\n    },\n    value: state.courseSearch,\n    unselected: selectedCourses(true, courses, state.selectedCourseIds),\n    selected: selectedCourses(undefined, courses, state.selectedCourseIds),\n    onSelect: function onSelect(param) {\n      return Curry._1(send,\n      /* SelectCourse */\n      Block.__(2, [SchoolCommunities__Course.id(param)]));\n    },\n    onDeselect: function onDeselect(param) {\n      return Curry._1(send,\n      /* DeselectCourse */\n      Block.__(3, [SchoolCommunities__Course.id(param)]));\n    },\n    emptySelectionMessage: \"No courses selected\",\n    allItemsSelectedMessage: \"You have selected all available courses\"\n  }))), React.createElement(\"button\", {\n    key: \"communities-editor__update-button\",\n    className: \"w-full btn btn-large btn-primary mt-3\",\n    disabled: saveDisabled,\n    onClick: function onClick(param) {\n      return handleQuery(community, connections, state, send, addCommunityCB, updateCommunitiesCB, param);\n    }\n  }, community !== undefined ? \"Update Community\" : \"Create a new community\")), React.createElement(\"div\", {\n    className: \"mt-3 mb-3 text-xs\"\n  }, React.createElement(\"span\", {\n    className: \"leading-normal\"\n  }, React.createElement(\"strong\", undefined, \"Note:\"), \" Coaches in your school have access to all communities.\")));\n}\n\nvar make$2 = SchoolCommunities__Editor;\nexports.str = str;\nexports.CreateCommunityQuery = CreateCommunityQuery;\nexports.UpdateCommunityQuery = UpdateCommunityQuery;\nexports.CreateCommunityError = CreateCommunityError;\nexports.UpdateCommunityError = UpdateCommunityError;\nexports.CreateCommunityErrorHandler = CreateCommunityErrorHandler;\nexports.UpdateCommunityErrorHandler = UpdateCommunityErrorHandler;\nexports.computeInitialState = computeInitialState;\nexports.reducer = reducer;\nexports.handleConnections = handleConnections;\nexports.handleQuery = handleQuery;\nexports.booleanButtonClasses = booleanButtonClasses;\nexports.Selectable = Selectable;\nexports.CourseSelector = CourseSelector;\nexports.selectedCourses = selectedCourses;\nexports.unselectedCourses = unselectedCourses;\nexports.onChangeCourseSearch = onChangeCourseSearch;\nexports.onSelectCourse = onSelectCourse;\nexports.onDeselectCourse = onDeselectCourse;\nexports.make = make$2;\n/* CreateCommunityErrorHandler Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/schools/communities/components/SchoolCommunities__Editor.bs.js"],"names":["List","require","$$Array","Block","Curry","React","Js_exn","$$String","Js_dict","Js_json","Js_option","Caml_option","GraphqlQuery","$$Notification","Belt_SetString","DisablingCover","MultiselectInline","GraphqlErrorHandler","School__InputGroupError","SchoolCommunities__Course","SchoolCommunities__Community","SchoolCommunities__Connection","str","prim","ppx_printed_query","parse","value","value$1","getExn","decodeObject","match","get","tmp","undefined","match$1","valFromOption","value$2","match$2","temp","match$3","decodeNull","match$4","temp$1","match$5","raiseError","decodeArray","map","decodeString","JSON","stringify","match$6","createCommunity","make","name","targetLinkable","courseIds","param","query","variables","fromArray","filter","test","makeWithVariables","makeVariables","definition_002","graphql_ppx_use_json_variables_fn","_1","definition","ret_type","f","MT_Ret","CreateCommunityQuery","ppx_printed_query$1","parse$1","updateCommunity","make$1","id","makeWithVariables$1","makeVariables$1","definition_002$1","definition$1","ret_type$1","MT_Ret$1","UpdateCommunityQuery","notification","error","CreateCommunityError","notification$1","UpdateCommunityError","CreateCommunityErrorHandler","Make","UpdateCommunityErrorHandler","computeInitialState","community","community$1","of_list","courseId","connection","communityId","saving","dirty","selectedCourseIds","courseSearch","reducer","state","action","tag","add","remove","handleConnections","connections","oldConnections","newConnectionsForCommunity","to_list","create","append","handleQuery","send","addCommunityCB","updateCommunitiesCB","$$event","preventDefault","toArray","_2","$$catch","eta","sendQuery","then","response","Promise","reject","Errors","success","resolve","booleanButtonClasses","bool","Selectable","searchString","CourseSelector","selectedCourses","invertOpt","courses","invert","course","condition","has","unselectedCourses","onChangeCourseSearch","__","onSelectCourse","onDeselectCourse","SchoolCommunities__Editor","Props","useReducer","saveDisabled","trim","createElement","className","disabled","children","key","htmlFor","placeholder","onChange","target","message","active","onClick","unselected","selected","onSelect","onDeselect","emptySelectionMessage","allItemsSelectedMessage","make$2","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar Block = require(\"bs-platform/lib/js/block.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Js_exn = require(\"bs-platform/lib/js/js_exn.js\");\nvar $$String = require(\"bs-platform/lib/js/string.js\");\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\nvar Js_json = require(\"bs-platform/lib/js/js_json.js\");\nvar Js_option = require(\"bs-platform/lib/js/js_option.js\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar GraphqlQuery = require(\"../../../shared/utils/GraphqlQuery.bs.js\");\nvar $$Notification = require(\"../../../shared/Notification.bs.js\");\nvar Belt_SetString = require(\"bs-platform/lib/js/belt_SetString.js\");\nvar DisablingCover = require(\"../../../shared/components/DisablingCover.bs.js\");\nvar MultiselectInline = require(\"../../../packages/multiselect-inline/src/components/MultiselectInline.bs.js\");\nvar GraphqlErrorHandler = require(\"../../../shared/utils/GraphqlErrorHandler.bs.js\");\nvar School__InputGroupError = require(\"../../shared/components/School__InputGroupError.bs.js\");\nvar SchoolCommunities__Course = require(\"../types/index/SchoolCommunities__Course.bs.js\");\nvar SchoolCommunities__Community = require(\"../types/index/SchoolCommunities__Community.bs.js\");\nvar SchoolCommunities__Connection = require(\"../types/index/SchoolCommunities__Connection.bs.js\");\n\nfunction str(prim) {\n  return prim;\n}\n\nvar ppx_printed_query = \"mutation CreateCommunityMutation($name: String!, $targetLinkable: Boolean!, $courseIds: [ID!]!)  {\\ncreateCommunity(name: $name, targetLinkable: $targetLinkable, courseIds: $courseIds)  {\\ncommunityId  \\nerrors  \\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"createCommunity\");\n  var tmp;\n  if (match !== undefined) {\n    var match$1 = Js_json.decodeObject(Caml_option.valFromOption(match));\n    if (match$1 !== undefined) {\n      var value$2 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_dict.get(value$2, \"communityId\");\n      if (match$2 !== undefined) {\n        var temp = Caml_option.valFromOption(match$2);\n        var match$3 = Js_json.decodeNull(temp);\n        if (match$3 !== undefined) {\n          var match$4 = Js_dict.get(value$2, \"errors\");\n          if (match$4 !== undefined) {\n            var temp$1 = Caml_option.valFromOption(match$4);\n            var match$5 = Js_json.decodeNull(temp$1);\n            tmp = match$5 !== undefined ? Js_exn.raiseError(\"graphql_ppx: All fields on variant selection set on type CreateCommunityPayload were null\") : /* `Errors */[\n                100464587,\n                Js_option.getExn(Js_json.decodeArray(temp$1)).map((function (value) {\n                        var match = Js_json.decodeString(value);\n                        if (match !== undefined) {\n                          var value$1 = match;\n                          switch (value$1) {\n                            case \"IncorrectCourseIds\" :\n                                return /* IncorrectCourseIds */-548933032;\n                            case \"InvalidLengthName\" :\n                                return /* InvalidLengthName */781203464;\n                            default:\n                              return Js_exn.raiseError(\"graphql_ppx: Unknown enum variant for CreateCommunityErrors: \" + value$1);\n                          }\n                        } else {\n                          return Js_exn.raiseError(\"graphql_ppx: Expected enum value for CreateCommunityErrors, got \" + JSON.stringify(value));\n                        }\n                      }))\n              ];\n          } else {\n            tmp = Js_exn.raiseError(\"graphql_ppx: Field errors on type CreateCommunityPayload is missing\");\n          }\n        } else {\n          var match$6 = Js_json.decodeString(temp);\n          tmp = /* `CommunityId */[\n            74516740,\n            match$6 !== undefined ? match$6 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(temp))\n          ];\n        }\n      } else {\n        tmp = Js_exn.raiseError(\"graphql_ppx: Field communityId on type CreateCommunityPayload is missing\");\n      }\n    } else {\n      tmp = Js_exn.raiseError(\"graphql_ppx: Expected type CreateCommunityPayload to be an object\");\n    }\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field createCommunity on type Mutation is missing\");\n  }\n  return {\n          createCommunity: tmp\n        };\n}\n\nfunction make(name, targetLinkable, courseIds, param) {\n  return {\n          query: ppx_printed_query,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"name\",\n                    name\n                  ],\n                  /* tuple */[\n                    \"targetLinkable\",\n                    targetLinkable\n                  ],\n                  /* tuple */[\n                    \"courseIds\",\n                    courseIds.map((function (prim) {\n                            return prim;\n                          }))\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse\n        };\n}\n\nfunction makeWithVariables(variables) {\n  var name = variables.name;\n  var targetLinkable = variables.targetLinkable;\n  var courseIds = variables.courseIds;\n  return {\n          query: ppx_printed_query,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"name\",\n                    name\n                  ],\n                  /* tuple */[\n                    \"targetLinkable\",\n                    targetLinkable\n                  ],\n                  /* tuple */[\n                    \"courseIds\",\n                    courseIds.map((function (prim) {\n                            return prim;\n                          }))\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse\n        };\n}\n\nfunction makeVariables(name, targetLinkable, courseIds, param) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"name\",\n                  name\n                ],\n                /* tuple */[\n                  \"targetLinkable\",\n                  targetLinkable\n                ],\n                /* tuple */[\n                  \"courseIds\",\n                  courseIds.map((function (prim) {\n                          return prim;\n                        }))\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn, name, targetLinkable, courseIds, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n                    /* tuple */[\n                      \"name\",\n                      name\n                    ],\n                    /* tuple */[\n                      \"targetLinkable\",\n                      targetLinkable\n                    ],\n                    /* tuple */[\n                      \"courseIds\",\n                      courseIds.map((function (prim) {\n                              return prim;\n                            }))\n                    ]\n                  ].filter((function (param) {\n                        return !Js_json.test(param[1], /* Null */5);\n                      }))));\n}\n\nvar definition = /* tuple */[\n  parse,\n  ppx_printed_query,\n  definition_002\n];\n\nfunction ret_type(f) {\n  return { };\n}\n\nvar MT_Ret = { };\n\nvar CreateCommunityQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\n\nvar ppx_printed_query$1 = \"mutation UpdateCommunityMutation($id: ID!, $name: String!, $targetLinkable: Boolean!, $courseIds: [ID!]!)  {\\nupdateCommunity(id: $id, name: $name, targetLinkable: $targetLinkable, courseIds: $courseIds)  {\\ncommunityId  \\nerrors  \\n}\\n\\n}\\n\";\n\nfunction parse$1(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"updateCommunity\");\n  var tmp;\n  if (match !== undefined) {\n    var match$1 = Js_json.decodeObject(Caml_option.valFromOption(match));\n    if (match$1 !== undefined) {\n      var value$2 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_dict.get(value$2, \"communityId\");\n      if (match$2 !== undefined) {\n        var temp = Caml_option.valFromOption(match$2);\n        var match$3 = Js_json.decodeNull(temp);\n        if (match$3 !== undefined) {\n          var match$4 = Js_dict.get(value$2, \"errors\");\n          if (match$4 !== undefined) {\n            var temp$1 = Caml_option.valFromOption(match$4);\n            var match$5 = Js_json.decodeNull(temp$1);\n            tmp = match$5 !== undefined ? Js_exn.raiseError(\"graphql_ppx: All fields on variant selection set on type UpdateCommunityPayload were null\") : /* `Errors */[\n                100464587,\n                Js_option.getExn(Js_json.decodeArray(temp$1)).map((function (value) {\n                        var match = Js_json.decodeString(value);\n                        if (match !== undefined) {\n                          var value$1 = match;\n                          switch (value$1) {\n                            case \"IncorrectCommunityId\" :\n                                return /* IncorrectCommunityId */-449861089;\n                            case \"IncorrectCourseIds\" :\n                                return /* IncorrectCourseIds */-548933032;\n                            case \"InvalidLengthName\" :\n                                return /* InvalidLengthName */781203464;\n                            default:\n                              return Js_exn.raiseError(\"graphql_ppx: Unknown enum variant for UpdateCommunityErrors: \" + value$1);\n                          }\n                        } else {\n                          return Js_exn.raiseError(\"graphql_ppx: Expected enum value for UpdateCommunityErrors, got \" + JSON.stringify(value));\n                        }\n                      }))\n              ];\n          } else {\n            tmp = Js_exn.raiseError(\"graphql_ppx: Field errors on type UpdateCommunityPayload is missing\");\n          }\n        } else {\n          var match$6 = Js_json.decodeString(temp);\n          tmp = /* `CommunityId */[\n            74516740,\n            match$6 !== undefined ? match$6 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(temp))\n          ];\n        }\n      } else {\n        tmp = Js_exn.raiseError(\"graphql_ppx: Field communityId on type UpdateCommunityPayload is missing\");\n      }\n    } else {\n      tmp = Js_exn.raiseError(\"graphql_ppx: Expected type UpdateCommunityPayload to be an object\");\n    }\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field updateCommunity on type Mutation is missing\");\n  }\n  return {\n          updateCommunity: tmp\n        };\n}\n\nfunction make$1(id, name, targetLinkable, courseIds, param) {\n  return {\n          query: ppx_printed_query$1,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"id\",\n                    id\n                  ],\n                  /* tuple */[\n                    \"name\",\n                    name\n                  ],\n                  /* tuple */[\n                    \"targetLinkable\",\n                    targetLinkable\n                  ],\n                  /* tuple */[\n                    \"courseIds\",\n                    courseIds.map((function (prim) {\n                            return prim;\n                          }))\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse$1\n        };\n}\n\nfunction makeWithVariables$1(variables) {\n  var id = variables.id;\n  var name = variables.name;\n  var targetLinkable = variables.targetLinkable;\n  var courseIds = variables.courseIds;\n  return {\n          query: ppx_printed_query$1,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"id\",\n                    id\n                  ],\n                  /* tuple */[\n                    \"name\",\n                    name\n                  ],\n                  /* tuple */[\n                    \"targetLinkable\",\n                    targetLinkable\n                  ],\n                  /* tuple */[\n                    \"courseIds\",\n                    courseIds.map((function (prim) {\n                            return prim;\n                          }))\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse$1\n        };\n}\n\nfunction makeVariables$1(id, name, targetLinkable, courseIds, param) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"id\",\n                  id\n                ],\n                /* tuple */[\n                  \"name\",\n                  name\n                ],\n                /* tuple */[\n                  \"targetLinkable\",\n                  targetLinkable\n                ],\n                /* tuple */[\n                  \"courseIds\",\n                  courseIds.map((function (prim) {\n                          return prim;\n                        }))\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction definition_002$1(graphql_ppx_use_json_variables_fn, id, name, targetLinkable, courseIds, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n                    /* tuple */[\n                      \"id\",\n                      id\n                    ],\n                    /* tuple */[\n                      \"name\",\n                      name\n                    ],\n                    /* tuple */[\n                      \"targetLinkable\",\n                      targetLinkable\n                    ],\n                    /* tuple */[\n                      \"courseIds\",\n                      courseIds.map((function (prim) {\n                              return prim;\n                            }))\n                    ]\n                  ].filter((function (param) {\n                        return !Js_json.test(param[1], /* Null */5);\n                      }))));\n}\n\nvar definition$1 = /* tuple */[\n  parse$1,\n  ppx_printed_query$1,\n  definition_002$1\n];\n\nfunction ret_type$1(f) {\n  return { };\n}\n\nvar MT_Ret$1 = { };\n\nvar UpdateCommunityQuery = {\n  ppx_printed_query: ppx_printed_query$1,\n  query: ppx_printed_query$1,\n  parse: parse$1,\n  make: make$1,\n  makeWithVariables: makeWithVariables$1,\n  makeVariables: makeVariables$1,\n  definition: definition$1,\n  ret_type: ret_type$1,\n  MT_Ret: MT_Ret$1\n};\n\nfunction notification(error) {\n  if (error >= 781203464) {\n    return /* tuple */[\n            \"InvalidLengthName\",\n            \"Course name should be between 1 and 50 characters long.\"\n          ];\n  } else {\n    return /* tuple */[\n            \"IncorrectCourseIds\",\n            \"Could not find courses with the supplied IDs.\"\n          ];\n  }\n}\n\nvar CreateCommunityError = {\n  notification: notification\n};\n\nfunction notification$1(error) {\n  if (error !== -449861089) {\n    if (error >= 781203464) {\n      return /* tuple */[\n              \"InvalidLengthName\",\n              \"Course name should be between 1 and 50 characters long.\"\n            ];\n    } else {\n      return /* tuple */[\n              \"IncorrectCourseIds\",\n              \"Could not find courses with the supplied IDs.\"\n            ];\n    }\n  } else {\n    return /* tuple */[\n            \"IncorrectCommunityId\",\n            \"Community does not exist.\"\n          ];\n  }\n}\n\nvar UpdateCommunityError = {\n  notification: notification$1\n};\n\nvar CreateCommunityErrorHandler = GraphqlErrorHandler.Make(CreateCommunityError);\n\nvar UpdateCommunityErrorHandler = GraphqlErrorHandler.Make(UpdateCommunityError);\n\nfunction computeInitialState(param) {\n  var community = param[0];\n  var match;\n  if (community !== undefined) {\n    var community$1 = community;\n    match = /* tuple */[\n      SchoolCommunities__Community.name(community$1),\n      SchoolCommunities__Community.targetLinkable(community$1),\n      Belt_SetString.fromArray($$Array.of_list(List.map(SchoolCommunities__Connection.courseId, List.filter((function (connection) {\n                            return SchoolCommunities__Connection.communityId(connection) === SchoolCommunities__Community.id(community$1);\n                          }))(param[1]))))\n    ];\n  } else {\n    match = /* tuple */[\n      \"\",\n      false,\n      null\n    ];\n  }\n  return {\n          saving: false,\n          dirty: false,\n          name: match[0],\n          targetLinkable: match[1],\n          selectedCourseIds: match[2],\n          courseSearch: \"\"\n        };\n}\n\nfunction reducer(state, action) {\n  if (typeof action === \"number\") {\n    switch (action) {\n      case /* BeginSaving */0 :\n          return {\n                  saving: true,\n                  dirty: state.dirty,\n                  name: state.name,\n                  targetLinkable: state.targetLinkable,\n                  selectedCourseIds: state.selectedCourseIds,\n                  courseSearch: state.courseSearch\n                };\n      case /* FailSaving */1 :\n          return {\n                  saving: false,\n                  dirty: state.dirty,\n                  name: state.name,\n                  targetLinkable: state.targetLinkable,\n                  selectedCourseIds: state.selectedCourseIds,\n                  courseSearch: state.courseSearch\n                };\n      case /* FinishSaving */2 :\n          return {\n                  saving: false,\n                  dirty: false,\n                  name: state.name,\n                  targetLinkable: state.targetLinkable,\n                  selectedCourseIds: state.selectedCourseIds,\n                  courseSearch: state.courseSearch\n                };\n\n    }\n  } else {\n    switch (action.tag | 0) {\n      case /* UpdateName */0 :\n          return {\n                  saving: state.saving,\n                  dirty: true,\n                  name: action[0],\n                  targetLinkable: state.targetLinkable,\n                  selectedCourseIds: state.selectedCourseIds,\n                  courseSearch: state.courseSearch\n                };\n      case /* SetTargetLinkable */1 :\n          return {\n                  saving: state.saving,\n                  dirty: true,\n                  name: state.name,\n                  targetLinkable: action[0],\n                  selectedCourseIds: state.selectedCourseIds,\n                  courseSearch: state.courseSearch\n                };\n      case /* SelectCourse */2 :\n          return {\n                  saving: state.saving,\n                  dirty: true,\n                  name: state.name,\n                  targetLinkable: state.targetLinkable,\n                  selectedCourseIds: Belt_SetString.add(state.selectedCourseIds, action[0]),\n                  courseSearch: state.courseSearch\n                };\n      case /* DeselectCourse */3 :\n          return {\n                  saving: state.saving,\n                  dirty: true,\n                  name: state.name,\n                  targetLinkable: state.targetLinkable,\n                  selectedCourseIds: Belt_SetString.remove(state.selectedCourseIds, action[0]),\n                  courseSearch: state.courseSearch\n                };\n      case /* UpdateCourseSearch */4 :\n          return {\n                  saving: state.saving,\n                  dirty: state.dirty,\n                  name: state.name,\n                  targetLinkable: state.targetLinkable,\n                  selectedCourseIds: state.selectedCourseIds,\n                  courseSearch: action[0]\n                };\n\n    }\n  }\n}\n\nfunction handleConnections(communityId, connections, courseIds) {\n  var oldConnections = List.filter((function (connection) {\n            return SchoolCommunities__Connection.communityId(connection) !== communityId;\n          }))(connections);\n  var newConnectionsForCommunity = $$Array.to_list($$Array.map((function (courseId) {\n              return SchoolCommunities__Connection.create(communityId, courseId);\n            }), courseIds));\n  return List.append(newConnectionsForCommunity, oldConnections);\n}\n\nfunction handleQuery(community, connections, state, send, addCommunityCB, updateCommunitiesCB, $$event) {\n  $$event.preventDefault();\n  var targetLinkable = state.targetLinkable;\n  var name = state.name;\n  var courseIds = Belt_SetString.toArray(state.selectedCourseIds);\n  if (name !== \"\") {\n    Curry._1(send, /* BeginSaving */0);\n    if (community !== undefined) {\n      Curry._2(UpdateCommunityErrorHandler.$$catch, (function (param) {\n              return Curry._1(send, /* FailSaving */1);\n            }), (function (eta) {\n                  return GraphqlQuery.sendQuery(undefined, eta);\n                })(make$1(SchoolCommunities__Community.id(community), name, targetLinkable, courseIds, /* () */0)).then((function (response) {\n                  var match = response.updateCommunity;\n                  if (match[0] >= 100464587) {\n                    return Promise.reject([\n                                UpdateCommunityErrorHandler.Errors,\n                                match[1]\n                              ]);\n                  } else {\n                    var communityId = match[1];\n                    Curry._1(send, /* FinishSaving */2);\n                    Curry._2(updateCommunitiesCB, SchoolCommunities__Community.create(communityId, name, targetLinkable), handleConnections(communityId, connections, courseIds));\n                    $$Notification.success(\"Success\", \"Community updated successfully.\");\n                    return Promise.resolve(/* () */0);\n                  }\n                })));\n      return /* () */0;\n    } else {\n      Curry._2(CreateCommunityErrorHandler.$$catch, (function (param) {\n              return Curry._1(send, /* FailSaving */1);\n            }), (function (eta) {\n                  return GraphqlQuery.sendQuery(undefined, eta);\n                })(make(name, targetLinkable, courseIds, /* () */0)).then((function (response) {\n                  var match = response.createCommunity;\n                  if (match[0] >= 100464587) {\n                    return Promise.reject([\n                                CreateCommunityErrorHandler.Errors,\n                                match[1]\n                              ]);\n                  } else {\n                    var communityId = match[1];\n                    Curry._1(send, /* FinishSaving */2);\n                    Curry._2(addCommunityCB, SchoolCommunities__Community.create(communityId, name, targetLinkable), handleConnections(communityId, connections, courseIds));\n                    $$Notification.success(\"Success\", \"Community created successfully.\");\n                    return Promise.resolve(/* () */0);\n                  }\n                })));\n      return /* () */0;\n    }\n  } else {\n    return $$Notification.error(\"Empty\", \"Answer cant be blank\");\n  }\n}\n\nfunction booleanButtonClasses(bool) {\n  return \"toggle-button__button\" + (\n          bool ? \" toggle-button__button--active\" : \"\"\n        );\n}\n\nvar value = SchoolCommunities__Course.name;\n\nvar Selectable = {\n  value: value,\n  searchString: value\n};\n\nvar CourseSelector = MultiselectInline.Make(Selectable);\n\nfunction selectedCourses(invertOpt, courses, selectedCourseIds) {\n  var invert = invertOpt !== undefined ? invertOpt : false;\n  return $$Array.of_list(courses).filter((function (course) {\n                var condition = Belt_SetString.has(selectedCourseIds, SchoolCommunities__Course.id(course));\n                if (invert) {\n                  return !condition;\n                } else {\n                  return condition;\n                }\n              }));\n}\n\nfunction unselectedCourses(courses, selectedCourseIds) {\n  return selectedCourses(true, courses, selectedCourseIds);\n}\n\nfunction onChangeCourseSearch(send, value) {\n  return Curry._1(send, /* UpdateCourseSearch */Block.__(4, [value]));\n}\n\nfunction onSelectCourse(send, course) {\n  return Curry._1(send, /* SelectCourse */Block.__(2, [SchoolCommunities__Course.id(course)]));\n}\n\nfunction onDeselectCourse(send, course) {\n  return Curry._1(send, /* DeselectCourse */Block.__(3, [SchoolCommunities__Course.id(course)]));\n}\n\nfunction SchoolCommunities__Editor(Props) {\n  var courses = Props.courses;\n  var community = Props.community;\n  var connections = Props.connections;\n  var addCommunityCB = Props.addCommunityCB;\n  var updateCommunitiesCB = Props.updateCommunitiesCB;\n  var match = React.useReducer(reducer, /* tuple */[\n        community,\n        connections\n      ], computeInitialState);\n  var send = match[1];\n  var state = match[0];\n  var saveDisabled = $$String.trim(state.name) === \"\" || !state.dirty;\n  return React.createElement(\"div\", {\n              className: \"mx-8 pt-8\"\n            }, React.createElement(\"h5\", {\n                  className: \"uppercase text-center border-b border-gray-400 pb-2\"\n                }, \"Community Editor\"), React.createElement(DisablingCover.make, {\n                  disabled: state.saving,\n                  children: null\n                }, React.createElement(\"div\", {\n                      key: \"communities-editor\",\n                      className: \"mt-3\"\n                    }, React.createElement(\"div\", {\n                          className: \"mt-2\"\n                        }, React.createElement(\"label\", {\n                              className: \"inline-block tracking-wide text-gray-700 text-xs font-semibold\",\n                              htmlFor: \"communities-editor__name\"\n                            }, \"What do you want to call this community?\"), React.createElement(\"input\", {\n                              className: \"appearance-none h-10 mt-2 block w-full text-gray-700 border border-gray-400 rounded py-2 px-4 text-sm bg-gray-100 hover:bg-gray-200 focus:outline-none focus:bg-white focus:border-primary-400\",\n                              id: \"communities-editor__name\",\n                              placeholder: \"This community needs a name!\",\n                              value: state.name,\n                              onChange: (function ($$event) {\n                                  var name = $$event.target.value;\n                                  return Curry._1(send, /* UpdateName */Block.__(0, [name]));\n                                })\n                            }), React.createElement(School__InputGroupError.make, {\n                              message: \"is not a valid name\",\n                              active: state.dirty ? $$String.trim(state.name) === \"\" : false\n                            })), React.createElement(\"div\", {\n                          className: \"flex items-center mt-6\"\n                        }, React.createElement(\"label\", {\n                              className: \"inline-block tracking-wide text-gray-700 text-xs font-semibold\",\n                              htmlFor: \"communities-editor__course-list\"\n                            }, \"Should users be allowed to discuss targets in this community?\"), React.createElement(\"div\", {\n                              className: \"flex toggle-button__group flex-no-shrink rounded-lg overflow-hidden ml-2\"\n                            }, React.createElement(\"button\", {\n                                  className: booleanButtonClasses(state.targetLinkable),\n                                  onClick: (function (param) {\n                                      return Curry._1(send, /* SetTargetLinkable */Block.__(1, [true]));\n                                    })\n                                }, \"Yes\"), React.createElement(\"button\", {\n                                  className: booleanButtonClasses(!state.targetLinkable),\n                                  onClick: (function (param) {\n                                      return Curry._1(send, /* SetTargetLinkable */Block.__(1, [false]));\n                                    })\n                                }, \"No\"))), React.createElement(\"div\", {\n                          className: \"mt-4\"\n                        }, React.createElement(\"label\", {\n                              className: \"inline-block tracking-wide text-gray-700 text-xs font-semibold mb-2\",\n                              htmlFor: \"communities-editor__course-targetLinkable\"\n                            }, \"Give access to students from:\"), React.createElement(CourseSelector.make, {\n                              placeholder: \"Search for a course\",\n                              onChange: (function (param) {\n                                  return Curry._1(send, /* UpdateCourseSearch */Block.__(4, [param]));\n                                }),\n                              value: state.courseSearch,\n                              unselected: selectedCourses(true, courses, state.selectedCourseIds),\n                              selected: selectedCourses(undefined, courses, state.selectedCourseIds),\n                              onSelect: (function (param) {\n                                  return Curry._1(send, /* SelectCourse */Block.__(2, [SchoolCommunities__Course.id(param)]));\n                                }),\n                              onDeselect: (function (param) {\n                                  return Curry._1(send, /* DeselectCourse */Block.__(3, [SchoolCommunities__Course.id(param)]));\n                                }),\n                              emptySelectionMessage: \"No courses selected\",\n                              allItemsSelectedMessage: \"You have selected all available courses\"\n                            }))), React.createElement(\"button\", {\n                      key: \"communities-editor__update-button\",\n                      className: \"w-full btn btn-large btn-primary mt-3\",\n                      disabled: saveDisabled,\n                      onClick: (function (param) {\n                          return handleQuery(community, connections, state, send, addCommunityCB, updateCommunitiesCB, param);\n                        })\n                    }, community !== undefined ? \"Update Community\" : \"Create a new community\")), React.createElement(\"div\", {\n                  className: \"mt-3 mb-3 text-xs\"\n                }, React.createElement(\"span\", {\n                      className: \"leading-normal\"\n                    }, React.createElement(\"strong\", undefined, \"Note:\"), \" Coaches in your school have access to all communities.\")));\n}\n\nvar make$2 = SchoolCommunities__Editor;\n\nexports.str = str;\nexports.CreateCommunityQuery = CreateCommunityQuery;\nexports.UpdateCommunityQuery = UpdateCommunityQuery;\nexports.CreateCommunityError = CreateCommunityError;\nexports.UpdateCommunityError = UpdateCommunityError;\nexports.CreateCommunityErrorHandler = CreateCommunityErrorHandler;\nexports.UpdateCommunityErrorHandler = UpdateCommunityErrorHandler;\nexports.computeInitialState = computeInitialState;\nexports.reducer = reducer;\nexports.handleConnections = handleConnections;\nexports.handleQuery = handleQuery;\nexports.booleanButtonClasses = booleanButtonClasses;\nexports.Selectable = Selectable;\nexports.CourseSelector = CourseSelector;\nexports.selectedCourses = selectedCourses;\nexports.unselectedCourses = unselectedCourses;\nexports.onChangeCourseSearch = onChangeCourseSearch;\nexports.onSelectCourse = onSelectCourse;\nexports.onDeselectCourse = onDeselectCourse;\nexports.make = make$2;\n/* CreateCommunityErrorHandler Not a pure module */\n"]},"metadata":{},"sourceType":"module"}