{"ast":null,"code":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar Block = require(\"./block.js\");\n\nvar Caml_option = require(\"./caml_option.js\");\n\nfunction classify(x) {\n  var ty = _typeof(x);\n\n  if (ty === \"string\") {\n    return (\n      /* JSONString */\n      Block.__(0, [x])\n    );\n  } else if (ty === \"number\") {\n    return (\n      /* JSONNumber */\n      Block.__(1, [x])\n    );\n  } else if (ty === \"boolean\") {\n    if (x === true) {\n      return (\n        /* JSONTrue */\n        1\n      );\n    } else {\n      return (\n        /* JSONFalse */\n        0\n      );\n    }\n  } else if (x === null) {\n    return (\n      /* JSONNull */\n      2\n    );\n  } else if (Array.isArray(x)) {\n    return (\n      /* JSONArray */\n      Block.__(3, [x])\n    );\n  } else {\n    return (\n      /* JSONObject */\n      Block.__(2, [x])\n    );\n  }\n}\n\nfunction test(x, v) {\n  switch (v) {\n    case\n    /* String */\n    0:\n      return typeof x === \"string\";\n\n    case\n    /* Number */\n    1:\n      return typeof x === \"number\";\n\n    case\n    /* Object */\n    2:\n      if (x !== null && _typeof(x) === \"object\") {\n        return !Array.isArray(x);\n      } else {\n        return false;\n      }\n\n    case\n    /* Array */\n    3:\n      return Array.isArray(x);\n\n    case\n    /* Boolean */\n    4:\n      return typeof x === \"boolean\";\n\n    case\n    /* Null */\n    5:\n      return x === null;\n  }\n}\n\nfunction decodeString(json) {\n  if (typeof json === \"string\") {\n    return json;\n  }\n}\n\nfunction decodeNumber(json) {\n  if (typeof json === \"number\") {\n    return json;\n  }\n}\n\nfunction decodeObject(json) {\n  if (_typeof(json) === \"object\" && !Array.isArray(json) && json !== null) {\n    return Caml_option.some(json);\n  }\n}\n\nfunction decodeArray(json) {\n  if (Array.isArray(json)) {\n    return json;\n  }\n}\n\nfunction decodeBoolean(json) {\n  if (typeof json === \"boolean\") {\n    return json;\n  }\n}\n\nfunction decodeNull(json) {\n  if (json === null) {\n    return null;\n  }\n}\n\nexports.classify = classify;\nexports.test = test;\nexports.decodeString = decodeString;\nexports.decodeNumber = decodeNumber;\nexports.decodeObject = decodeObject;\nexports.decodeArray = decodeArray;\nexports.decodeBoolean = decodeBoolean;\nexports.decodeNull = decodeNull;\n/* No side effect */","map":null,"metadata":{},"sourceType":"module"}