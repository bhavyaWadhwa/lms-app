{"ast":null,"code":"'use strict';\n\nvar Block = require(\"bs-platform/lib/js/block.js\");\n\nvar React = require(\"react\");\n\nvar ReactDom = require(\"react-dom\");\n\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction renderToElementWithClassName(reactElement, className) {\n  var elements = document.getElementsByClassName(className);\n\n  if (elements.length !== 0) {\n    ReactDom.render(reactElement, elements[0]);\n    return (\n      /* () */\n      0\n    );\n  } else {\n    console.error(\"ReactDOMRe.renderToElementWithClassName: no element of class \" + (className + \" found in the HTML.\"));\n    return (\n      /* () */\n      0\n    );\n  }\n}\n\nfunction renderToElementWithId(reactElement, id) {\n  var match = document.getElementById(id);\n\n  if (match == null) {\n    console.error(\"ReactDOMRe.renderToElementWithId : no element of id \" + (id + \" found in the HTML.\"));\n    return (\n      /* () */\n      0\n    );\n  } else {\n    ReactDom.render(reactElement, match);\n    return (\n      /* () */\n      0\n    );\n  }\n}\n\nfunction createRootWithClassName(className) {\n  var elements = document.getElementsByClassName(className);\n\n  if (elements.length !== 0) {\n    return (\n      /* Ok */\n      Block.__(0, [ReactDom.createRoot(elements[0])])\n    );\n  } else {\n    return (\n      /* Error */\n      Block.__(1, [\"ReactDOMRe.Unstable.createRootWithClassName: no element of class \" + (className + \" found in the HTML.\")])\n    );\n  }\n}\n\nfunction createRootWithId(id) {\n  var match = document.getElementById(id);\n\n  if (match == null) {\n    return (\n      /* Error */\n      Block.__(1, [\"ReactDOMRe.Unstable.createRootWithId: no element of id \" + (id + \" found in the HTML.\")])\n    );\n  } else {\n    return (\n      /* Ok */\n      Block.__(0, [ReactDom.createRoot(match)])\n    );\n  }\n}\n\nvar Experimental = {\n  createRootWithClassName: createRootWithClassName,\n  createRootWithId: createRootWithId\n};\n\nfunction hydrateToElementWithClassName(reactElement, className) {\n  var elements = document.getElementsByClassName(className);\n\n  if (elements.length !== 0) {\n    ReactDom.hydrate(reactElement, elements[0]);\n    return (\n      /* () */\n      0\n    );\n  } else {\n    console.error(\"ReactDOMRe.hydrateToElementWithClassName: no element of class \" + (className + \" found in the HTML.\"));\n    return (\n      /* () */\n      0\n    );\n  }\n}\n\nfunction hydrateToElementWithId(reactElement, id) {\n  var match = document.getElementById(id);\n\n  if (match == null) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"ReactDOMRe.hydrateToElementWithId : no element of id \" + (id + \" found in the HTML.\")];\n  } else {\n    ReactDom.hydrate(reactElement, match);\n    return (\n      /* () */\n      0\n    );\n  }\n}\n\nvar Ref = {};\n\nfunction createElementVariadic(domClassName, props, children) {\n  var variadicArguments = [domClassName, props].concat(children);\n  return React.createElement.apply(null, variadicArguments);\n}\n\nfunction unsafeAddProp(style, key, value) {\n  var dict = {};\n  dict[key] = value;\n  return Object.assign({}, style, dict);\n}\n\nvar Style = {\n  unsafeAddProp: unsafeAddProp\n};\nexports.renderToElementWithClassName = renderToElementWithClassName;\nexports.renderToElementWithId = renderToElementWithId;\nexports.Experimental = Experimental;\nexports.hydrateToElementWithClassName = hydrateToElementWithClassName;\nexports.hydrateToElementWithId = hydrateToElementWithId;\nexports.Ref = Ref;\nexports.createElementVariadic = createElementVariadic;\nexports.Style = Style;\n/* react Not a pure module */","map":null,"metadata":{},"sourceType":"module"}