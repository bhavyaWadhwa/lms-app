{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\n\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nvar GradeLabelsEmpty = Caml_exceptions.create(\"GradeLabel.GradeLabelsEmpty\");\n\nfunction decode(json) {\n  return {\n    label: Json_decode.field(\"label\", Json_decode.string, json),\n    grade: Json_decode.field(\"grade\", Json_decode.$$int, json)\n  };\n}\n\nfunction grade(t) {\n  return t.grade;\n}\n\nfunction label(t) {\n  return t.label;\n}\n\nfunction labelFor(gradeLabels, grade) {\n  return List.find(function (gradeLabel) {\n    return gradeLabel.grade === grade;\n  }, gradeLabels).label;\n}\n\nfunction create(grade, label) {\n  return {\n    label: label,\n    grade: grade\n  };\n}\n\nfunction empty(grade) {\n  return {\n    label: \"\",\n    grade: grade\n  };\n}\n\nfunction update(label, t) {\n  return {\n    label: label,\n    grade: t.grade\n  };\n}\n\nfunction asJsObject(t) {\n  return {\n    grade: t.grade,\n    label: t.label\n  };\n}\n\nfunction valid(t) {\n  return t.label.trim().length >= 1;\n}\n\nfunction makeFromJs(rawGradeLabel) {\n  return {\n    label: rawGradeLabel.label,\n    grade: rawGradeLabel.grade\n  };\n}\n\nfunction maxGrade(gradeLabels) {\n  var aux = function aux(_max, _remains) {\n    while (true) {\n      var remains = _remains;\n      var max = _max;\n\n      if (remains) {\n        _remains = remains[1];\n        _max = Math.max(remains[0].grade, max);\n        continue;\n      } else {\n        return max;\n      }\n    }\n\n    ;\n  };\n\n  var validGrade = aux(0, gradeLabels);\n\n  if (validGrade !== 0) {\n    return validGrade;\n  } else {\n    Rollbar.error(\"GradeLabel.maxGrade received an empty list of gradeLabels\");\n    throw GradeLabelsEmpty;\n  }\n}\n\nexports.GradeLabelsEmpty = GradeLabelsEmpty;\nexports.decode = decode;\nexports.grade = grade;\nexports.label = label;\nexports.labelFor = labelFor;\nexports.create = create;\nexports.empty = empty;\nexports.update = update;\nexports.asJsObject = asJsObject;\nexports.valid = valid;\nexports.makeFromJs = makeFromJs;\nexports.maxGrade = maxGrade;\n/* No side effect */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/shared/types/GradeLabel.bs.js"],"names":["List","require","Json_decode","Caml_exceptions","GradeLabelsEmpty","create","decode","json","label","field","string","grade","$$int","t","labelFor","gradeLabels","find","gradeLabel","empty","update","asJsObject","valid","trim","length","makeFromJs","rawGradeLabel","maxGrade","aux","_max","_remains","remains","max","Math","validGrade","Rollbar","error","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nvar GradeLabelsEmpty = Caml_exceptions.create(\"GradeLabel.GradeLabelsEmpty\");\n\nfunction decode(json) {\n  return {\n          label: Json_decode.field(\"label\", Json_decode.string, json),\n          grade: Json_decode.field(\"grade\", Json_decode.$$int, json)\n        };\n}\n\nfunction grade(t) {\n  return t.grade;\n}\n\nfunction label(t) {\n  return t.label;\n}\n\nfunction labelFor(gradeLabels, grade) {\n  return List.find((function (gradeLabel) {\n                return gradeLabel.grade === grade;\n              }), gradeLabels).label;\n}\n\nfunction create(grade, label) {\n  return {\n          label: label,\n          grade: grade\n        };\n}\n\nfunction empty(grade) {\n  return {\n          label: \"\",\n          grade: grade\n        };\n}\n\nfunction update(label, t) {\n  return {\n          label: label,\n          grade: t.grade\n        };\n}\n\nfunction asJsObject(t) {\n  return {\n          grade: t.grade,\n          label: t.label\n        };\n}\n\nfunction valid(t) {\n  return t.label.trim().length >= 1;\n}\n\nfunction makeFromJs(rawGradeLabel) {\n  return {\n          label: rawGradeLabel.label,\n          grade: rawGradeLabel.grade\n        };\n}\n\nfunction maxGrade(gradeLabels) {\n  var aux = function (_max, _remains) {\n    while(true) {\n      var remains = _remains;\n      var max = _max;\n      if (remains) {\n        _remains = remains[1];\n        _max = Math.max(remains[0].grade, max);\n        continue ;\n      } else {\n        return max;\n      }\n    };\n  };\n  var validGrade = aux(0, gradeLabels);\n  if (validGrade !== 0) {\n    return validGrade;\n  } else {\n    Rollbar.error(\"GradeLabel.maxGrade received an empty list of gradeLabels\");\n    throw GradeLabelsEmpty;\n  }\n}\n\nexports.GradeLabelsEmpty = GradeLabelsEmpty;\nexports.decode = decode;\nexports.grade = grade;\nexports.label = label;\nexports.labelFor = labelFor;\nexports.create = create;\nexports.empty = empty;\nexports.update = update;\nexports.asJsObject = asJsObject;\nexports.valid = valid;\nexports.makeFromJs = makeFromJs;\nexports.maxGrade = maxGrade;\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}