{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\n\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nvar InvalidVisibilityValue = Caml_exceptions.create(\"CurriculumEditor__Target.InvalidVisibilityValue\");\n\nfunction id(t) {\n  return t.id;\n}\n\nfunction title(t) {\n  return t.title;\n}\n\nfunction targetGroupId(t) {\n  return t.targetGroupId;\n}\n\nfunction sortIndex(t) {\n  return t.sortIndex;\n}\n\nfunction visibility(t) {\n  return t.visibility;\n}\n\nfunction decodeVisbility(visibilityString) {\n  switch (visibilityString) {\n    case \"archived\":\n      return (\n        /* Archived */\n        2\n      );\n\n    case \"draft\":\n      return (\n        /* Draft */\n        0\n      );\n\n    case \"live\":\n      return (\n        /* Live */\n        1\n      );\n\n    default:\n      throw [InvalidVisibilityValue, \"Unknown Value\"];\n  }\n}\n\nfunction decode(json) {\n  return {\n    id: Json_decode.field(\"id\", Json_decode.string, json),\n    targetGroupId: Json_decode.field(\"targetGroupId\", Json_decode.string, json),\n    title: Json_decode.field(\"title\", Json_decode.string, json),\n    sortIndex: Json_decode.field(\"sortIndex\", Json_decode.$$int, json),\n    visibility: decodeVisbility(Json_decode.field(\"visibility\", Json_decode.string, json))\n  };\n}\n\nfunction updateList(targets, target) {\n  var oldTargets = List.filter(function (t) {\n    return t.id !== target.id;\n  })(targets);\n  return List.rev(List.append(\n  /* :: */\n  [target,\n  /* [] */\n  0], List.rev(oldTargets)));\n}\n\nfunction create(id, targetGroupId, title, sortIndex, visibility) {\n  return {\n    id: id,\n    targetGroupId: targetGroupId,\n    title: title,\n    sortIndex: sortIndex,\n    visibility: visibility\n  };\n}\n\nfunction sort(targets) {\n  return List.sort(function (x, y) {\n    return x.sortIndex - y.sortIndex | 0;\n  }, targets);\n}\n\nfunction archive(t) {\n  return {\n    id: t.id,\n    targetGroupId: t.targetGroupId,\n    title: t.title,\n    sortIndex: t.sortIndex,\n    visibility:\n    /* Archived */\n    2\n  };\n}\n\nfunction archived(t) {\n  var match = t.visibility;\n  return match >= 2;\n}\n\nfunction removeTarget(target, targets) {\n  return List.filter(function (t) {\n    return t.id !== target.id;\n  })(targets);\n}\n\nfunction targetIdsInTargetGroup(id, targets) {\n  return List.map(function (t) {\n    return t.id;\n  }, List.filter(function (t) {\n    return t.targetGroupId === id;\n  })(targets));\n}\n\nfunction updateSortIndex(sortedTargets) {\n  return List.mapi(function (sortIndex, t) {\n    return create(t.id, t.targetGroupId, t.title, sortIndex, t.visibility);\n  }, sortedTargets);\n}\n\nfunction template(id, targetGroupId, title) {\n  return create(id, targetGroupId, title, 999,\n  /* Draft */\n  0);\n}\n\nexports.InvalidVisibilityValue = InvalidVisibilityValue;\nexports.id = id;\nexports.title = title;\nexports.targetGroupId = targetGroupId;\nexports.sortIndex = sortIndex;\nexports.visibility = visibility;\nexports.decodeVisbility = decodeVisbility;\nexports.decode = decode;\nexports.updateList = updateList;\nexports.create = create;\nexports.sort = sort;\nexports.archive = archive;\nexports.archived = archived;\nexports.removeTarget = removeTarget;\nexports.targetIdsInTargetGroup = targetIdsInTargetGroup;\nexports.updateSortIndex = updateSortIndex;\nexports.template = template;\n/* No side effect */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/schools/courses/types/curriculum_editor/CurriculumEditor__Target.bs.js"],"names":["List","require","Json_decode","Caml_exceptions","InvalidVisibilityValue","create","id","t","title","targetGroupId","sortIndex","visibility","decodeVisbility","visibilityString","decode","json","field","string","$$int","updateList","targets","target","oldTargets","filter","rev","append","sort","x","y","archive","archived","match","removeTarget","targetIdsInTargetGroup","map","updateSortIndex","sortedTargets","mapi","template","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nvar InvalidVisibilityValue = Caml_exceptions.create(\"CurriculumEditor__Target.InvalidVisibilityValue\");\n\nfunction id(t) {\n  return t.id;\n}\n\nfunction title(t) {\n  return t.title;\n}\n\nfunction targetGroupId(t) {\n  return t.targetGroupId;\n}\n\nfunction sortIndex(t) {\n  return t.sortIndex;\n}\n\nfunction visibility(t) {\n  return t.visibility;\n}\n\nfunction decodeVisbility(visibilityString) {\n  switch (visibilityString) {\n    case \"archived\" :\n        return /* Archived */2;\n    case \"draft\" :\n        return /* Draft */0;\n    case \"live\" :\n        return /* Live */1;\n    default:\n      throw [\n            InvalidVisibilityValue,\n            \"Unknown Value\"\n          ];\n  }\n}\n\nfunction decode(json) {\n  return {\n          id: Json_decode.field(\"id\", Json_decode.string, json),\n          targetGroupId: Json_decode.field(\"targetGroupId\", Json_decode.string, json),\n          title: Json_decode.field(\"title\", Json_decode.string, json),\n          sortIndex: Json_decode.field(\"sortIndex\", Json_decode.$$int, json),\n          visibility: decodeVisbility(Json_decode.field(\"visibility\", Json_decode.string, json))\n        };\n}\n\nfunction updateList(targets, target) {\n  var oldTargets = List.filter((function (t) {\n            return t.id !== target.id;\n          }))(targets);\n  return List.rev(List.append(/* :: */[\n                  target,\n                  /* [] */0\n                ], List.rev(oldTargets)));\n}\n\nfunction create(id, targetGroupId, title, sortIndex, visibility) {\n  return {\n          id: id,\n          targetGroupId: targetGroupId,\n          title: title,\n          sortIndex: sortIndex,\n          visibility: visibility\n        };\n}\n\nfunction sort(targets) {\n  return List.sort((function (x, y) {\n                return x.sortIndex - y.sortIndex | 0;\n              }), targets);\n}\n\nfunction archive(t) {\n  return {\n          id: t.id,\n          targetGroupId: t.targetGroupId,\n          title: t.title,\n          sortIndex: t.sortIndex,\n          visibility: /* Archived */2\n        };\n}\n\nfunction archived(t) {\n  var match = t.visibility;\n  return match >= 2;\n}\n\nfunction removeTarget(target, targets) {\n  return List.filter((function (t) {\n                  return t.id !== target.id;\n                }))(targets);\n}\n\nfunction targetIdsInTargetGroup(id, targets) {\n  return List.map((function (t) {\n                return t.id;\n              }), List.filter((function (t) {\n                      return t.targetGroupId === id;\n                    }))(targets));\n}\n\nfunction updateSortIndex(sortedTargets) {\n  return List.mapi((function (sortIndex, t) {\n                return create(t.id, t.targetGroupId, t.title, sortIndex, t.visibility);\n              }), sortedTargets);\n}\n\nfunction template(id, targetGroupId, title) {\n  return create(id, targetGroupId, title, 999, /* Draft */0);\n}\n\nexports.InvalidVisibilityValue = InvalidVisibilityValue;\nexports.id = id;\nexports.title = title;\nexports.targetGroupId = targetGroupId;\nexports.sortIndex = sortIndex;\nexports.visibility = visibility;\nexports.decodeVisbility = decodeVisbility;\nexports.decode = decode;\nexports.updateList = updateList;\nexports.create = create;\nexports.sort = sort;\nexports.archive = archive;\nexports.archived = archived;\nexports.removeTarget = removeTarget;\nexports.targetIdsInTargetGroup = targetIdsInTargetGroup;\nexports.updateSortIndex = updateSortIndex;\nexports.template = template;\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}