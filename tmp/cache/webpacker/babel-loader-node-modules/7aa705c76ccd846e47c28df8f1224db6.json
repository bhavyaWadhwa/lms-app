{"ast":null,"code":"'use strict';\n\nvar Curry = require(\"./curry.js\");\n\nvar stdout = {\n  buffer: \"\",\n  output: function output(param, s) {\n    var v = s.length - 1 | 0;\n\n    if (typeof process !== \"undefined\" && process.stdout && process.stdout.write) {\n      return process.stdout.write(s);\n    } else if (s[v] === \"\\n\") {\n      console.log(s.slice(0, v));\n      return (\n        /* () */\n        0\n      );\n    } else {\n      console.log(s);\n      return (\n        /* () */\n        0\n      );\n    }\n  }\n};\nvar stderr = {\n  buffer: \"\",\n  output: function output(param, s) {\n    var v = s.length - 1 | 0;\n\n    if (s[v] === \"\\n\") {\n      console.log(s.slice(0, v));\n      return (\n        /* () */\n        0\n      );\n    } else {\n      console.log(s);\n      return (\n        /* () */\n        0\n      );\n    }\n  }\n};\n\nfunction caml_ml_flush(oc) {\n  if (oc.buffer !== \"\") {\n    Curry._2(oc.output, oc, oc.buffer);\n\n    oc.buffer = \"\";\n    return (\n      /* () */\n      0\n    );\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_ml_output(oc, str, offset, len) {\n  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);\n\n  if (typeof process !== \"undefined\" && process.stdout && process.stdout.write && oc === stdout) {\n    return process.stdout.write(str$1);\n  } else {\n    var id = str$1.lastIndexOf(\"\\n\");\n\n    if (id < 0) {\n      oc.buffer = oc.buffer + str$1;\n      return (\n        /* () */\n        0\n      );\n    } else {\n      oc.buffer = oc.buffer + str$1.slice(0, id + 1 | 0);\n      caml_ml_flush(oc);\n      oc.buffer = oc.buffer + str$1.slice(id + 1 | 0);\n      return (\n        /* () */\n        0\n      );\n    }\n  }\n}\n\nfunction caml_ml_output_char(oc, $$char) {\n  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);\n}\n\nfunction caml_ml_out_channels_list(param) {\n  return (\n    /* :: */\n    [stdout,\n    /* :: */\n    [stderr,\n    /* [] */\n    0]]\n  );\n}\n\nvar stdin = undefined;\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.caml_ml_flush = caml_ml_flush;\nexports.caml_ml_output = caml_ml_output;\nexports.caml_ml_output_char = caml_ml_output_char;\nexports.caml_ml_out_channels_list = caml_ml_out_channels_list;\n/* No side effect */","map":null,"metadata":{},"sourceType":"module"}