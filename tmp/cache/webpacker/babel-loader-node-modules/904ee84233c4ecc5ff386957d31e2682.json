{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar React = require(\"react\");\n\nvar Js_exn = require(\"bs-platform/lib/js/js_exn.js\");\n\nvar $$String = require(\"bs-platform/lib/js/string.js\");\n\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\n\nvar Js_json = require(\"bs-platform/lib/js/js_json.js\");\n\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\n\nvar HelpIcon = require(\"../../../../shared/components/HelpIcon.bs.js\");\n\nvar Js_option = require(\"bs-platform/lib/js/js_option.js\");\n\nvar GradeLabel = require(\"../../../../shared/types/GradeLabel.bs.js\");\n\nvar Caml_format = require(\"bs-platform/lib/js/caml_format.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar GraphqlQuery = require(\"../../../../shared/utils/GraphqlQuery.bs.js\");\n\nvar DisablingCover = require(\"../../../../shared/components/DisablingCover.bs.js\");\n\nvar EvaluationCriterion = require(\"../../../../shared/types/EvaluationCriterion.bs.js\");\n\nvar School__InputGroupError = require(\"../../../shared/components/School__InputGroupError.bs.js\");\n\nrequire(\"./EvaluationCriterionEditor__Form.css\");\n\nfunction str(prim) {\n  return prim;\n}\n\nvar ppx_printed_query = \"mutation CreateEvaluationCriterionMutation($name: String!, $courseId: ID!, $maxGrade: Int!, $passGrade: Int!, $gradesAndLabels: [GradeAndLabelInput!]!)  {\\ncreateEvaluationCriterion(courseId: $courseId, name: $name, maxGrade: $maxGrade, passGrade: $passGrade, gradesAndLabels: $gradesAndLabels)  {\\nevaluationCriterion  {\\nid  \\nname  \\nmaxGrade  \\npassGrade  \\ngradeLabels  {\\ngrade  \\nlabel  \\n}\\n\\n}\\n\\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"createEvaluationCriterion\");\n  var tmp;\n\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"evaluationCriterion\");\n    var tmp$1;\n\n    if (match$1 !== undefined) {\n      var value$3 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_json.decodeNull(value$3);\n\n      if (match$2 !== undefined) {\n        tmp$1 = undefined;\n      } else {\n        var value$4 = Js_option.getExn(Js_json.decodeObject(value$3));\n        var match$3 = Js_dict.get(value$4, \"id\");\n        var tmp$2;\n\n        if (match$3 !== undefined) {\n          var value$5 = Caml_option.valFromOption(match$3);\n          var match$4 = Js_json.decodeString(value$5);\n          tmp$2 = match$4 !== undefined ? match$4 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$5));\n        } else {\n          tmp$2 = Js_exn.raiseError(\"graphql_ppx: Field id on type EvaluationCriterion is missing\");\n        }\n\n        var match$5 = Js_dict.get(value$4, \"name\");\n        var tmp$3;\n\n        if (match$5 !== undefined) {\n          var value$6 = Caml_option.valFromOption(match$5);\n          var match$6 = Js_json.decodeString(value$6);\n          tmp$3 = match$6 !== undefined ? match$6 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$6));\n        } else {\n          tmp$3 = Js_exn.raiseError(\"graphql_ppx: Field name on type EvaluationCriterion is missing\");\n        }\n\n        var match$7 = Js_dict.get(value$4, \"maxGrade\");\n        var tmp$4;\n\n        if (match$7 !== undefined) {\n          var value$7 = Caml_option.valFromOption(match$7);\n          var match$8 = Js_json.decodeNumber(value$7);\n          tmp$4 = match$8 !== undefined ? match$8 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$7));\n        } else {\n          tmp$4 = Js_exn.raiseError(\"graphql_ppx: Field maxGrade on type EvaluationCriterion is missing\");\n        }\n\n        var match$9 = Js_dict.get(value$4, \"passGrade\");\n        var tmp$5;\n\n        if (match$9 !== undefined) {\n          var value$8 = Caml_option.valFromOption(match$9);\n          var match$10 = Js_json.decodeNumber(value$8);\n          tmp$5 = match$10 !== undefined ? match$10 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$8));\n        } else {\n          tmp$5 = Js_exn.raiseError(\"graphql_ppx: Field passGrade on type EvaluationCriterion is missing\");\n        }\n\n        var match$11 = Js_dict.get(value$4, \"gradeLabels\");\n        tmp$1 = {\n          id: tmp$2,\n          name: tmp$3,\n          maxGrade: tmp$4,\n          passGrade: tmp$5,\n          gradeLabels: match$11 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match$11))).map(function (value) {\n            var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n            var match = Js_dict.get(value$1, \"grade\");\n            var tmp;\n\n            if (match !== undefined) {\n              var value$2 = Caml_option.valFromOption(match);\n              var match$1 = Js_json.decodeNumber(value$2);\n              tmp = match$1 !== undefined ? match$1 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$2));\n            } else {\n              tmp = Js_exn.raiseError(\"graphql_ppx: Field grade on type GradeAndLabel is missing\");\n            }\n\n            var match$2 = Js_dict.get(value$1, \"label\");\n            var tmp$1;\n\n            if (match$2 !== undefined) {\n              var value$3 = Caml_option.valFromOption(match$2);\n              var match$3 = Js_json.decodeString(value$3);\n              tmp$1 = match$3 !== undefined ? match$3 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$3));\n            } else {\n              tmp$1 = Js_exn.raiseError(\"graphql_ppx: Field label on type GradeAndLabel is missing\");\n            }\n\n            return {\n              grade: tmp,\n              label: tmp$1\n            };\n          }) : Js_exn.raiseError(\"graphql_ppx: Field gradeLabels on type EvaluationCriterion is missing\")\n        };\n      }\n    } else {\n      tmp$1 = undefined;\n    }\n\n    tmp = {\n      evaluationCriterion: tmp$1\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field createEvaluationCriterion on type Mutation is missing\");\n  }\n\n  return {\n    createEvaluationCriterion: tmp\n  };\n}\n\nfunction json_of_GradeAndLabelInput(value) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"grade\", value.grade],\n  /* tuple */\n  [\"label\", value.label]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction make(name, courseId, maxGrade, passGrade, gradesAndLabels, param) {\n  return {\n    query: ppx_printed_query,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"name\", name],\n    /* tuple */\n    [\"courseId\", courseId],\n    /* tuple */\n    [\"maxGrade\", maxGrade],\n    /* tuple */\n    [\"passGrade\", passGrade],\n    /* tuple */\n    [\"gradesAndLabels\", gradesAndLabels.map(json_of_GradeAndLabelInput)]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse\n  };\n}\n\nfunction makeWithVariables(variables) {\n  var name = variables.name;\n  var courseId = variables.courseId;\n  var maxGrade = variables.maxGrade;\n  var passGrade = variables.passGrade;\n  var gradesAndLabels = variables.gradesAndLabels;\n  return {\n    query: ppx_printed_query,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"name\", name],\n    /* tuple */\n    [\"courseId\", courseId],\n    /* tuple */\n    [\"maxGrade\", maxGrade],\n    /* tuple */\n    [\"passGrade\", passGrade],\n    /* tuple */\n    [\"gradesAndLabels\", gradesAndLabels.map(json_of_GradeAndLabelInput)]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse\n  };\n}\n\nfunction makeVariables(name, courseId, maxGrade, passGrade, gradesAndLabels, param) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"name\", name],\n  /* tuple */\n  [\"courseId\", courseId],\n  /* tuple */\n  [\"maxGrade\", maxGrade],\n  /* tuple */\n  [\"passGrade\", passGrade],\n  /* tuple */\n  [\"gradesAndLabels\", gradesAndLabels.map(json_of_GradeAndLabelInput)]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn, name, courseId, maxGrade, passGrade, gradesAndLabels, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n  /* tuple */\n  [\"name\", name],\n  /* tuple */\n  [\"courseId\", courseId],\n  /* tuple */\n  [\"maxGrade\", maxGrade],\n  /* tuple */\n  [\"passGrade\", passGrade],\n  /* tuple */\n  [\"gradesAndLabels\", gradesAndLabels.map(json_of_GradeAndLabelInput)]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  })));\n}\n\nvar definition =\n/* tuple */\n[parse, ppx_printed_query, definition_002];\n\nfunction ret_type(f) {\n  return {};\n}\n\nvar MT_Ret = {};\nvar CreateEvaluationCriterionQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  json_of_GradeAndLabelInput: json_of_GradeAndLabelInput,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\nvar ppx_printed_query$1 = \"mutation UpdateEvaluationCriterionMutation($id: ID!, $name: String!, $gradesAndLabels: [GradeAndLabelInput!]!)  {\\nupdateEvaluationCriterion(id: $id, name: $name, gradesAndLabels: $gradesAndLabels)  {\\nevaluationCriterion  {\\nid  \\nname  \\nmaxGrade  \\npassGrade  \\ngradeLabels  {\\ngrade  \\nlabel  \\n}\\n\\n}\\n\\n}\\n\\n}\\n\";\n\nfunction parse$1(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"updateEvaluationCriterion\");\n  var tmp;\n\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"evaluationCriterion\");\n    var tmp$1;\n\n    if (match$1 !== undefined) {\n      var value$3 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_json.decodeNull(value$3);\n\n      if (match$2 !== undefined) {\n        tmp$1 = undefined;\n      } else {\n        var value$4 = Js_option.getExn(Js_json.decodeObject(value$3));\n        var match$3 = Js_dict.get(value$4, \"id\");\n        var tmp$2;\n\n        if (match$3 !== undefined) {\n          var value$5 = Caml_option.valFromOption(match$3);\n          var match$4 = Js_json.decodeString(value$5);\n          tmp$2 = match$4 !== undefined ? match$4 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$5));\n        } else {\n          tmp$2 = Js_exn.raiseError(\"graphql_ppx: Field id on type EvaluationCriterion is missing\");\n        }\n\n        var match$5 = Js_dict.get(value$4, \"name\");\n        var tmp$3;\n\n        if (match$5 !== undefined) {\n          var value$6 = Caml_option.valFromOption(match$5);\n          var match$6 = Js_json.decodeString(value$6);\n          tmp$3 = match$6 !== undefined ? match$6 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$6));\n        } else {\n          tmp$3 = Js_exn.raiseError(\"graphql_ppx: Field name on type EvaluationCriterion is missing\");\n        }\n\n        var match$7 = Js_dict.get(value$4, \"maxGrade\");\n        var tmp$4;\n\n        if (match$7 !== undefined) {\n          var value$7 = Caml_option.valFromOption(match$7);\n          var match$8 = Js_json.decodeNumber(value$7);\n          tmp$4 = match$8 !== undefined ? match$8 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$7));\n        } else {\n          tmp$4 = Js_exn.raiseError(\"graphql_ppx: Field maxGrade on type EvaluationCriterion is missing\");\n        }\n\n        var match$9 = Js_dict.get(value$4, \"passGrade\");\n        var tmp$5;\n\n        if (match$9 !== undefined) {\n          var value$8 = Caml_option.valFromOption(match$9);\n          var match$10 = Js_json.decodeNumber(value$8);\n          tmp$5 = match$10 !== undefined ? match$10 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$8));\n        } else {\n          tmp$5 = Js_exn.raiseError(\"graphql_ppx: Field passGrade on type EvaluationCriterion is missing\");\n        }\n\n        var match$11 = Js_dict.get(value$4, \"gradeLabels\");\n        tmp$1 = {\n          id: tmp$2,\n          name: tmp$3,\n          maxGrade: tmp$4,\n          passGrade: tmp$5,\n          gradeLabels: match$11 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match$11))).map(function (value) {\n            var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n            var match = Js_dict.get(value$1, \"grade\");\n            var tmp;\n\n            if (match !== undefined) {\n              var value$2 = Caml_option.valFromOption(match);\n              var match$1 = Js_json.decodeNumber(value$2);\n              tmp = match$1 !== undefined ? match$1 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$2));\n            } else {\n              tmp = Js_exn.raiseError(\"graphql_ppx: Field grade on type GradeAndLabel is missing\");\n            }\n\n            var match$2 = Js_dict.get(value$1, \"label\");\n            var tmp$1;\n\n            if (match$2 !== undefined) {\n              var value$3 = Caml_option.valFromOption(match$2);\n              var match$3 = Js_json.decodeString(value$3);\n              tmp$1 = match$3 !== undefined ? match$3 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$3));\n            } else {\n              tmp$1 = Js_exn.raiseError(\"graphql_ppx: Field label on type GradeAndLabel is missing\");\n            }\n\n            return {\n              grade: tmp,\n              label: tmp$1\n            };\n          }) : Js_exn.raiseError(\"graphql_ppx: Field gradeLabels on type EvaluationCriterion is missing\")\n        };\n      }\n    } else {\n      tmp$1 = undefined;\n    }\n\n    tmp = {\n      evaluationCriterion: tmp$1\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field updateEvaluationCriterion on type Mutation is missing\");\n  }\n\n  return {\n    updateEvaluationCriterion: tmp\n  };\n}\n\nfunction json_of_GradeAndLabelInput$1(value) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"grade\", value.grade],\n  /* tuple */\n  [\"label\", value.label]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction make$1(id, name, gradesAndLabels, param) {\n  return {\n    query: ppx_printed_query$1,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"id\", id],\n    /* tuple */\n    [\"name\", name],\n    /* tuple */\n    [\"gradesAndLabels\", gradesAndLabels.map(json_of_GradeAndLabelInput$1)]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse$1\n  };\n}\n\nfunction makeWithVariables$1(variables) {\n  var id = variables.id;\n  var name = variables.name;\n  var gradesAndLabels = variables.gradesAndLabels;\n  return {\n    query: ppx_printed_query$1,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"id\", id],\n    /* tuple */\n    [\"name\", name],\n    /* tuple */\n    [\"gradesAndLabels\", gradesAndLabels.map(json_of_GradeAndLabelInput$1)]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse$1\n  };\n}\n\nfunction makeVariables$1(id, name, gradesAndLabels, param) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"id\", id],\n  /* tuple */\n  [\"name\", name],\n  /* tuple */\n  [\"gradesAndLabels\", gradesAndLabels.map(json_of_GradeAndLabelInput$1)]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction definition_002$1(graphql_ppx_use_json_variables_fn, id, name, gradesAndLabels, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n  /* tuple */\n  [\"id\", id],\n  /* tuple */\n  [\"name\", name],\n  /* tuple */\n  [\"gradesAndLabels\", gradesAndLabels.map(json_of_GradeAndLabelInput$1)]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  })));\n}\n\nvar definition$1 =\n/* tuple */\n[parse$1, ppx_printed_query$1, definition_002$1];\n\nfunction ret_type$1(f) {\n  return {};\n}\n\nvar MT_Ret$1 = {};\nvar UpdateEvaluationCriterionQuery = {\n  ppx_printed_query: ppx_printed_query$1,\n  query: ppx_printed_query$1,\n  parse: parse$1,\n  json_of_GradeAndLabelInput: json_of_GradeAndLabelInput$1,\n  make: make$1,\n  makeWithVariables: makeWithVariables$1,\n  makeVariables: makeVariables$1,\n  definition: definition$1,\n  ret_type: ret_type$1,\n  MT_Ret: MT_Ret$1\n};\n\nfunction formClasses(value) {\n  if (value) {\n    return \"drawer-right-form w-full opacity-50\";\n  } else {\n    return \"drawer-right-form w-full\";\n  }\n}\n\nvar possibleGradeValues =\n/* :: */\n[1,\n/* :: */\n[2,\n/* :: */\n[3,\n/* :: */\n[4,\n/* :: */\n[5,\n/* :: */\n[6,\n/* :: */\n[7,\n/* :: */\n[8,\n/* :: */\n[9,\n/* :: */\n[10,\n/* [] */\n0]]]]]]]]]];\n\nfunction gradeBarBulletClasses(selected, passed, empty) {\n  var classes = selected ? \" grade-bar__pointer--selected\" : \" \";\n\n  if (empty) {\n    return classes + \" grade-bar__pointer--pulse\";\n  } else if (passed) {\n    return classes + \" grade-bar__pointer--passed\";\n  } else {\n    return classes + \" grade-bar__pointer--failed\";\n  }\n}\n\nfunction updateMaxGrade(value, state, setState) {\n  if (value < state.passGrade) {\n    return Curry._1(setState, function (state) {\n      return {\n        name: state.name,\n        maxGrade: value,\n        passGrade: value,\n        gradesAndLabels: state.gradesAndLabels,\n        saving: state.saving,\n        dirty: state.dirty\n      };\n    });\n  } else {\n    return Curry._1(setState, function (state) {\n      return {\n        name: state.name,\n        maxGrade: value,\n        passGrade: state.passGrade,\n        gradesAndLabels: state.gradesAndLabels,\n        saving: state.saving,\n        dirty: state.dirty\n      };\n    });\n  }\n}\n\nfunction updatePassGrade(value, setState) {\n  return Curry._1(setState, function (state) {\n    return {\n      name: state.name,\n      maxGrade: state.maxGrade,\n      passGrade: value,\n      gradesAndLabels: state.gradesAndLabels,\n      saving: state.saving,\n      dirty: state.dirty\n    };\n  });\n}\n\nfunction updateGradeLabel(value, gradeAndLabel, state, setState) {\n  var updatedGradeAndLabel = GradeLabel.update(value, gradeAndLabel);\n  var gradesAndLabels = $$Array.map(function (gl) {\n    if (GradeLabel.grade(gl) === GradeLabel.grade(updatedGradeAndLabel)) {\n      return updatedGradeAndLabel;\n    } else {\n      return gl;\n    }\n  }, state.gradesAndLabels);\n  return Curry._1(setState, function (state) {\n    return {\n      name: state.name,\n      maxGrade: state.maxGrade,\n      passGrade: state.passGrade,\n      gradesAndLabels: gradesAndLabels,\n      saving: state.saving,\n      dirty: true\n    };\n  });\n}\n\nfunction updateEvaluationCriterion(state, setState, addOrUpdateCriterionCB, criterion) {\n  Curry._1(setState, function (state) {\n    return {\n      name: state.name,\n      maxGrade: state.maxGrade,\n      passGrade: state.passGrade,\n      gradesAndLabels: state.gradesAndLabels,\n      saving: true,\n      dirty: state.dirty\n    };\n  });\n\n  var jsGradeAndLabelArray = $$Array.map(GradeLabel.asJsObject, state.gradesAndLabels.filter(function (gradesAndLabel) {\n    return GradeLabel.grade(gradesAndLabel) <= state.maxGrade;\n  }));\n  (function (eta) {\n    return GraphqlQuery.sendQuery(undefined, eta);\n  })(make$1(EvaluationCriterion.id(criterion), state.name, jsGradeAndLabelArray,\n  /* () */\n  0)).then(function (result) {\n    var match = result.updateEvaluationCriterion.evaluationCriterion;\n\n    if (match !== undefined) {\n      var updatedCriterion = EvaluationCriterion.makeFromJs(Caml_option.valFromOption(match));\n\n      Curry._1(addOrUpdateCriterionCB, updatedCriterion);\n\n      Curry._1(setState, function (state) {\n        return {\n          name: state.name,\n          maxGrade: state.maxGrade,\n          passGrade: state.passGrade,\n          gradesAndLabels: state.gradesAndLabels,\n          saving: false,\n          dirty: state.dirty\n        };\n      });\n    } else {\n      Curry._1(setState, function (state) {\n        return {\n          name: state.name,\n          maxGrade: state.maxGrade,\n          passGrade: state.passGrade,\n          gradesAndLabels: state.gradesAndLabels,\n          saving: false,\n          dirty: state.dirty\n        };\n      });\n    }\n\n    return Promise.resolve(\n    /* () */\n    0);\n  });\n  return (\n    /* () */\n    0\n  );\n}\n\nfunction createEvaluationCriterion(state, setState, addOrUpdateCriterionCB, courseId) {\n  Curry._1(setState, function (state) {\n    return {\n      name: state.name,\n      maxGrade: state.maxGrade,\n      passGrade: state.passGrade,\n      gradesAndLabels: state.gradesAndLabels,\n      saving: true,\n      dirty: state.dirty\n    };\n  });\n\n  var jsGradeAndLabelArray = $$Array.map(GradeLabel.asJsObject, state.gradesAndLabels.filter(function (gradesAndLabel) {\n    return GradeLabel.grade(gradesAndLabel) <= state.maxGrade;\n  }));\n  (function (eta) {\n    return GraphqlQuery.sendQuery(undefined, eta);\n  })(make(state.name, courseId, state.maxGrade, state.passGrade, jsGradeAndLabelArray,\n  /* () */\n  0)).then(function (result) {\n    var match = result.createEvaluationCriterion.evaluationCriterion;\n\n    if (match !== undefined) {\n      var newCriterion = EvaluationCriterion.makeFromJs(Caml_option.valFromOption(match));\n\n      Curry._1(addOrUpdateCriterionCB, newCriterion);\n\n      Curry._1(setState, function (state) {\n        return {\n          name: state.name,\n          maxGrade: state.maxGrade,\n          passGrade: state.passGrade,\n          gradesAndLabels: state.gradesAndLabels,\n          saving: false,\n          dirty: state.dirty\n        };\n      });\n    } else {\n      Curry._1(setState, function (state) {\n        return {\n          name: state.name,\n          maxGrade: state.maxGrade,\n          passGrade: state.passGrade,\n          gradesAndLabels: state.gradesAndLabels,\n          saving: false,\n          dirty: state.dirty\n        };\n      });\n    }\n\n    return Promise.resolve(\n    /* () */\n    0);\n  });\n  return (\n    /* () */\n    0\n  );\n}\n\nfunction updateName(setState, value) {\n  return Curry._1(setState, function (state) {\n    return {\n      name: value,\n      maxGrade: state.maxGrade,\n      passGrade: state.passGrade,\n      gradesAndLabels: state.gradesAndLabels,\n      saving: state.saving,\n      dirty: true\n    };\n  });\n}\n\nfunction saveDisabled(state) {\n  var hasValidName = $$String.trim(state.name).length !== 0;\n\n  if (!state.dirty || state.saving) {\n    return true;\n  } else {\n    return !hasValidName;\n  }\n}\n\nfunction labelClasses(grade, passGrade) {\n  return \"w-12 p-3 text-center  mr-3 rounded-lg border  leading-tight \" + (Caml_obj.caml_lessthan(grade, passGrade) ? \"bg-red-300 text-red-700 border-red-500\" : \"bg-green-300 text-green-700 border-green-500\");\n}\n\nfunction labels(state, setState) {\n  return $$Array.map(function (gradeAndLabel) {\n    var grade = GradeLabel.grade(gradeAndLabel);\n    return React.createElement(\"div\", {\n      key: String(grade),\n      className: \"flex flex-wrap mt-2\"\n    }, React.createElement(\"div\", {\n      className: labelClasses(grade, state.passGrade)\n    }, String(grade)), React.createElement(\"div\", {\n      className: \"flex-1\"\n    }, React.createElement(\"input\", {\n      className: \" appearance-none border rounded w-full p-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"grade-label-for-\" + String(grade),\n      maxLength: 40,\n      placeholder: \"Label for grade \" + String(GradeLabel.grade(gradeAndLabel)),\n      type: \"text\",\n      value: GradeLabel.label(gradeAndLabel),\n      onChange: function onChange($$event) {\n        return updateGradeLabel($$event.target.value, gradeAndLabel, state, setState);\n      }\n    })));\n  }, state.gradesAndLabels.filter(function (gnl) {\n    return GradeLabel.grade(gnl) <= state.maxGrade;\n  }));\n}\n\nfunction EvaluationCriterionEditor__Form(Props) {\n  var evaluationCriterion = Props.evaluationCriterion;\n  var courseId = Props.courseId;\n  var addOrUpdateCriterionCB = Props.addOrUpdateCriterionCB;\n  var match = React.useState(function () {\n    if (evaluationCriterion !== undefined) {\n      var ec = evaluationCriterion;\n      return {\n        name: EvaluationCriterion.name(ec),\n        maxGrade: EvaluationCriterion.maxGrade(ec),\n        passGrade: EvaluationCriterion.passGrade(ec),\n        gradesAndLabels: EvaluationCriterion.gradesAndLabels(ec),\n        saving: false,\n        dirty: false\n      };\n    } else {\n      return {\n        name: \"\",\n        maxGrade: 5,\n        passGrade: 2,\n        gradesAndLabels: $$Array.of_list(List.map(GradeLabel.empty, possibleGradeValues)),\n        saving: false,\n        dirty: false\n      };\n    }\n  });\n  var setState = match[1];\n  var state = match[0];\n  var tmp;\n\n  if (evaluationCriterion !== undefined) {\n    var criterion = evaluationCriterion;\n    tmp = React.createElement(\"button\", {\n      className: \"w-full btn btn-large btn-primary mt-3\",\n      disabled: saveDisabled(state),\n      onClick: function onClick(param) {\n        return updateEvaluationCriterion(state, setState, addOrUpdateCriterionCB, criterion);\n      }\n    }, \"Update Criterion\");\n  } else {\n    tmp = React.createElement(\"button\", {\n      className: \"w-full btn btn-large btn-primary mt-3\",\n      disabled: saveDisabled(state),\n      onClick: function onClick(param) {\n        return createEvaluationCriterion(state, setState, addOrUpdateCriterionCB, courseId);\n      }\n    }, \"Create Criterion\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"mx-auto bg-white\"\n  }, React.createElement(\"div\", {\n    className: \"max-w-2xl p-6 mx-auto\"\n  }, React.createElement(\"h5\", {\n    className: \"uppercase text-center border-b border-gray-400 pb-2\"\n  }, evaluationCriterion !== undefined ? EvaluationCriterion.name(evaluationCriterion) : \"Add Evaluation Criterion\"), React.createElement(DisablingCover.make, {\n    disabled: state.saving,\n    message: evaluationCriterion !== undefined ? \"Updating...\" : \"Saving...\",\n    children: null\n  }, React.createElement(\"div\", {\n    key: \"evaluation-criterion-editor\",\n    className: \"mt-3\"\n  }, React.createElement(\"div\", {\n    className: \"mt-5\"\n  }, React.createElement(\"label\", {\n    className: \"inline-block tracking-wide text-xs font-semibold \",\n    htmlFor: \"name\"\n  }, \"Name\"), React.createElement(\"input\", {\n    className: \"appearance-none block w-full bg-white border border-gray-400 rounded py-3 px-4 mt-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    id: \"name\",\n    maxLength: 50,\n    placeholder: \"Evaluation criterion name\",\n    type: \"text\",\n    value: state.name,\n    onChange: function onChange($$event) {\n      return updateName(setState, $$event.target.value);\n    }\n  }), React.createElement(School__InputGroupError.make, {\n    message: \"Enter a valid name\",\n    active: state.dirty && $$String.trim(state.name).length < 1\n  }))), React.createElement(\"div\", {\n    className: \"mx-auto\"\n  }, React.createElement(\"div\", {\n    className: \"max-w-2xl pt-6 mx-auto\"\n  }, React.createElement(\"div\", {\n    className: \"mb-4\"\n  }, React.createElement(\"span\", {\n    className: \"inline-block tracking-wide text-sm font-semibold mr-2\",\n    htmlFor: \"max_grades\"\n  }, \"Maximum grade is\"), evaluationCriterion !== undefined ? React.createElement(\"span\", {\n    className: \"cursor-not-allowed inline-block bg-white border-b-2 text-2xl font-semibold text-center border-blue px-3 py-2 leading-tight rounded-none focus:outline-none\"\n  }, String(state.maxGrade)) : React.createElement(\"select\", {\n    className: \"cursor-pointer inline-block appearance-none bg-white border-b-2 text-2xl font-semibold text-center border-blue hover:border-gray-500 px-3 py-2 leading-tight rounded-none focus:outline-none\",\n    id: \"max_grade\",\n    value: String(state.maxGrade),\n    onChange: function onChange($$event) {\n      return updateMaxGrade(Caml_format.caml_int_of_string($$event.target.value), state, setState);\n    }\n  }, $$Array.of_list(List.map(function (possibleGradeValue) {\n    return React.createElement(\"option\", {\n      key: String(possibleGradeValue),\n      value: String(possibleGradeValue)\n    }, String(possibleGradeValue));\n  }, List.filter(function (g) {\n    return g !== 1;\n  })(possibleGradeValues)))), React.createElement(\"span\", {\n    className: \"inline-block tracking-wide text-sm font-semibold mx-2\",\n    htmlFor: \"pass_grades\"\n  }, \"and the passing grade is\"), evaluationCriterion !== undefined ? React.createElement(\"span\", {\n    className: \"cursor-not-allowed inline-block appearance-none bg-white border-b-2 text-2xl font-semibold text-center border-blue px-3 py-2 leading-tight rounded-none\"\n  }, String(state.passGrade)) : React.createElement(\"select\", {\n    className: \"cursor-pointer inline-block appearance-none bg-white border-b-2 text-2xl font-semibold text-center border-blue hover:border-gray-500 px-3 py-2 rounded-none leading-tight focus:outline-none\",\n    id: \"pass_grade\",\n    value: String(state.passGrade),\n    onChange: function onChange($$event) {\n      return updatePassGrade(Caml_format.caml_int_of_string($$event.target.value), setState);\n    }\n  }, $$Array.of_list(List.map(function (possibleGradeValue) {\n    return React.createElement(\"option\", {\n      key: String(possibleGradeValue),\n      value: String(possibleGradeValue)\n    }, String(possibleGradeValue));\n  }, List.filter(function (g) {\n    return g <= state.maxGrade;\n  })(possibleGradeValues))))), React.createElement(\"div\", {\n    className: \"flex justify-between\"\n  }, React.createElement(\"div\", {\n    className: \"flex items-center\"\n  }, React.createElement(\"label\", {\n    className: \"block tracking-wide text-xs font-semibold\",\n    htmlFor: \"grades\"\n  }, \"Grade and Labels\"), React.createElement(HelpIcon.make, {\n    className: \"ml-2\",\n    link: \"https://docs.pupilfirst.com/#/evaluation_criteria\",\n    children: \"Assign labels for each grade, to reflect in grade cards for students and coaches\"\n  })), React.createElement(\"div\", {\n    className: \"flex\"\n  }, React.createElement(\"div\", {\n    className: \"flex justify-center items-center ml-4\"\n  }, React.createElement(\"span\", {\n    className: \"grade-bar__pointer-legend grade-bar__pointer-legend-failed\"\n  }), React.createElement(\"span\", {\n    className: \"ml-2 text-xs\"\n  }, \"Fail\")), React.createElement(\"div\", {\n    className: \"flex justify-center items-center ml-4\"\n  }, React.createElement(\"span\", {\n    className: \"grade-bar__pointer-legend grade-bar__pointer-legend-passed\"\n  }), React.createElement(\"span\", {\n    className: \"ml-2 text-xs\"\n  }, \"Pass\")))), React.createElement(\"div\", {\n    \"aria-label\": \"label-editor\"\n  }, labels(state, setState)), React.createElement(\"div\", {\n    className: \"mt-3 mb-3 text-xs\"\n  }, React.createElement(\"span\", {\n    className: \"leading-normal\"\n  }, React.createElement(\"strong\", undefined, \"Important:\"), \" The values for maximum and passing grades cannot be modified once a criterion is created. Labels given to each grade can be edited later on.\")), React.createElement(\"div\", {\n    className: \"flex\"\n  }, tmp))))));\n}\n\nvar make$2 = EvaluationCriterionEditor__Form;\nexports.str = str;\nexports.CreateEvaluationCriterionQuery = CreateEvaluationCriterionQuery;\nexports.UpdateEvaluationCriterionQuery = UpdateEvaluationCriterionQuery;\nexports.formClasses = formClasses;\nexports.possibleGradeValues = possibleGradeValues;\nexports.gradeBarBulletClasses = gradeBarBulletClasses;\nexports.updateMaxGrade = updateMaxGrade;\nexports.updatePassGrade = updatePassGrade;\nexports.updateGradeLabel = updateGradeLabel;\nexports.updateEvaluationCriterion = updateEvaluationCriterion;\nexports.createEvaluationCriterion = createEvaluationCriterion;\nexports.updateName = updateName;\nexports.saveDisabled = saveDisabled;\nexports.labelClasses = labelClasses;\nexports.labels = labels;\nexports.make = make$2;\n/*  Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/schools/courses/components/evaluation_criteria_editor/EvaluationCriterionEditor__Form.bs.js"],"names":["List","require","$$Array","Curry","React","Js_exn","$$String","Js_dict","Js_json","Caml_obj","HelpIcon","Js_option","GradeLabel","Caml_format","Caml_option","GraphqlQuery","DisablingCover","EvaluationCriterion","School__InputGroupError","str","prim","ppx_printed_query","parse","value","value$1","getExn","decodeObject","match","get","tmp","undefined","value$2","valFromOption","match$1","tmp$1","value$3","match$2","decodeNull","value$4","match$3","tmp$2","value$5","match$4","decodeString","raiseError","JSON","stringify","match$5","tmp$3","value$6","match$6","match$7","tmp$4","value$7","match$8","decodeNumber","match$9","tmp$5","value$8","match$10","match$11","id","name","maxGrade","passGrade","gradeLabels","decodeArray","map","grade","label","evaluationCriterion","createEvaluationCriterion","json_of_GradeAndLabelInput","fromArray","filter","param","test","make","courseId","gradesAndLabels","query","variables","makeWithVariables","makeVariables","definition_002","graphql_ppx_use_json_variables_fn","_1","definition","ret_type","f","MT_Ret","CreateEvaluationCriterionQuery","ppx_printed_query$1","parse$1","updateEvaluationCriterion","json_of_GradeAndLabelInput$1","make$1","makeWithVariables$1","makeVariables$1","definition_002$1","definition$1","ret_type$1","MT_Ret$1","UpdateEvaluationCriterionQuery","formClasses","possibleGradeValues","gradeBarBulletClasses","selected","passed","empty","classes","updateMaxGrade","state","setState","saving","dirty","updatePassGrade","updateGradeLabel","gradeAndLabel","updatedGradeAndLabel","update","gl","addOrUpdateCriterionCB","criterion","jsGradeAndLabelArray","asJsObject","gradesAndLabel","eta","sendQuery","then","result","updatedCriterion","makeFromJs","Promise","resolve","newCriterion","updateName","saveDisabled","hasValidName","trim","length","labelClasses","caml_lessthan","labels","createElement","key","String","className","maxLength","placeholder","type","onChange","$$event","target","gnl","EvaluationCriterionEditor__Form","Props","useState","ec","of_list","disabled","onClick","message","children","htmlFor","active","caml_int_of_string","possibleGradeValue","g","link","make$2","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Js_exn = require(\"bs-platform/lib/js/js_exn.js\");\nvar $$String = require(\"bs-platform/lib/js/string.js\");\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\nvar Js_json = require(\"bs-platform/lib/js/js_json.js\");\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\nvar HelpIcon = require(\"../../../../shared/components/HelpIcon.bs.js\");\nvar Js_option = require(\"bs-platform/lib/js/js_option.js\");\nvar GradeLabel = require(\"../../../../shared/types/GradeLabel.bs.js\");\nvar Caml_format = require(\"bs-platform/lib/js/caml_format.js\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar GraphqlQuery = require(\"../../../../shared/utils/GraphqlQuery.bs.js\");\nvar DisablingCover = require(\"../../../../shared/components/DisablingCover.bs.js\");\nvar EvaluationCriterion = require(\"../../../../shared/types/EvaluationCriterion.bs.js\");\nvar School__InputGroupError = require(\"../../../shared/components/School__InputGroupError.bs.js\");\n\n((require(\"./EvaluationCriterionEditor__Form.css\")));\n\nfunction str(prim) {\n  return prim;\n}\n\nvar ppx_printed_query = \"mutation CreateEvaluationCriterionMutation($name: String!, $courseId: ID!, $maxGrade: Int!, $passGrade: Int!, $gradesAndLabels: [GradeAndLabelInput!]!)  {\\ncreateEvaluationCriterion(courseId: $courseId, name: $name, maxGrade: $maxGrade, passGrade: $passGrade, gradesAndLabels: $gradesAndLabels)  {\\nevaluationCriterion  {\\nid  \\nname  \\nmaxGrade  \\npassGrade  \\ngradeLabels  {\\ngrade  \\nlabel  \\n}\\n\\n}\\n\\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"createEvaluationCriterion\");\n  var tmp;\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"evaluationCriterion\");\n    var tmp$1;\n    if (match$1 !== undefined) {\n      var value$3 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_json.decodeNull(value$3);\n      if (match$2 !== undefined) {\n        tmp$1 = undefined;\n      } else {\n        var value$4 = Js_option.getExn(Js_json.decodeObject(value$3));\n        var match$3 = Js_dict.get(value$4, \"id\");\n        var tmp$2;\n        if (match$3 !== undefined) {\n          var value$5 = Caml_option.valFromOption(match$3);\n          var match$4 = Js_json.decodeString(value$5);\n          tmp$2 = match$4 !== undefined ? match$4 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$5));\n        } else {\n          tmp$2 = Js_exn.raiseError(\"graphql_ppx: Field id on type EvaluationCriterion is missing\");\n        }\n        var match$5 = Js_dict.get(value$4, \"name\");\n        var tmp$3;\n        if (match$5 !== undefined) {\n          var value$6 = Caml_option.valFromOption(match$5);\n          var match$6 = Js_json.decodeString(value$6);\n          tmp$3 = match$6 !== undefined ? match$6 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$6));\n        } else {\n          tmp$3 = Js_exn.raiseError(\"graphql_ppx: Field name on type EvaluationCriterion is missing\");\n        }\n        var match$7 = Js_dict.get(value$4, \"maxGrade\");\n        var tmp$4;\n        if (match$7 !== undefined) {\n          var value$7 = Caml_option.valFromOption(match$7);\n          var match$8 = Js_json.decodeNumber(value$7);\n          tmp$4 = match$8 !== undefined ? match$8 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$7));\n        } else {\n          tmp$4 = Js_exn.raiseError(\"graphql_ppx: Field maxGrade on type EvaluationCriterion is missing\");\n        }\n        var match$9 = Js_dict.get(value$4, \"passGrade\");\n        var tmp$5;\n        if (match$9 !== undefined) {\n          var value$8 = Caml_option.valFromOption(match$9);\n          var match$10 = Js_json.decodeNumber(value$8);\n          tmp$5 = match$10 !== undefined ? match$10 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$8));\n        } else {\n          tmp$5 = Js_exn.raiseError(\"graphql_ppx: Field passGrade on type EvaluationCriterion is missing\");\n        }\n        var match$11 = Js_dict.get(value$4, \"gradeLabels\");\n        tmp$1 = {\n          id: tmp$2,\n          name: tmp$3,\n          maxGrade: tmp$4,\n          passGrade: tmp$5,\n          gradeLabels: match$11 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match$11))).map((function (value) {\n                    var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n                    var match = Js_dict.get(value$1, \"grade\");\n                    var tmp;\n                    if (match !== undefined) {\n                      var value$2 = Caml_option.valFromOption(match);\n                      var match$1 = Js_json.decodeNumber(value$2);\n                      tmp = match$1 !== undefined ? match$1 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$2));\n                    } else {\n                      tmp = Js_exn.raiseError(\"graphql_ppx: Field grade on type GradeAndLabel is missing\");\n                    }\n                    var match$2 = Js_dict.get(value$1, \"label\");\n                    var tmp$1;\n                    if (match$2 !== undefined) {\n                      var value$3 = Caml_option.valFromOption(match$2);\n                      var match$3 = Js_json.decodeString(value$3);\n                      tmp$1 = match$3 !== undefined ? match$3 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$3));\n                    } else {\n                      tmp$1 = Js_exn.raiseError(\"graphql_ppx: Field label on type GradeAndLabel is missing\");\n                    }\n                    return {\n                            grade: tmp,\n                            label: tmp$1\n                          };\n                  })) : Js_exn.raiseError(\"graphql_ppx: Field gradeLabels on type EvaluationCriterion is missing\")\n        };\n      }\n    } else {\n      tmp$1 = undefined;\n    }\n    tmp = {\n      evaluationCriterion: tmp$1\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field createEvaluationCriterion on type Mutation is missing\");\n  }\n  return {\n          createEvaluationCriterion: tmp\n        };\n}\n\nfunction json_of_GradeAndLabelInput(value) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"grade\",\n                  value.grade\n                ],\n                /* tuple */[\n                  \"label\",\n                  value.label\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction make(name, courseId, maxGrade, passGrade, gradesAndLabels, param) {\n  return {\n          query: ppx_printed_query,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"name\",\n                    name\n                  ],\n                  /* tuple */[\n                    \"courseId\",\n                    courseId\n                  ],\n                  /* tuple */[\n                    \"maxGrade\",\n                    maxGrade\n                  ],\n                  /* tuple */[\n                    \"passGrade\",\n                    passGrade\n                  ],\n                  /* tuple */[\n                    \"gradesAndLabels\",\n                    gradesAndLabels.map(json_of_GradeAndLabelInput)\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse\n        };\n}\n\nfunction makeWithVariables(variables) {\n  var name = variables.name;\n  var courseId = variables.courseId;\n  var maxGrade = variables.maxGrade;\n  var passGrade = variables.passGrade;\n  var gradesAndLabels = variables.gradesAndLabels;\n  return {\n          query: ppx_printed_query,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"name\",\n                    name\n                  ],\n                  /* tuple */[\n                    \"courseId\",\n                    courseId\n                  ],\n                  /* tuple */[\n                    \"maxGrade\",\n                    maxGrade\n                  ],\n                  /* tuple */[\n                    \"passGrade\",\n                    passGrade\n                  ],\n                  /* tuple */[\n                    \"gradesAndLabels\",\n                    gradesAndLabels.map(json_of_GradeAndLabelInput)\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse\n        };\n}\n\nfunction makeVariables(name, courseId, maxGrade, passGrade, gradesAndLabels, param) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"name\",\n                  name\n                ],\n                /* tuple */[\n                  \"courseId\",\n                  courseId\n                ],\n                /* tuple */[\n                  \"maxGrade\",\n                  maxGrade\n                ],\n                /* tuple */[\n                  \"passGrade\",\n                  passGrade\n                ],\n                /* tuple */[\n                  \"gradesAndLabels\",\n                  gradesAndLabels.map(json_of_GradeAndLabelInput)\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn, name, courseId, maxGrade, passGrade, gradesAndLabels, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n                    /* tuple */[\n                      \"name\",\n                      name\n                    ],\n                    /* tuple */[\n                      \"courseId\",\n                      courseId\n                    ],\n                    /* tuple */[\n                      \"maxGrade\",\n                      maxGrade\n                    ],\n                    /* tuple */[\n                      \"passGrade\",\n                      passGrade\n                    ],\n                    /* tuple */[\n                      \"gradesAndLabels\",\n                      gradesAndLabels.map(json_of_GradeAndLabelInput)\n                    ]\n                  ].filter((function (param) {\n                        return !Js_json.test(param[1], /* Null */5);\n                      }))));\n}\n\nvar definition = /* tuple */[\n  parse,\n  ppx_printed_query,\n  definition_002\n];\n\nfunction ret_type(f) {\n  return { };\n}\n\nvar MT_Ret = { };\n\nvar CreateEvaluationCriterionQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  json_of_GradeAndLabelInput: json_of_GradeAndLabelInput,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\n\nvar ppx_printed_query$1 = \"mutation UpdateEvaluationCriterionMutation($id: ID!, $name: String!, $gradesAndLabels: [GradeAndLabelInput!]!)  {\\nupdateEvaluationCriterion(id: $id, name: $name, gradesAndLabels: $gradesAndLabels)  {\\nevaluationCriterion  {\\nid  \\nname  \\nmaxGrade  \\npassGrade  \\ngradeLabels  {\\ngrade  \\nlabel  \\n}\\n\\n}\\n\\n}\\n\\n}\\n\";\n\nfunction parse$1(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"updateEvaluationCriterion\");\n  var tmp;\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"evaluationCriterion\");\n    var tmp$1;\n    if (match$1 !== undefined) {\n      var value$3 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_json.decodeNull(value$3);\n      if (match$2 !== undefined) {\n        tmp$1 = undefined;\n      } else {\n        var value$4 = Js_option.getExn(Js_json.decodeObject(value$3));\n        var match$3 = Js_dict.get(value$4, \"id\");\n        var tmp$2;\n        if (match$3 !== undefined) {\n          var value$5 = Caml_option.valFromOption(match$3);\n          var match$4 = Js_json.decodeString(value$5);\n          tmp$2 = match$4 !== undefined ? match$4 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$5));\n        } else {\n          tmp$2 = Js_exn.raiseError(\"graphql_ppx: Field id on type EvaluationCriterion is missing\");\n        }\n        var match$5 = Js_dict.get(value$4, \"name\");\n        var tmp$3;\n        if (match$5 !== undefined) {\n          var value$6 = Caml_option.valFromOption(match$5);\n          var match$6 = Js_json.decodeString(value$6);\n          tmp$3 = match$6 !== undefined ? match$6 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$6));\n        } else {\n          tmp$3 = Js_exn.raiseError(\"graphql_ppx: Field name on type EvaluationCriterion is missing\");\n        }\n        var match$7 = Js_dict.get(value$4, \"maxGrade\");\n        var tmp$4;\n        if (match$7 !== undefined) {\n          var value$7 = Caml_option.valFromOption(match$7);\n          var match$8 = Js_json.decodeNumber(value$7);\n          tmp$4 = match$8 !== undefined ? match$8 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$7));\n        } else {\n          tmp$4 = Js_exn.raiseError(\"graphql_ppx: Field maxGrade on type EvaluationCriterion is missing\");\n        }\n        var match$9 = Js_dict.get(value$4, \"passGrade\");\n        var tmp$5;\n        if (match$9 !== undefined) {\n          var value$8 = Caml_option.valFromOption(match$9);\n          var match$10 = Js_json.decodeNumber(value$8);\n          tmp$5 = match$10 !== undefined ? match$10 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$8));\n        } else {\n          tmp$5 = Js_exn.raiseError(\"graphql_ppx: Field passGrade on type EvaluationCriterion is missing\");\n        }\n        var match$11 = Js_dict.get(value$4, \"gradeLabels\");\n        tmp$1 = {\n          id: tmp$2,\n          name: tmp$3,\n          maxGrade: tmp$4,\n          passGrade: tmp$5,\n          gradeLabels: match$11 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match$11))).map((function (value) {\n                    var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n                    var match = Js_dict.get(value$1, \"grade\");\n                    var tmp;\n                    if (match !== undefined) {\n                      var value$2 = Caml_option.valFromOption(match);\n                      var match$1 = Js_json.decodeNumber(value$2);\n                      tmp = match$1 !== undefined ? match$1 | 0 : Js_exn.raiseError(\"graphql_ppx: Expected int, got \" + JSON.stringify(value$2));\n                    } else {\n                      tmp = Js_exn.raiseError(\"graphql_ppx: Field grade on type GradeAndLabel is missing\");\n                    }\n                    var match$2 = Js_dict.get(value$1, \"label\");\n                    var tmp$1;\n                    if (match$2 !== undefined) {\n                      var value$3 = Caml_option.valFromOption(match$2);\n                      var match$3 = Js_json.decodeString(value$3);\n                      tmp$1 = match$3 !== undefined ? match$3 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$3));\n                    } else {\n                      tmp$1 = Js_exn.raiseError(\"graphql_ppx: Field label on type GradeAndLabel is missing\");\n                    }\n                    return {\n                            grade: tmp,\n                            label: tmp$1\n                          };\n                  })) : Js_exn.raiseError(\"graphql_ppx: Field gradeLabels on type EvaluationCriterion is missing\")\n        };\n      }\n    } else {\n      tmp$1 = undefined;\n    }\n    tmp = {\n      evaluationCriterion: tmp$1\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field updateEvaluationCriterion on type Mutation is missing\");\n  }\n  return {\n          updateEvaluationCriterion: tmp\n        };\n}\n\nfunction json_of_GradeAndLabelInput$1(value) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"grade\",\n                  value.grade\n                ],\n                /* tuple */[\n                  \"label\",\n                  value.label\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction make$1(id, name, gradesAndLabels, param) {\n  return {\n          query: ppx_printed_query$1,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"id\",\n                    id\n                  ],\n                  /* tuple */[\n                    \"name\",\n                    name\n                  ],\n                  /* tuple */[\n                    \"gradesAndLabels\",\n                    gradesAndLabels.map(json_of_GradeAndLabelInput$1)\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse$1\n        };\n}\n\nfunction makeWithVariables$1(variables) {\n  var id = variables.id;\n  var name = variables.name;\n  var gradesAndLabels = variables.gradesAndLabels;\n  return {\n          query: ppx_printed_query$1,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"id\",\n                    id\n                  ],\n                  /* tuple */[\n                    \"name\",\n                    name\n                  ],\n                  /* tuple */[\n                    \"gradesAndLabels\",\n                    gradesAndLabels.map(json_of_GradeAndLabelInput$1)\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse$1\n        };\n}\n\nfunction makeVariables$1(id, name, gradesAndLabels, param) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"id\",\n                  id\n                ],\n                /* tuple */[\n                  \"name\",\n                  name\n                ],\n                /* tuple */[\n                  \"gradesAndLabels\",\n                  gradesAndLabels.map(json_of_GradeAndLabelInput$1)\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction definition_002$1(graphql_ppx_use_json_variables_fn, id, name, gradesAndLabels, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n                    /* tuple */[\n                      \"id\",\n                      id\n                    ],\n                    /* tuple */[\n                      \"name\",\n                      name\n                    ],\n                    /* tuple */[\n                      \"gradesAndLabels\",\n                      gradesAndLabels.map(json_of_GradeAndLabelInput$1)\n                    ]\n                  ].filter((function (param) {\n                        return !Js_json.test(param[1], /* Null */5);\n                      }))));\n}\n\nvar definition$1 = /* tuple */[\n  parse$1,\n  ppx_printed_query$1,\n  definition_002$1\n];\n\nfunction ret_type$1(f) {\n  return { };\n}\n\nvar MT_Ret$1 = { };\n\nvar UpdateEvaluationCriterionQuery = {\n  ppx_printed_query: ppx_printed_query$1,\n  query: ppx_printed_query$1,\n  parse: parse$1,\n  json_of_GradeAndLabelInput: json_of_GradeAndLabelInput$1,\n  make: make$1,\n  makeWithVariables: makeWithVariables$1,\n  makeVariables: makeVariables$1,\n  definition: definition$1,\n  ret_type: ret_type$1,\n  MT_Ret: MT_Ret$1\n};\n\nfunction formClasses(value) {\n  if (value) {\n    return \"drawer-right-form w-full opacity-50\";\n  } else {\n    return \"drawer-right-form w-full\";\n  }\n}\n\nvar possibleGradeValues = /* :: */[\n  1,\n  /* :: */[\n    2,\n    /* :: */[\n      3,\n      /* :: */[\n        4,\n        /* :: */[\n          5,\n          /* :: */[\n            6,\n            /* :: */[\n              7,\n              /* :: */[\n                8,\n                /* :: */[\n                  9,\n                  /* :: */[\n                    10,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nfunction gradeBarBulletClasses(selected, passed, empty) {\n  var classes = selected ? \" grade-bar__pointer--selected\" : \" \";\n  if (empty) {\n    return classes + \" grade-bar__pointer--pulse\";\n  } else if (passed) {\n    return classes + \" grade-bar__pointer--passed\";\n  } else {\n    return classes + \" grade-bar__pointer--failed\";\n  }\n}\n\nfunction updateMaxGrade(value, state, setState) {\n  if (value < state.passGrade) {\n    return Curry._1(setState, (function (state) {\n                  return {\n                          name: state.name,\n                          maxGrade: value,\n                          passGrade: value,\n                          gradesAndLabels: state.gradesAndLabels,\n                          saving: state.saving,\n                          dirty: state.dirty\n                        };\n                }));\n  } else {\n    return Curry._1(setState, (function (state) {\n                  return {\n                          name: state.name,\n                          maxGrade: value,\n                          passGrade: state.passGrade,\n                          gradesAndLabels: state.gradesAndLabels,\n                          saving: state.saving,\n                          dirty: state.dirty\n                        };\n                }));\n  }\n}\n\nfunction updatePassGrade(value, setState) {\n  return Curry._1(setState, (function (state) {\n                return {\n                        name: state.name,\n                        maxGrade: state.maxGrade,\n                        passGrade: value,\n                        gradesAndLabels: state.gradesAndLabels,\n                        saving: state.saving,\n                        dirty: state.dirty\n                      };\n              }));\n}\n\nfunction updateGradeLabel(value, gradeAndLabel, state, setState) {\n  var updatedGradeAndLabel = GradeLabel.update(value, gradeAndLabel);\n  var gradesAndLabels = $$Array.map((function (gl) {\n          if (GradeLabel.grade(gl) === GradeLabel.grade(updatedGradeAndLabel)) {\n            return updatedGradeAndLabel;\n          } else {\n            return gl;\n          }\n        }), state.gradesAndLabels);\n  return Curry._1(setState, (function (state) {\n                return {\n                        name: state.name,\n                        maxGrade: state.maxGrade,\n                        passGrade: state.passGrade,\n                        gradesAndLabels: gradesAndLabels,\n                        saving: state.saving,\n                        dirty: true\n                      };\n              }));\n}\n\nfunction updateEvaluationCriterion(state, setState, addOrUpdateCriterionCB, criterion) {\n  Curry._1(setState, (function (state) {\n          return {\n                  name: state.name,\n                  maxGrade: state.maxGrade,\n                  passGrade: state.passGrade,\n                  gradesAndLabels: state.gradesAndLabels,\n                  saving: true,\n                  dirty: state.dirty\n                };\n        }));\n  var jsGradeAndLabelArray = $$Array.map(GradeLabel.asJsObject, state.gradesAndLabels.filter((function (gradesAndLabel) {\n              return GradeLabel.grade(gradesAndLabel) <= state.maxGrade;\n            })));\n  (function (eta) {\n          return GraphqlQuery.sendQuery(undefined, eta);\n        })(make$1(EvaluationCriterion.id(criterion), state.name, jsGradeAndLabelArray, /* () */0)).then((function (result) {\n          var match = result.updateEvaluationCriterion.evaluationCriterion;\n          if (match !== undefined) {\n            var updatedCriterion = EvaluationCriterion.makeFromJs(Caml_option.valFromOption(match));\n            Curry._1(addOrUpdateCriterionCB, updatedCriterion);\n            Curry._1(setState, (function (state) {\n                    return {\n                            name: state.name,\n                            maxGrade: state.maxGrade,\n                            passGrade: state.passGrade,\n                            gradesAndLabels: state.gradesAndLabels,\n                            saving: false,\n                            dirty: state.dirty\n                          };\n                  }));\n          } else {\n            Curry._1(setState, (function (state) {\n                    return {\n                            name: state.name,\n                            maxGrade: state.maxGrade,\n                            passGrade: state.passGrade,\n                            gradesAndLabels: state.gradesAndLabels,\n                            saving: false,\n                            dirty: state.dirty\n                          };\n                  }));\n          }\n          return Promise.resolve(/* () */0);\n        }));\n  return /* () */0;\n}\n\nfunction createEvaluationCriterion(state, setState, addOrUpdateCriterionCB, courseId) {\n  Curry._1(setState, (function (state) {\n          return {\n                  name: state.name,\n                  maxGrade: state.maxGrade,\n                  passGrade: state.passGrade,\n                  gradesAndLabels: state.gradesAndLabels,\n                  saving: true,\n                  dirty: state.dirty\n                };\n        }));\n  var jsGradeAndLabelArray = $$Array.map(GradeLabel.asJsObject, state.gradesAndLabels.filter((function (gradesAndLabel) {\n              return GradeLabel.grade(gradesAndLabel) <= state.maxGrade;\n            })));\n  (function (eta) {\n          return GraphqlQuery.sendQuery(undefined, eta);\n        })(make(state.name, courseId, state.maxGrade, state.passGrade, jsGradeAndLabelArray, /* () */0)).then((function (result) {\n          var match = result.createEvaluationCriterion.evaluationCriterion;\n          if (match !== undefined) {\n            var newCriterion = EvaluationCriterion.makeFromJs(Caml_option.valFromOption(match));\n            Curry._1(addOrUpdateCriterionCB, newCriterion);\n            Curry._1(setState, (function (state) {\n                    return {\n                            name: state.name,\n                            maxGrade: state.maxGrade,\n                            passGrade: state.passGrade,\n                            gradesAndLabels: state.gradesAndLabels,\n                            saving: false,\n                            dirty: state.dirty\n                          };\n                  }));\n          } else {\n            Curry._1(setState, (function (state) {\n                    return {\n                            name: state.name,\n                            maxGrade: state.maxGrade,\n                            passGrade: state.passGrade,\n                            gradesAndLabels: state.gradesAndLabels,\n                            saving: false,\n                            dirty: state.dirty\n                          };\n                  }));\n          }\n          return Promise.resolve(/* () */0);\n        }));\n  return /* () */0;\n}\n\nfunction updateName(setState, value) {\n  return Curry._1(setState, (function (state) {\n                return {\n                        name: value,\n                        maxGrade: state.maxGrade,\n                        passGrade: state.passGrade,\n                        gradesAndLabels: state.gradesAndLabels,\n                        saving: state.saving,\n                        dirty: true\n                      };\n              }));\n}\n\nfunction saveDisabled(state) {\n  var hasValidName = $$String.trim(state.name).length !== 0;\n  if (!state.dirty || state.saving) {\n    return true;\n  } else {\n    return !hasValidName;\n  }\n}\n\nfunction labelClasses(grade, passGrade) {\n  return \"w-12 p-3 text-center  mr-3 rounded-lg border  leading-tight \" + (\n          Caml_obj.caml_lessthan(grade, passGrade) ? \"bg-red-300 text-red-700 border-red-500\" : \"bg-green-300 text-green-700 border-green-500\"\n        );\n}\n\nfunction labels(state, setState) {\n  return $$Array.map((function (gradeAndLabel) {\n                var grade = GradeLabel.grade(gradeAndLabel);\n                return React.createElement(\"div\", {\n                            key: String(grade),\n                            className: \"flex flex-wrap mt-2\"\n                          }, React.createElement(\"div\", {\n                                className: labelClasses(grade, state.passGrade)\n                              }, String(grade)), React.createElement(\"div\", {\n                                className: \"flex-1\"\n                              }, React.createElement(\"input\", {\n                                    className: \" appearance-none border rounded w-full p-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n                                    id: \"grade-label-for-\" + String(grade),\n                                    maxLength: 40,\n                                    placeholder: \"Label for grade \" + String(GradeLabel.grade(gradeAndLabel)),\n                                    type: \"text\",\n                                    value: GradeLabel.label(gradeAndLabel),\n                                    onChange: (function ($$event) {\n                                        return updateGradeLabel($$event.target.value, gradeAndLabel, state, setState);\n                                      })\n                                  })));\n              }), state.gradesAndLabels.filter((function (gnl) {\n                    return GradeLabel.grade(gnl) <= state.maxGrade;\n                  })));\n}\n\nfunction EvaluationCriterionEditor__Form(Props) {\n  var evaluationCriterion = Props.evaluationCriterion;\n  var courseId = Props.courseId;\n  var addOrUpdateCriterionCB = Props.addOrUpdateCriterionCB;\n  var match = React.useState((function () {\n          if (evaluationCriterion !== undefined) {\n            var ec = evaluationCriterion;\n            return {\n                    name: EvaluationCriterion.name(ec),\n                    maxGrade: EvaluationCriterion.maxGrade(ec),\n                    passGrade: EvaluationCriterion.passGrade(ec),\n                    gradesAndLabels: EvaluationCriterion.gradesAndLabels(ec),\n                    saving: false,\n                    dirty: false\n                  };\n          } else {\n            return {\n                    name: \"\",\n                    maxGrade: 5,\n                    passGrade: 2,\n                    gradesAndLabels: $$Array.of_list(List.map(GradeLabel.empty, possibleGradeValues)),\n                    saving: false,\n                    dirty: false\n                  };\n          }\n        }));\n  var setState = match[1];\n  var state = match[0];\n  var tmp;\n  if (evaluationCriterion !== undefined) {\n    var criterion = evaluationCriterion;\n    tmp = React.createElement(\"button\", {\n          className: \"w-full btn btn-large btn-primary mt-3\",\n          disabled: saveDisabled(state),\n          onClick: (function (param) {\n              return updateEvaluationCriterion(state, setState, addOrUpdateCriterionCB, criterion);\n            })\n        }, \"Update Criterion\");\n  } else {\n    tmp = React.createElement(\"button\", {\n          className: \"w-full btn btn-large btn-primary mt-3\",\n          disabled: saveDisabled(state),\n          onClick: (function (param) {\n              return createEvaluationCriterion(state, setState, addOrUpdateCriterionCB, courseId);\n            })\n        }, \"Create Criterion\");\n  }\n  return React.createElement(\"div\", {\n              className: \"mx-auto bg-white\"\n            }, React.createElement(\"div\", {\n                  className: \"max-w-2xl p-6 mx-auto\"\n                }, React.createElement(\"h5\", {\n                      className: \"uppercase text-center border-b border-gray-400 pb-2\"\n                    }, evaluationCriterion !== undefined ? EvaluationCriterion.name(evaluationCriterion) : \"Add Evaluation Criterion\"), React.createElement(DisablingCover.make, {\n                      disabled: state.saving,\n                      message: evaluationCriterion !== undefined ? \"Updating...\" : \"Saving...\",\n                      children: null\n                    }, React.createElement(\"div\", {\n                          key: \"evaluation-criterion-editor\",\n                          className: \"mt-3\"\n                        }, React.createElement(\"div\", {\n                              className: \"mt-5\"\n                            }, React.createElement(\"label\", {\n                                  className: \"inline-block tracking-wide text-xs font-semibold \",\n                                  htmlFor: \"name\"\n                                }, \"Name\"), React.createElement(\"input\", {\n                                  className: \"appearance-none block w-full bg-white border border-gray-400 rounded py-3 px-4 mt-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n                                  id: \"name\",\n                                  maxLength: 50,\n                                  placeholder: \"Evaluation criterion name\",\n                                  type: \"text\",\n                                  value: state.name,\n                                  onChange: (function ($$event) {\n                                      return updateName(setState, $$event.target.value);\n                                    })\n                                }), React.createElement(School__InputGroupError.make, {\n                                  message: \"Enter a valid name\",\n                                  active: state.dirty && $$String.trim(state.name).length < 1\n                                }))), React.createElement(\"div\", {\n                          className: \"mx-auto\"\n                        }, React.createElement(\"div\", {\n                              className: \"max-w-2xl pt-6 mx-auto\"\n                            }, React.createElement(\"div\", {\n                                  className: \"mb-4\"\n                                }, React.createElement(\"span\", {\n                                      className: \"inline-block tracking-wide text-sm font-semibold mr-2\",\n                                      htmlFor: \"max_grades\"\n                                    }, \"Maximum grade is\"), evaluationCriterion !== undefined ? React.createElement(\"span\", {\n                                        className: \"cursor-not-allowed inline-block bg-white border-b-2 text-2xl font-semibold text-center border-blue px-3 py-2 leading-tight rounded-none focus:outline-none\"\n                                      }, String(state.maxGrade)) : React.createElement(\"select\", {\n                                        className: \"cursor-pointer inline-block appearance-none bg-white border-b-2 text-2xl font-semibold text-center border-blue hover:border-gray-500 px-3 py-2 leading-tight rounded-none focus:outline-none\",\n                                        id: \"max_grade\",\n                                        value: String(state.maxGrade),\n                                        onChange: (function ($$event) {\n                                            return updateMaxGrade(Caml_format.caml_int_of_string($$event.target.value), state, setState);\n                                          })\n                                      }, $$Array.of_list(List.map((function (possibleGradeValue) {\n                                                  return React.createElement(\"option\", {\n                                                              key: String(possibleGradeValue),\n                                                              value: String(possibleGradeValue)\n                                                            }, String(possibleGradeValue));\n                                                }), List.filter((function (g) {\n                                                        return g !== 1;\n                                                      }))(possibleGradeValues)))), React.createElement(\"span\", {\n                                      className: \"inline-block tracking-wide text-sm font-semibold mx-2\",\n                                      htmlFor: \"pass_grades\"\n                                    }, \"and the passing grade is\"), evaluationCriterion !== undefined ? React.createElement(\"span\", {\n                                        className: \"cursor-not-allowed inline-block appearance-none bg-white border-b-2 text-2xl font-semibold text-center border-blue px-3 py-2 leading-tight rounded-none\"\n                                      }, String(state.passGrade)) : React.createElement(\"select\", {\n                                        className: \"cursor-pointer inline-block appearance-none bg-white border-b-2 text-2xl font-semibold text-center border-blue hover:border-gray-500 px-3 py-2 rounded-none leading-tight focus:outline-none\",\n                                        id: \"pass_grade\",\n                                        value: String(state.passGrade),\n                                        onChange: (function ($$event) {\n                                            return updatePassGrade(Caml_format.caml_int_of_string($$event.target.value), setState);\n                                          })\n                                      }, $$Array.of_list(List.map((function (possibleGradeValue) {\n                                                  return React.createElement(\"option\", {\n                                                              key: String(possibleGradeValue),\n                                                              value: String(possibleGradeValue)\n                                                            }, String(possibleGradeValue));\n                                                }), List.filter((function (g) {\n                                                        return g <= state.maxGrade;\n                                                      }))(possibleGradeValues))))), React.createElement(\"div\", {\n                                  className: \"flex justify-between\"\n                                }, React.createElement(\"div\", {\n                                      className: \"flex items-center\"\n                                    }, React.createElement(\"label\", {\n                                          className: \"block tracking-wide text-xs font-semibold\",\n                                          htmlFor: \"grades\"\n                                        }, \"Grade and Labels\"), React.createElement(HelpIcon.make, {\n                                          className: \"ml-2\",\n                                          link: \"https://docs.pupilfirst.com/#/evaluation_criteria\",\n                                          children: \"Assign labels for each grade, to reflect in grade cards for students and coaches\"\n                                        })), React.createElement(\"div\", {\n                                      className: \"flex\"\n                                    }, React.createElement(\"div\", {\n                                          className: \"flex justify-center items-center ml-4\"\n                                        }, React.createElement(\"span\", {\n                                              className: \"grade-bar__pointer-legend grade-bar__pointer-legend-failed\"\n                                            }), React.createElement(\"span\", {\n                                              className: \"ml-2 text-xs\"\n                                            }, \"Fail\")), React.createElement(\"div\", {\n                                          className: \"flex justify-center items-center ml-4\"\n                                        }, React.createElement(\"span\", {\n                                              className: \"grade-bar__pointer-legend grade-bar__pointer-legend-passed\"\n                                            }), React.createElement(\"span\", {\n                                              className: \"ml-2 text-xs\"\n                                            }, \"Pass\")))), React.createElement(\"div\", {\n                                  \"aria-label\": \"label-editor\"\n                                }, labels(state, setState)), React.createElement(\"div\", {\n                                  className: \"mt-3 mb-3 text-xs\"\n                                }, React.createElement(\"span\", {\n                                      className: \"leading-normal\"\n                                    }, React.createElement(\"strong\", undefined, \"Important:\"), \" The values for maximum and passing grades cannot be modified once a criterion is created. Labels given to each grade can be edited later on.\")), React.createElement(\"div\", {\n                                  className: \"flex\"\n                                }, tmp))))));\n}\n\nvar make$2 = EvaluationCriterionEditor__Form;\n\nexports.str = str;\nexports.CreateEvaluationCriterionQuery = CreateEvaluationCriterionQuery;\nexports.UpdateEvaluationCriterionQuery = UpdateEvaluationCriterionQuery;\nexports.formClasses = formClasses;\nexports.possibleGradeValues = possibleGradeValues;\nexports.gradeBarBulletClasses = gradeBarBulletClasses;\nexports.updateMaxGrade = updateMaxGrade;\nexports.updatePassGrade = updatePassGrade;\nexports.updateGradeLabel = updateGradeLabel;\nexports.updateEvaluationCriterion = updateEvaluationCriterion;\nexports.createEvaluationCriterion = createEvaluationCriterion;\nexports.updateName = updateName;\nexports.saveDisabled = saveDisabled;\nexports.labelClasses = labelClasses;\nexports.labels = labels;\nexports.make = make$2;\n/*  Not a pure module */\n"]},"metadata":{},"sourceType":"module"}