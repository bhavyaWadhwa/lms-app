{"ast":null,"code":"'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar $$String = require(\"bs-platform/lib/js/string.js\");\n\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nfunction $$char(c) {\n  return $$String.make(1, c);\n}\n\nfunction date(d) {\n  return d.toJSON();\n}\n\nfunction nullable(encode, param) {\n  if (param !== undefined) {\n    return Curry._1(encode, Caml_option.valFromOption(param));\n  } else {\n    return null;\n  }\n}\n\nfunction withDefault(d, encode, param) {\n  if (param !== undefined) {\n    return Curry._1(encode, Caml_option.valFromOption(param));\n  } else {\n    return d;\n  }\n}\n\nfunction dict(encode, d) {\n  var pairs = Js_dict.entries(d);\n  return Js_dict.fromArray($$Array.map(function (param) {\n    return (\n      /* tuple */\n      [param[0], Curry._1(encode, param[1])]\n    );\n  }, pairs));\n}\n\nvar object_ = Js_dict.fromList;\nvar array = $$Array.map;\n\nfunction list(encode, l) {\n  return $$Array.of_list(List.map(encode, l));\n}\n\nfunction pair(encodeA, encodeB, param) {\n  return [Curry._1(encodeA, param[0]), Curry._1(encodeB, param[1])];\n}\n\nfunction tuple3(encodeA, encodeB, encodeC, param) {\n  return [Curry._1(encodeA, param[0]), Curry._1(encodeB, param[1]), Curry._1(encodeC, param[2])];\n}\n\nfunction tuple4(encodeA, encodeB, encodeC, encodeD, param) {\n  return [Curry._1(encodeA, param[0]), Curry._1(encodeB, param[1]), Curry._1(encodeC, param[2]), Curry._1(encodeD, param[3])];\n}\n\nvar tuple2 = pair;\nexports.$$char = $$char;\nexports.date = date;\nexports.nullable = nullable;\nexports.withDefault = withDefault;\nexports.pair = pair;\nexports.tuple2 = tuple2;\nexports.tuple3 = tuple3;\nexports.tuple4 = tuple4;\nexports.dict = dict;\nexports.object_ = object_;\nexports.array = array;\nexports.list = list;\n/* No side effect */","map":null,"metadata":{},"sourceType":"module"}