{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\n\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\n\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\n\nfunction decodeAnswerOption(json) {\n  return {\n    id: Json_decode.field(\"id\", Json_decode.string, json),\n    value: Json_decode.field(\"value\", Json_decode.string, json)\n  };\n}\n\nfunction decode(json) {\n  return {\n    index: Json_decode.field(\"index\", Json_decode.$$int, json),\n    question: Json_decode.field(\"question\", Json_decode.string, json),\n    answerOptions: Json_decode.field(\"answerOptions\", function (param) {\n      return Json_decode.list(decodeAnswerOption, param);\n    }, json)\n  };\n}\n\nfunction index(t) {\n  return t.index;\n}\n\nfunction question(t) {\n  return t.question;\n}\n\nfunction answerOptions(t) {\n  return t.answerOptions;\n}\n\nfunction answerId(answerOption) {\n  return answerOption.id;\n}\n\nfunction answerValue(answerOption) {\n  return answerOption.value;\n}\n\nfunction lastQuestion(questions) {\n  var maxIndex = List.hd(List.rev(List.sort(function (q1, q2) {\n    return q1.index - q2.index | 0;\n  }, questions))).index;\n  return List.find(function (q) {\n    return q.index === maxIndex;\n  }, questions);\n}\n\nfunction nextQuestion(questions, question) {\n  return List.find(function (q) {\n    return q.index === (question.index + 1 | 0);\n  }, questions);\n}\n\nfunction isLastQuestion(questions, question) {\n  return Caml_obj.caml_equal(lastQuestion(questions), question);\n}\n\nexports.decodeAnswerOption = decodeAnswerOption;\nexports.decode = decode;\nexports.index = index;\nexports.question = question;\nexports.answerOptions = answerOptions;\nexports.answerId = answerId;\nexports.answerValue = answerValue;\nexports.lastQuestion = lastQuestion;\nexports.nextQuestion = nextQuestion;\nexports.isLastQuestion = isLastQuestion;\n/* No side effect */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/courses/curricula/types/CoursesCurriculum__QuizQuestion.bs.js"],"names":["List","require","Caml_obj","Json_decode","decodeAnswerOption","json","id","field","string","value","decode","index","$$int","question","answerOptions","param","list","t","answerId","answerOption","answerValue","lastQuestion","questions","maxIndex","hd","rev","sort","q1","q2","find","q","nextQuestion","isLastQuestion","caml_equal","exports"],"mappings":"AAAA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gCAAD,CAAtB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,wCAAD,CAAzB;;AAEA,SAASG,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,SAAO;AACCC,IAAAA,EAAE,EAAEH,WAAW,CAACI,KAAZ,CAAkB,IAAlB,EAAwBJ,WAAW,CAACK,MAApC,EAA4CH,IAA5C,CADL;AAECI,IAAAA,KAAK,EAAEN,WAAW,CAACI,KAAZ,CAAkB,OAAlB,EAA2BJ,WAAW,CAACK,MAAvC,EAA+CH,IAA/C;AAFR,GAAP;AAID;;AAED,SAASK,MAAT,CAAgBL,IAAhB,EAAsB;AACpB,SAAO;AACCM,IAAAA,KAAK,EAAER,WAAW,CAACI,KAAZ,CAAkB,OAAlB,EAA2BJ,WAAW,CAACS,KAAvC,EAA8CP,IAA9C,CADR;AAECQ,IAAAA,QAAQ,EAAEV,WAAW,CAACI,KAAZ,CAAkB,UAAlB,EAA8BJ,WAAW,CAACK,MAA1C,EAAkDH,IAAlD,CAFX;AAGCS,IAAAA,aAAa,EAAEX,WAAW,CAACI,KAAZ,CAAkB,eAAlB,EAAoC,UAAUQ,KAAV,EAAiB;AAC5D,aAAOZ,WAAW,CAACa,IAAZ,CAAiBZ,kBAAjB,EAAqCW,KAArC,CAAP;AACD,KAFQ,EAELV,IAFK;AAHhB,GAAP;AAOD;;AAED,SAASM,KAAT,CAAeM,CAAf,EAAkB;AAChB,SAAOA,CAAC,CAACN,KAAT;AACD;;AAED,SAASE,QAAT,CAAkBI,CAAlB,EAAqB;AACnB,SAAOA,CAAC,CAACJ,QAAT;AACD;;AAED,SAASC,aAAT,CAAuBG,CAAvB,EAA0B;AACxB,SAAOA,CAAC,CAACH,aAAT;AACD;;AAED,SAASI,QAAT,CAAkBC,YAAlB,EAAgC;AAC9B,SAAOA,YAAY,CAACb,EAApB;AACD;;AAED,SAASc,WAAT,CAAqBD,YAArB,EAAmC;AACjC,SAAOA,YAAY,CAACV,KAApB;AACD;;AAED,SAASY,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,MAAIC,QAAQ,GAAGvB,IAAI,CAACwB,EAAL,CAAQxB,IAAI,CAACyB,GAAL,CAASzB,IAAI,CAAC0B,IAAL,CAAW,UAAUC,EAAV,EAAcC,EAAd,EAAkB;AAC7C,WAAOD,EAAE,CAAChB,KAAH,GAAWiB,EAAE,CAACjB,KAAd,GAAsB,CAA7B;AACD,GAFiB,EAEdW,SAFc,CAAT,CAAR,EAEgBX,KAF/B;AAGA,SAAOX,IAAI,CAAC6B,IAAL,CAAW,UAAUC,CAAV,EAAa;AACjB,WAAOA,CAAC,CAACnB,KAAF,KAAYY,QAAnB;AACD,GAFN,EAESD,SAFT,CAAP;AAGD;;AAED,SAASS,YAAT,CAAsBT,SAAtB,EAAiCT,QAAjC,EAA2C;AACzC,SAAOb,IAAI,CAAC6B,IAAL,CAAW,UAAUC,CAAV,EAAa;AACjB,WAAOA,CAAC,CAACnB,KAAF,MAAaE,QAAQ,CAACF,KAAT,GAAiB,CAAjB,GAAqB,CAAlC,CAAP;AACD,GAFN,EAESW,SAFT,CAAP;AAGD;;AAED,SAASU,cAAT,CAAwBV,SAAxB,EAAmCT,QAAnC,EAA6C;AAC3C,SAAOX,QAAQ,CAAC+B,UAAT,CAAoBZ,YAAY,CAACC,SAAD,CAAhC,EAA6CT,QAA7C,CAAP;AACD;;AAEDqB,OAAO,CAAC9B,kBAAR,GAA6BA,kBAA7B;AACA8B,OAAO,CAACxB,MAAR,GAAiBA,MAAjB;AACAwB,OAAO,CAACvB,KAAR,GAAgBA,KAAhB;AACAuB,OAAO,CAACrB,QAAR,GAAmBA,QAAnB;AACAqB,OAAO,CAACpB,aAAR,GAAwBA,aAAxB;AACAoB,OAAO,CAAChB,QAAR,GAAmBA,QAAnB;AACAgB,OAAO,CAACd,WAAR,GAAsBA,WAAtB;AACAc,OAAO,CAACb,YAAR,GAAuBA,YAAvB;AACAa,OAAO,CAACH,YAAR,GAAuBA,YAAvB;AACAG,OAAO,CAACF,cAAR,GAAyBA,cAAzB;AACA","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = require(\"bs-platform/lib/js/list.js\");\nvar Caml_obj = require(\"bs-platform/lib/js/caml_obj.js\");\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\n\nfunction decodeAnswerOption(json) {\n  return {\n          id: Json_decode.field(\"id\", Json_decode.string, json),\n          value: Json_decode.field(\"value\", Json_decode.string, json)\n        };\n}\n\nfunction decode(json) {\n  return {\n          index: Json_decode.field(\"index\", Json_decode.$$int, json),\n          question: Json_decode.field(\"question\", Json_decode.string, json),\n          answerOptions: Json_decode.field(\"answerOptions\", (function (param) {\n                  return Json_decode.list(decodeAnswerOption, param);\n                }), json)\n        };\n}\n\nfunction index(t) {\n  return t.index;\n}\n\nfunction question(t) {\n  return t.question;\n}\n\nfunction answerOptions(t) {\n  return t.answerOptions;\n}\n\nfunction answerId(answerOption) {\n  return answerOption.id;\n}\n\nfunction answerValue(answerOption) {\n  return answerOption.value;\n}\n\nfunction lastQuestion(questions) {\n  var maxIndex = List.hd(List.rev(List.sort((function (q1, q2) {\n                  return q1.index - q2.index | 0;\n                }), questions))).index;\n  return List.find((function (q) {\n                return q.index === maxIndex;\n              }), questions);\n}\n\nfunction nextQuestion(questions, question) {\n  return List.find((function (q) {\n                return q.index === (question.index + 1 | 0);\n              }), questions);\n}\n\nfunction isLastQuestion(questions, question) {\n  return Caml_obj.caml_equal(lastQuestion(questions), question);\n}\n\nexports.decodeAnswerOption = decodeAnswerOption;\nexports.decode = decode;\nexports.index = index;\nexports.question = question;\nexports.answerOptions = answerOptions;\nexports.answerId = answerId;\nexports.answerValue = answerValue;\nexports.lastQuestion = lastQuestion;\nexports.nextQuestion = nextQuestion;\nexports.isLastQuestion = isLastQuestion;\n/* No side effect */\n"]},"metadata":{},"sourceType":"module"}