{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar $$String = require(\"bs-platform/lib/js/string.js\");\n\nvar ArrayUtils = require(\"../../../shared/utils/ArrayUtils.bs.js\");\n\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\n\nvar Caml_format = require(\"bs-platform/lib/js/caml_format.js\");\n\nvar CoursesReport__EvaluationCriterion = require(\"./CoursesReport__EvaluationCriterion.bs.js\");\n\nfunction id(t) {\n  return t.id;\n}\n\nfunction levelId(t) {\n  return t.levelId;\n}\n\nfunction evaluationCriteria(t) {\n  return t.evaluationCriteria;\n}\n\nfunction totalTargets(t) {\n  return t.totalTargets;\n}\n\nfunction targetsCompleted(t) {\n  return t.targetsCompleted;\n}\n\nfunction quizzesAttempted(t) {\n  return String(t.quizScores.length);\n}\n\nfunction quizScores(t) {\n  return t.quizScores;\n}\n\nfunction averageGrades(t) {\n  return t.averageGrades;\n}\n\nfunction completedLevelIds(t) {\n  return t.completedLevelIds;\n}\n\nfunction makeAverageGrade(gradesData) {\n  return gradesData.map(function (gradeData) {\n    return {\n      evaluationCriterionId: gradeData.evaluationCriterionId,\n      grade: gradeData.averageGrade\n    };\n  });\n}\n\nfunction evaluationCriterionForGrade(grade, evaluationCriteria) {\n  return ArrayUtils.unsafeFind(function (ec) {\n    return CoursesReport__EvaluationCriterion.id(ec) === grade.evaluationCriterionId;\n  }, \"Unable to find evaluation criterion with id: \" + (grade.evaluationCriterionId + \" in component: CoursesReport__Overview\"), evaluationCriteria);\n}\n\nfunction gradeValue(averageGrade) {\n  return averageGrade.grade;\n}\n\nfunction gradeAsPercentage(averageGrade, evaluationCriterion) {\n  var maxGrade = evaluationCriterion.maxGrade;\n  return String(averageGrade.grade / maxGrade * 100.0 | 0);\n}\n\nfunction computeAverageQuizScore(quizScores) {\n  var sumOfPercentageScores = $$Array.map(function (quizScore) {\n    var fractionArray = $$Array.of_list($$String.split_on_char(\n    /* \"/\" */\n    47, quizScore));\n    var numerator = Caml_format.caml_float_of_string(Caml_array.caml_array_get(fractionArray, 0));\n    var denominator = Caml_format.caml_float_of_string(Caml_array.caml_array_get(fractionArray, 1));\n    return numerator / denominator * 100.0;\n  }, quizScores).reduce(function (a, b) {\n    return a + b;\n  }, 0.0);\n  return sumOfPercentageScores / quizScores.length;\n}\n\nfunction averageQuizScore(t) {\n  if (ArrayUtils.isEmpty(t.quizScores)) {\n    return;\n  } else {\n    return computeAverageQuizScore(t.quizScores);\n  }\n}\n\nfunction makeFromJs(id, studentData) {\n  return {\n    id: id,\n    evaluationCriteria: CoursesReport__EvaluationCriterion.makeFromJs(studentData.evaluationCriteria),\n    levelId: studentData.team.levelId,\n    totalTargets: studentData.totalTargets,\n    targetsCompleted: studentData.targetsCompleted,\n    quizScores: studentData.quizScores,\n    averageGrades: makeAverageGrade(studentData.averageGrades),\n    completedLevelIds: studentData.completedLevelIds\n  };\n}\n\nexports.id = id;\nexports.levelId = levelId;\nexports.evaluationCriteria = evaluationCriteria;\nexports.totalTargets = totalTargets;\nexports.targetsCompleted = targetsCompleted;\nexports.quizzesAttempted = quizzesAttempted;\nexports.quizScores = quizScores;\nexports.averageGrades = averageGrades;\nexports.completedLevelIds = completedLevelIds;\nexports.makeAverageGrade = makeAverageGrade;\nexports.evaluationCriterionForGrade = evaluationCriterionForGrade;\nexports.gradeValue = gradeValue;\nexports.gradeAsPercentage = gradeAsPercentage;\nexports.computeAverageQuizScore = computeAverageQuizScore;\nexports.averageQuizScore = averageQuizScore;\nexports.makeFromJs = makeFromJs;\n/* ArrayUtils Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/courses/report/types/CoursesReport__StudentOverview.bs.js"],"names":["$$Array","require","$$String","ArrayUtils","Caml_array","Caml_format","CoursesReport__EvaluationCriterion","id","t","levelId","evaluationCriteria","totalTargets","targetsCompleted","quizzesAttempted","String","quizScores","length","averageGrades","completedLevelIds","makeAverageGrade","gradesData","map","gradeData","evaluationCriterionId","grade","averageGrade","evaluationCriterionForGrade","unsafeFind","ec","gradeValue","gradeAsPercentage","evaluationCriterion","maxGrade","computeAverageQuizScore","sumOfPercentageScores","quizScore","fractionArray","of_list","split_on_char","numerator","caml_float_of_string","caml_array_get","denominator","reduce","a","b","averageQuizScore","isEmpty","makeFromJs","studentData","team","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar $$String = require(\"bs-platform/lib/js/string.js\");\nvar ArrayUtils = require(\"../../../shared/utils/ArrayUtils.bs.js\");\nvar Caml_array = require(\"bs-platform/lib/js/caml_array.js\");\nvar Caml_format = require(\"bs-platform/lib/js/caml_format.js\");\nvar CoursesReport__EvaluationCriterion = require(\"./CoursesReport__EvaluationCriterion.bs.js\");\n\nfunction id(t) {\n  return t.id;\n}\n\nfunction levelId(t) {\n  return t.levelId;\n}\n\nfunction evaluationCriteria(t) {\n  return t.evaluationCriteria;\n}\n\nfunction totalTargets(t) {\n  return t.totalTargets;\n}\n\nfunction targetsCompleted(t) {\n  return t.targetsCompleted;\n}\n\nfunction quizzesAttempted(t) {\n  return String(t.quizScores.length);\n}\n\nfunction quizScores(t) {\n  return t.quizScores;\n}\n\nfunction averageGrades(t) {\n  return t.averageGrades;\n}\n\nfunction completedLevelIds(t) {\n  return t.completedLevelIds;\n}\n\nfunction makeAverageGrade(gradesData) {\n  return gradesData.map((function (gradeData) {\n                return {\n                        evaluationCriterionId: gradeData.evaluationCriterionId,\n                        grade: gradeData.averageGrade\n                      };\n              }));\n}\n\nfunction evaluationCriterionForGrade(grade, evaluationCriteria) {\n  return ArrayUtils.unsafeFind((function (ec) {\n                return CoursesReport__EvaluationCriterion.id(ec) === grade.evaluationCriterionId;\n              }), \"Unable to find evaluation criterion with id: \" + (grade.evaluationCriterionId + \" in component: CoursesReport__Overview\"), evaluationCriteria);\n}\n\nfunction gradeValue(averageGrade) {\n  return averageGrade.grade;\n}\n\nfunction gradeAsPercentage(averageGrade, evaluationCriterion) {\n  var maxGrade = evaluationCriterion.maxGrade;\n  return String(averageGrade.grade / maxGrade * 100.0 | 0);\n}\n\nfunction computeAverageQuizScore(quizScores) {\n  var sumOfPercentageScores = $$Array.map((function (quizScore) {\n            var fractionArray = $$Array.of_list($$String.split_on_char(/* \"/\" */47, quizScore));\n            var numerator = Caml_format.caml_float_of_string(Caml_array.caml_array_get(fractionArray, 0));\n            var denominator = Caml_format.caml_float_of_string(Caml_array.caml_array_get(fractionArray, 1));\n            return numerator / denominator * 100.0;\n          }), quizScores).reduce((function (a, b) {\n          return a + b;\n        }), 0.0);\n  return sumOfPercentageScores / quizScores.length;\n}\n\nfunction averageQuizScore(t) {\n  if (ArrayUtils.isEmpty(t.quizScores)) {\n    return ;\n  } else {\n    return computeAverageQuizScore(t.quizScores);\n  }\n}\n\nfunction makeFromJs(id, studentData) {\n  return {\n          id: id,\n          evaluationCriteria: CoursesReport__EvaluationCriterion.makeFromJs(studentData.evaluationCriteria),\n          levelId: studentData.team.levelId,\n          totalTargets: studentData.totalTargets,\n          targetsCompleted: studentData.targetsCompleted,\n          quizScores: studentData.quizScores,\n          averageGrades: makeAverageGrade(studentData.averageGrades),\n          completedLevelIds: studentData.completedLevelIds\n        };\n}\n\nexports.id = id;\nexports.levelId = levelId;\nexports.evaluationCriteria = evaluationCriteria;\nexports.totalTargets = totalTargets;\nexports.targetsCompleted = targetsCompleted;\nexports.quizzesAttempted = quizzesAttempted;\nexports.quizScores = quizScores;\nexports.averageGrades = averageGrades;\nexports.completedLevelIds = completedLevelIds;\nexports.makeAverageGrade = makeAverageGrade;\nexports.evaluationCriterionForGrade = evaluationCriterionForGrade;\nexports.gradeValue = gradeValue;\nexports.gradeAsPercentage = gradeAsPercentage;\nexports.computeAverageQuizScore = computeAverageQuizScore;\nexports.averageQuizScore = averageQuizScore;\nexports.makeFromJs = makeFromJs;\n/* ArrayUtils Not a pure module */\n"]},"metadata":{},"sourceType":"module"}