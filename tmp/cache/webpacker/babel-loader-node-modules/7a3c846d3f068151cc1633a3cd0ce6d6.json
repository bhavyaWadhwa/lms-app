{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar User = require(\"../../shared/types/User.bs.js\");\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar React = require(\"react\");\n\nvar Avatar = require(\"../../shared/Avatar.bs.js\");\n\nvar Js_exn = require(\"bs-platform/lib/js/js_exn.js\");\n\nvar PfIcon = require(\"../../packages/pf-icon/src/PfIcon.bs.js\");\n\nvar $$String = require(\"bs-platform/lib/js/string.js\");\n\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\n\nvar Js_json = require(\"bs-platform/lib/js/js_json.js\");\n\nvar Js_option = require(\"bs-platform/lib/js/js_option.js\");\n\nvar ArrayUtils = require(\"../../shared/utils/ArrayUtils.bs.js\");\n\nvar Belt_Option = require(\"bs-platform/lib/js/belt_Option.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar OptionUtils = require(\"../../shared/utils/OptionUtils.bs.js\");\n\nvar GraphqlQuery = require(\"../../shared/utils/GraphqlQuery.bs.js\");\n\nvar $$Notification = require(\"../../shared/Notification.bs.js\");\n\nvar MarkdownBlock = require(\"../../shared/components/MarkdownBlock.bs.js\");\n\nvar DisablingCover = require(\"../../shared/components/DisablingCover.bs.js\");\n\nvar MarkdownEditor = require(\"../../shared/components/MarkdownEditor.bs.js\");\n\nvar TopicsShow__Post = require(\"../types/TopicsShow__Post.bs.js\");\n\nvar TopicsShow__Topic = require(\"../types/TopicsShow__Topic.bs.js\");\n\nfunction str(prim) {\n  return prim;\n}\n\nvar ppx_printed_query = \"mutation CreatePostMutation($body: String!, $topicId: ID!, $replyToPostId: ID)  {\\ncreatePost(body: $body, topicId: $topicId, replyToPostId: $replyToPostId)  {\\npostId  \\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"createPost\");\n  var tmp;\n\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"postId\");\n    var tmp$1;\n\n    if (match$1 !== undefined) {\n      var value$3 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_json.decodeNull(value$3);\n\n      if (match$2 !== undefined) {\n        tmp$1 = undefined;\n      } else {\n        var match$3 = Js_json.decodeString(value$3);\n        tmp$1 = match$3 !== undefined ? match$3 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$3));\n      }\n    } else {\n      tmp$1 = undefined;\n    }\n\n    tmp = {\n      postId: tmp$1\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field createPost on type Mutation is missing\");\n  }\n\n  return {\n    createPost: tmp\n  };\n}\n\nfunction make(body, topicId, replyToPostId, param) {\n  return {\n    query: ppx_printed_query,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"body\", body],\n    /* tuple */\n    [\"topicId\", topicId],\n    /* tuple */\n    [\"replyToPostId\", replyToPostId !== undefined ? replyToPostId : null]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse\n  };\n}\n\nfunction makeWithVariables(variables) {\n  var body = variables.body;\n  var topicId = variables.topicId;\n  var replyToPostId = variables.replyToPostId;\n  return {\n    query: ppx_printed_query,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"body\", body],\n    /* tuple */\n    [\"topicId\", topicId],\n    /* tuple */\n    [\"replyToPostId\", replyToPostId !== undefined ? replyToPostId : null]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse\n  };\n}\n\nfunction makeVariables(body, topicId, replyToPostId, param) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"body\", body],\n  /* tuple */\n  [\"topicId\", topicId],\n  /* tuple */\n  [\"replyToPostId\", replyToPostId !== undefined ? replyToPostId : null]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn, body, topicId, replyToPostId, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n  /* tuple */\n  [\"body\", body],\n  /* tuple */\n  [\"topicId\", topicId],\n  /* tuple */\n  [\"replyToPostId\", replyToPostId !== undefined ? replyToPostId : null]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  })));\n}\n\nvar definition =\n/* tuple */\n[parse, ppx_printed_query, definition_002];\n\nfunction ret_type(f) {\n  return {};\n}\n\nvar MT_Ret = {};\nvar CreatePostQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\nvar ppx_printed_query$1 = \"mutation UpdatePostMutation($id: ID!, $body: String!)  {\\nupdatePost(id: $id, body: $body)  {\\nsuccess  \\n}\\n\\n}\\n\";\n\nfunction parse$1(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"updatePost\");\n  var tmp;\n\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"success\");\n    var tmp$1;\n\n    if (match$1 !== undefined) {\n      var value$3 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_json.decodeBoolean(value$3);\n      tmp$1 = match$2 !== undefined ? match$2 : Js_exn.raiseError(\"graphql_ppx: Expected boolean, got \" + JSON.stringify(value$3));\n    } else {\n      tmp$1 = Js_exn.raiseError(\"graphql_ppx: Field success on type UpdatePostPayload is missing\");\n    }\n\n    tmp = {\n      success: tmp$1\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field updatePost on type Mutation is missing\");\n  }\n\n  return {\n    updatePost: tmp\n  };\n}\n\nfunction make$1(id, body, param) {\n  return {\n    query: ppx_printed_query$1,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"id\", id],\n    /* tuple */\n    [\"body\", body]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse$1\n  };\n}\n\nfunction makeWithVariables$1(variables) {\n  var id = variables.id;\n  var body = variables.body;\n  return {\n    query: ppx_printed_query$1,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"id\", id],\n    /* tuple */\n    [\"body\", body]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse$1\n  };\n}\n\nfunction makeVariables$1(id, body, param) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"id\", id],\n  /* tuple */\n  [\"body\", body]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction definition_002$1(graphql_ppx_use_json_variables_fn, id, body, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n  /* tuple */\n  [\"id\", id],\n  /* tuple */\n  [\"body\", body]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  })));\n}\n\nvar definition$1 =\n/* tuple */\n[parse$1, ppx_printed_query$1, definition_002$1];\n\nfunction ret_type$1(f) {\n  return {};\n}\n\nvar MT_Ret$1 = {};\nvar UpdatePostQuery = {\n  ppx_printed_query: ppx_printed_query$1,\n  query: ppx_printed_query$1,\n  parse: parse$1,\n  make: make$1,\n  makeWithVariables: makeWithVariables$1,\n  makeVariables: makeVariables$1,\n  definition: definition$1,\n  ret_type: ret_type$1,\n  MT_Ret: MT_Ret$1\n};\nvar dateTime = new Date();\n\nfunction handlePostCreateResponse(id, body, postNumber, currentUserId, setState, handlePostCB) {\n  var post = TopicsShow__Post.make(id, body, currentUserId, undefined, postNumber, dateTime, dateTime, 0, false, [], false);\n\n  Curry._1(setState, function (param) {\n    return {\n      body: \"\",\n      saving: false\n    };\n  });\n\n  return Curry._1(handlePostCB, post);\n}\n\nfunction handlePostUpdateResponse(id, body, currentUserId, setState, handleCloseCB, handlePostCB, post) {\n  var updatedPost = TopicsShow__Post.make(id, body, TopicsShow__Post.creatorId(post), currentUserId, TopicsShow__Post.postNumber(post), TopicsShow__Post.createdAt(post), dateTime, TopicsShow__Post.totalLikes(post), TopicsShow__Post.likedByUser(post), TopicsShow__Post.replies(post), TopicsShow__Post.solution(post));\n\n  Curry._1(setState, function (param) {\n    return {\n      body: \"\",\n      saving: false\n    };\n  });\n\n  OptionUtils.mapWithDefault(function (cb) {\n    return Curry._1(cb,\n    /* () */\n    0);\n  },\n  /* () */\n  0, handleCloseCB);\n  return Curry._1(handlePostCB, updatedPost);\n}\n\nfunction savePost(body, topic, setState, currentUserId, replyToPostId, handlePostCB, post, postNumber, handleCloseCB, $$event) {\n  $$event.preventDefault();\n\n  if (body !== \"\") {\n    Curry._1(setState, function (state) {\n      return {\n        body: state.body,\n        saving: true\n      };\n    });\n\n    if (post !== undefined) {\n      var post$1 = post;\n      var postId = TopicsShow__Post.id(post$1);\n      (function (eta) {\n        return GraphqlQuery.sendQuery(undefined, eta);\n      })(make$1(postId, body,\n      /* () */\n      0)).then(function (response) {\n        if (response.updatePost.success) {\n          handlePostUpdateResponse(postId, body, currentUserId, setState, handleCloseCB, handlePostCB, post$1);\n        } else {\n          Curry._1(setState, function (state) {\n            return {\n              body: state.body,\n              saving: false\n            };\n          });\n        }\n\n        return Promise.resolve(\n        /* () */\n        0);\n      })[\"catch\"](function (param) {\n        Curry._1(setState, function (state) {\n          return {\n            body: state.body,\n            saving: false\n          };\n        });\n\n        return Promise.resolve(\n        /* () */\n        0);\n      });\n      return (\n        /* () */\n        0\n      );\n    } else {\n      (function (eta) {\n        return GraphqlQuery.sendQuery(undefined, eta);\n      })(make(body, TopicsShow__Topic.id(topic), replyToPostId,\n      /* () */\n      0)).then(function (response) {\n        var match = response.createPost.postId;\n\n        if (match !== undefined) {\n          handlePostCreateResponse(match, body, postNumber, currentUserId, setState, handlePostCB);\n        } else {\n          Curry._1(setState, function (state) {\n            return {\n              body: state.body,\n              saving: false\n            };\n          });\n        }\n\n        return Promise.resolve(\n        /* () */\n        0);\n      })[\"catch\"](function (param) {\n        Curry._1(setState, function (state) {\n          return {\n            body: state.body,\n            saving: false\n          };\n        });\n\n        return Promise.resolve(\n        /* () */\n        0);\n      });\n      return (\n        /* () */\n        0\n      );\n    }\n  } else {\n    return $$Notification.error(\"Empty\", \"Reply cant be blank\");\n  }\n}\n\nfunction onBorderAnimationEnd($$event) {\n  var element = $$event.target;\n  element.className = \"w-full flex flex-col\";\n  return (\n    /* () */\n    0\n  );\n}\n\nfunction replyToUserInfo(user) {\n  var match = User.avatarUrl(user);\n  return React.createElement(\"div\", {\n    className: \"flex items-center border bg-white px-2 py-1 rounded-lg\"\n  }, match !== undefined ? React.createElement(\"img\", {\n    className: \"w-6 h-6 text-xs border border-gray-400 rounded-full overflow-hidden flex-shrink-0 object-cover\",\n    src: match\n  }) : React.createElement(Avatar.make, {\n    name: User.name(user),\n    className: \"w-6 h-6 text-xs border border-gray-400 rounded-full overflow-hidden flex-shrink-0 object-cover\"\n  }), React.createElement(\"span\", {\n    className: \"text-xs font-semibold ml-2\"\n  }, User.name(user)));\n}\n\nfunction TopicsShow__PostEditor(Props) {\n  var id = Props.id;\n  var topic = Props.topic;\n  var currentUserId = Props.currentUserId;\n  var handlePostCB = Props.handlePostCB;\n  var replies = Props.replies;\n  var users = Props.users;\n  var replyToPostId = Props.replyToPostId;\n  var post = Props.post;\n  var handleCloseCB = Props.handleCloseCB;\n  var removeReplyToPostCB = Props.removeReplyToPostCB;\n  var match = React.useState(function () {\n    return {\n      body: post !== undefined ? TopicsShow__Post.body(post) : \"\",\n      saving: false\n    };\n  });\n  var setState = match[1];\n  var state = match[0];\n\n  var updateMarkdownCB = function updateMarkdownCB(body) {\n    return Curry._1(setState, function (state) {\n      return {\n        body: body,\n        saving: state.saving\n      };\n    });\n  };\n\n  var tmp;\n\n  if (handleCloseCB !== undefined) {\n    var handleCloseCB$1 = handleCloseCB;\n    tmp = React.createElement(\"button\", {\n      className: \"btn btn-subtle mr-2\",\n      disabled: state.saving,\n      onClick: function onClick(param) {\n        return Curry._1(handleCloseCB$1,\n        /* () */\n        0);\n      }\n    }, \"Cancel\");\n  } else {\n    tmp = null;\n  }\n\n  var newPostNumber = ArrayUtils.isNotEmpty(replies) ? TopicsShow__Post.highestPostNumber(replies) + 1 | 0 : 2;\n  var partial_arg = state.body;\n  return React.createElement(DisablingCover.make, {\n    disabled: state.saving,\n    children: React.createElement(\"div\", {\n      \"aria-label\": \"Add new reply\",\n      className: \"py-2 lg:px-0 max-w-4xl w-full flex mx-auto items-center justify-center relative\"\n    }, React.createElement(\"div\", {\n      className: \"flex w-full\"\n    }, React.createElement(\"div\", {\n      className: \"w-full flex flex-col\",\n      id: id,\n      onAnimationEnd: onBorderAnimationEnd\n    }, React.createElement(\"label\", {\n      className: \"inline-block tracking-wide text-gray-900 text-sm font-semibold mb-2\",\n      htmlFor: \"new-reply\"\n    }, replyToPostId !== undefined ? \"Reply To\" : \"Your Reply\"), Belt_Option.mapWithDefault(Belt_Option.flatMap(replyToPostId, function (postId) {\n      return Caml_option.undefined_to_opt(replies.find(function (reply) {\n        return postId === TopicsShow__Post.id(reply);\n      }));\n    }), null, function (reply) {\n      return React.createElement(\"div\", {\n        className: \"max-w-md rounded border border-primary-200 p-3 bg-gray-200 mb-3\"\n      }, React.createElement(\"div\", {\n        className: \"flex justify-between\"\n      }, replyToUserInfo(TopicsShow__Post.user(users, reply)), React.createElement(\"div\", {\n        className: \"flex w-6 h-6 p-2 items-center justify-center cursor-pointer border border-gray-400 rounded bg-gray-200 hover:bg-gray-400\",\n        onClick: function onClick(param) {\n          return OptionUtils.mapWithDefault(function (cb) {\n            return Curry._1(cb,\n            /* () */\n            0);\n          },\n          /* () */\n          0, removeReplyToPostCB);\n        }\n      }, React.createElement(PfIcon.make, {\n        className: \"if i-times-regular text-base\"\n      }))), React.createElement(\"p\", {\n        className: \"text-sm pt-2 max-w-sm\"\n      }, React.createElement(MarkdownBlock.make, {\n        markdown: TopicsShow__Post.body(reply),\n        className: \"leading-normal text-sm truncate\",\n        profile:\n        /* QuestionAndAnswer */\n        1\n      })));\n    }), React.createElement(\"div\", undefined, React.createElement(MarkdownEditor.make, {\n      value: state.body,\n      onChange: updateMarkdownCB,\n      profile:\n      /* QuestionAndAnswer */\n      1,\n      textareaId: \"new-reply\",\n      maxLength: 10000,\n      placeholder: \"Type in your reply. You can use Markdown to format your response.\"\n    })), React.createElement(\"div\", {\n      className: \"flex justify-end pt-3\"\n    }, tmp, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      disabled: state.saving || $$String.trim(state.body) === \"\",\n      onClick: function onClick(param) {\n        return savePost(partial_arg, topic, setState, currentUserId, replyToPostId, handlePostCB, post, newPostNumber, handleCloseCB, param);\n      }\n    }, post !== undefined ? TopicsShow__Post.postNumber(post) === 1 ? \"Update Post\" : \"Update Reply\" : \"Post Your Reply\")))))\n  });\n}\n\nvar make$2 = TopicsShow__PostEditor;\nexports.str = str;\nexports.CreatePostQuery = CreatePostQuery;\nexports.UpdatePostQuery = UpdatePostQuery;\nexports.dateTime = dateTime;\nexports.handlePostCreateResponse = handlePostCreateResponse;\nexports.handlePostUpdateResponse = handlePostUpdateResponse;\nexports.savePost = savePost;\nexports.onBorderAnimationEnd = onBorderAnimationEnd;\nexports.replyToUserInfo = replyToUserInfo;\nexports.make = make$2;\n/* dateTime Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/topics/components/TopicsShow__PostEditor.bs.js"],"names":["User","require","Curry","React","Avatar","Js_exn","PfIcon","$$String","Js_dict","Js_json","Js_option","ArrayUtils","Belt_Option","Caml_option","OptionUtils","GraphqlQuery","$$Notification","MarkdownBlock","DisablingCover","MarkdownEditor","TopicsShow__Post","TopicsShow__Topic","str","prim","ppx_printed_query","parse","value","value$1","getExn","decodeObject","match","get","tmp","undefined","value$2","valFromOption","match$1","tmp$1","value$3","match$2","decodeNull","match$3","decodeString","raiseError","JSON","stringify","postId","createPost","make","body","topicId","replyToPostId","param","query","variables","fromArray","filter","test","makeWithVariables","makeVariables","definition_002","graphql_ppx_use_json_variables_fn","_1","definition","ret_type","f","MT_Ret","CreatePostQuery","ppx_printed_query$1","parse$1","decodeBoolean","success","updatePost","make$1","id","makeWithVariables$1","makeVariables$1","definition_002$1","definition$1","ret_type$1","MT_Ret$1","UpdatePostQuery","dateTime","Date","handlePostCreateResponse","postNumber","currentUserId","setState","handlePostCB","post","saving","handlePostUpdateResponse","handleCloseCB","updatedPost","creatorId","createdAt","totalLikes","likedByUser","replies","solution","mapWithDefault","cb","savePost","topic","$$event","preventDefault","state","post$1","eta","sendQuery","then","response","Promise","resolve","error","onBorderAnimationEnd","element","target","className","replyToUserInfo","user","avatarUrl","createElement","src","name","TopicsShow__PostEditor","Props","users","removeReplyToPostCB","useState","updateMarkdownCB","handleCloseCB$1","disabled","onClick","newPostNumber","isNotEmpty","highestPostNumber","partial_arg","children","onAnimationEnd","htmlFor","flatMap","undefined_to_opt","find","reply","markdown","profile","onChange","textareaId","maxLength","placeholder","trim","make$2","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar User = require(\"../../shared/types/User.bs.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Avatar = require(\"../../shared/Avatar.bs.js\");\nvar Js_exn = require(\"bs-platform/lib/js/js_exn.js\");\nvar PfIcon = require(\"../../packages/pf-icon/src/PfIcon.bs.js\");\nvar $$String = require(\"bs-platform/lib/js/string.js\");\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\nvar Js_json = require(\"bs-platform/lib/js/js_json.js\");\nvar Js_option = require(\"bs-platform/lib/js/js_option.js\");\nvar ArrayUtils = require(\"../../shared/utils/ArrayUtils.bs.js\");\nvar Belt_Option = require(\"bs-platform/lib/js/belt_Option.js\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar OptionUtils = require(\"../../shared/utils/OptionUtils.bs.js\");\nvar GraphqlQuery = require(\"../../shared/utils/GraphqlQuery.bs.js\");\nvar $$Notification = require(\"../../shared/Notification.bs.js\");\nvar MarkdownBlock = require(\"../../shared/components/MarkdownBlock.bs.js\");\nvar DisablingCover = require(\"../../shared/components/DisablingCover.bs.js\");\nvar MarkdownEditor = require(\"../../shared/components/MarkdownEditor.bs.js\");\nvar TopicsShow__Post = require(\"../types/TopicsShow__Post.bs.js\");\nvar TopicsShow__Topic = require(\"../types/TopicsShow__Topic.bs.js\");\n\nfunction str(prim) {\n  return prim;\n}\n\nvar ppx_printed_query = \"mutation CreatePostMutation($body: String!, $topicId: ID!, $replyToPostId: ID)  {\\ncreatePost(body: $body, topicId: $topicId, replyToPostId: $replyToPostId)  {\\npostId  \\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"createPost\");\n  var tmp;\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"postId\");\n    var tmp$1;\n    if (match$1 !== undefined) {\n      var value$3 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_json.decodeNull(value$3);\n      if (match$2 !== undefined) {\n        tmp$1 = undefined;\n      } else {\n        var match$3 = Js_json.decodeString(value$3);\n        tmp$1 = match$3 !== undefined ? match$3 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$3));\n      }\n    } else {\n      tmp$1 = undefined;\n    }\n    tmp = {\n      postId: tmp$1\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field createPost on type Mutation is missing\");\n  }\n  return {\n          createPost: tmp\n        };\n}\n\nfunction make(body, topicId, replyToPostId, param) {\n  return {\n          query: ppx_printed_query,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"body\",\n                    body\n                  ],\n                  /* tuple */[\n                    \"topicId\",\n                    topicId\n                  ],\n                  /* tuple */[\n                    \"replyToPostId\",\n                    replyToPostId !== undefined ? replyToPostId : null\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse\n        };\n}\n\nfunction makeWithVariables(variables) {\n  var body = variables.body;\n  var topicId = variables.topicId;\n  var replyToPostId = variables.replyToPostId;\n  return {\n          query: ppx_printed_query,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"body\",\n                    body\n                  ],\n                  /* tuple */[\n                    \"topicId\",\n                    topicId\n                  ],\n                  /* tuple */[\n                    \"replyToPostId\",\n                    replyToPostId !== undefined ? replyToPostId : null\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse\n        };\n}\n\nfunction makeVariables(body, topicId, replyToPostId, param) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"body\",\n                  body\n                ],\n                /* tuple */[\n                  \"topicId\",\n                  topicId\n                ],\n                /* tuple */[\n                  \"replyToPostId\",\n                  replyToPostId !== undefined ? replyToPostId : null\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn, body, topicId, replyToPostId, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n                    /* tuple */[\n                      \"body\",\n                      body\n                    ],\n                    /* tuple */[\n                      \"topicId\",\n                      topicId\n                    ],\n                    /* tuple */[\n                      \"replyToPostId\",\n                      replyToPostId !== undefined ? replyToPostId : null\n                    ]\n                  ].filter((function (param) {\n                        return !Js_json.test(param[1], /* Null */5);\n                      }))));\n}\n\nvar definition = /* tuple */[\n  parse,\n  ppx_printed_query,\n  definition_002\n];\n\nfunction ret_type(f) {\n  return { };\n}\n\nvar MT_Ret = { };\n\nvar CreatePostQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\n\nvar ppx_printed_query$1 = \"mutation UpdatePostMutation($id: ID!, $body: String!)  {\\nupdatePost(id: $id, body: $body)  {\\nsuccess  \\n}\\n\\n}\\n\";\n\nfunction parse$1(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"updatePost\");\n  var tmp;\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"success\");\n    var tmp$1;\n    if (match$1 !== undefined) {\n      var value$3 = Caml_option.valFromOption(match$1);\n      var match$2 = Js_json.decodeBoolean(value$3);\n      tmp$1 = match$2 !== undefined ? match$2 : Js_exn.raiseError(\"graphql_ppx: Expected boolean, got \" + JSON.stringify(value$3));\n    } else {\n      tmp$1 = Js_exn.raiseError(\"graphql_ppx: Field success on type UpdatePostPayload is missing\");\n    }\n    tmp = {\n      success: tmp$1\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field updatePost on type Mutation is missing\");\n  }\n  return {\n          updatePost: tmp\n        };\n}\n\nfunction make$1(id, body, param) {\n  return {\n          query: ppx_printed_query$1,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"id\",\n                    id\n                  ],\n                  /* tuple */[\n                    \"body\",\n                    body\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse$1\n        };\n}\n\nfunction makeWithVariables$1(variables) {\n  var id = variables.id;\n  var body = variables.body;\n  return {\n          query: ppx_printed_query$1,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"id\",\n                    id\n                  ],\n                  /* tuple */[\n                    \"body\",\n                    body\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse$1\n        };\n}\n\nfunction makeVariables$1(id, body, param) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"id\",\n                  id\n                ],\n                /* tuple */[\n                  \"body\",\n                  body\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction definition_002$1(graphql_ppx_use_json_variables_fn, id, body, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n                    /* tuple */[\n                      \"id\",\n                      id\n                    ],\n                    /* tuple */[\n                      \"body\",\n                      body\n                    ]\n                  ].filter((function (param) {\n                        return !Js_json.test(param[1], /* Null */5);\n                      }))));\n}\n\nvar definition$1 = /* tuple */[\n  parse$1,\n  ppx_printed_query$1,\n  definition_002$1\n];\n\nfunction ret_type$1(f) {\n  return { };\n}\n\nvar MT_Ret$1 = { };\n\nvar UpdatePostQuery = {\n  ppx_printed_query: ppx_printed_query$1,\n  query: ppx_printed_query$1,\n  parse: parse$1,\n  make: make$1,\n  makeWithVariables: makeWithVariables$1,\n  makeVariables: makeVariables$1,\n  definition: definition$1,\n  ret_type: ret_type$1,\n  MT_Ret: MT_Ret$1\n};\n\nvar dateTime = new Date();\n\nfunction handlePostCreateResponse(id, body, postNumber, currentUserId, setState, handlePostCB) {\n  var post = TopicsShow__Post.make(id, body, currentUserId, undefined, postNumber, dateTime, dateTime, 0, false, [], false);\n  Curry._1(setState, (function (param) {\n          return {\n                  body: \"\",\n                  saving: false\n                };\n        }));\n  return Curry._1(handlePostCB, post);\n}\n\nfunction handlePostUpdateResponse(id, body, currentUserId, setState, handleCloseCB, handlePostCB, post) {\n  var updatedPost = TopicsShow__Post.make(id, body, TopicsShow__Post.creatorId(post), currentUserId, TopicsShow__Post.postNumber(post), TopicsShow__Post.createdAt(post), dateTime, TopicsShow__Post.totalLikes(post), TopicsShow__Post.likedByUser(post), TopicsShow__Post.replies(post), TopicsShow__Post.solution(post));\n  Curry._1(setState, (function (param) {\n          return {\n                  body: \"\",\n                  saving: false\n                };\n        }));\n  OptionUtils.mapWithDefault((function (cb) {\n          return Curry._1(cb, /* () */0);\n        }), /* () */0, handleCloseCB);\n  return Curry._1(handlePostCB, updatedPost);\n}\n\nfunction savePost(body, topic, setState, currentUserId, replyToPostId, handlePostCB, post, postNumber, handleCloseCB, $$event) {\n  $$event.preventDefault();\n  if (body !== \"\") {\n    Curry._1(setState, (function (state) {\n            return {\n                    body: state.body,\n                    saving: true\n                  };\n          }));\n    if (post !== undefined) {\n      var post$1 = post;\n      var postId = TopicsShow__Post.id(post$1);\n      (function (eta) {\n                return GraphqlQuery.sendQuery(undefined, eta);\n              })(make$1(postId, body, /* () */0)).then((function (response) {\n                if (response.updatePost.success) {\n                  handlePostUpdateResponse(postId, body, currentUserId, setState, handleCloseCB, handlePostCB, post$1);\n                } else {\n                  Curry._1(setState, (function (state) {\n                          return {\n                                  body: state.body,\n                                  saving: false\n                                };\n                        }));\n                }\n                return Promise.resolve(/* () */0);\n              })).catch((function (param) {\n              Curry._1(setState, (function (state) {\n                      return {\n                              body: state.body,\n                              saving: false\n                            };\n                    }));\n              return Promise.resolve(/* () */0);\n            }));\n      return /* () */0;\n    } else {\n      (function (eta) {\n                return GraphqlQuery.sendQuery(undefined, eta);\n              })(make(body, TopicsShow__Topic.id(topic), replyToPostId, /* () */0)).then((function (response) {\n                var match = response.createPost.postId;\n                if (match !== undefined) {\n                  handlePostCreateResponse(match, body, postNumber, currentUserId, setState, handlePostCB);\n                } else {\n                  Curry._1(setState, (function (state) {\n                          return {\n                                  body: state.body,\n                                  saving: false\n                                };\n                        }));\n                }\n                return Promise.resolve(/* () */0);\n              })).catch((function (param) {\n              Curry._1(setState, (function (state) {\n                      return {\n                              body: state.body,\n                              saving: false\n                            };\n                    }));\n              return Promise.resolve(/* () */0);\n            }));\n      return /* () */0;\n    }\n  } else {\n    return $$Notification.error(\"Empty\", \"Reply cant be blank\");\n  }\n}\n\nfunction onBorderAnimationEnd($$event) {\n  var element = $$event.target;\n  element.className = \"w-full flex flex-col\";\n  return /* () */0;\n}\n\nfunction replyToUserInfo(user) {\n  var match = User.avatarUrl(user);\n  return React.createElement(\"div\", {\n              className: \"flex items-center border bg-white px-2 py-1 rounded-lg\"\n            }, match !== undefined ? React.createElement(\"img\", {\n                    className: \"w-6 h-6 text-xs border border-gray-400 rounded-full overflow-hidden flex-shrink-0 object-cover\",\n                    src: match\n                  }) : React.createElement(Avatar.make, {\n                    name: User.name(user),\n                    className: \"w-6 h-6 text-xs border border-gray-400 rounded-full overflow-hidden flex-shrink-0 object-cover\"\n                  }), React.createElement(\"span\", {\n                  className: \"text-xs font-semibold ml-2\"\n                }, User.name(user)));\n}\n\nfunction TopicsShow__PostEditor(Props) {\n  var id = Props.id;\n  var topic = Props.topic;\n  var currentUserId = Props.currentUserId;\n  var handlePostCB = Props.handlePostCB;\n  var replies = Props.replies;\n  var users = Props.users;\n  var replyToPostId = Props.replyToPostId;\n  var post = Props.post;\n  var handleCloseCB = Props.handleCloseCB;\n  var removeReplyToPostCB = Props.removeReplyToPostCB;\n  var match = React.useState((function () {\n          return {\n                  body: post !== undefined ? TopicsShow__Post.body(post) : \"\",\n                  saving: false\n                };\n        }));\n  var setState = match[1];\n  var state = match[0];\n  var updateMarkdownCB = function (body) {\n    return Curry._1(setState, (function (state) {\n                  return {\n                          body: body,\n                          saving: state.saving\n                        };\n                }));\n  };\n  var tmp;\n  if (handleCloseCB !== undefined) {\n    var handleCloseCB$1 = handleCloseCB;\n    tmp = React.createElement(\"button\", {\n          className: \"btn btn-subtle mr-2\",\n          disabled: state.saving,\n          onClick: (function (param) {\n              return Curry._1(handleCloseCB$1, /* () */0);\n            })\n        }, \"Cancel\");\n  } else {\n    tmp = null;\n  }\n  var newPostNumber = ArrayUtils.isNotEmpty(replies) ? TopicsShow__Post.highestPostNumber(replies) + 1 | 0 : 2;\n  var partial_arg = state.body;\n  return React.createElement(DisablingCover.make, {\n              disabled: state.saving,\n              children: React.createElement(\"div\", {\n                    \"aria-label\": \"Add new reply\",\n                    className: \"py-2 lg:px-0 max-w-4xl w-full flex mx-auto items-center justify-center relative\"\n                  }, React.createElement(\"div\", {\n                        className: \"flex w-full\"\n                      }, React.createElement(\"div\", {\n                            className: \"w-full flex flex-col\",\n                            id: id,\n                            onAnimationEnd: onBorderAnimationEnd\n                          }, React.createElement(\"label\", {\n                                className: \"inline-block tracking-wide text-gray-900 text-sm font-semibold mb-2\",\n                                htmlFor: \"new-reply\"\n                              }, replyToPostId !== undefined ? \"Reply To\" : \"Your Reply\"), Belt_Option.mapWithDefault(Belt_Option.flatMap(replyToPostId, (function (postId) {\n                                      return Caml_option.undefined_to_opt(replies.find((function (reply) {\n                                                        return postId === TopicsShow__Post.id(reply);\n                                                      })));\n                                    })), null, (function (reply) {\n                                  return React.createElement(\"div\", {\n                                              className: \"max-w-md rounded border border-primary-200 p-3 bg-gray-200 mb-3\"\n                                            }, React.createElement(\"div\", {\n                                                  className: \"flex justify-between\"\n                                                }, replyToUserInfo(TopicsShow__Post.user(users, reply)), React.createElement(\"div\", {\n                                                      className: \"flex w-6 h-6 p-2 items-center justify-center cursor-pointer border border-gray-400 rounded bg-gray-200 hover:bg-gray-400\",\n                                                      onClick: (function (param) {\n                                                          return OptionUtils.mapWithDefault((function (cb) {\n                                                                        return Curry._1(cb, /* () */0);\n                                                                      }), /* () */0, removeReplyToPostCB);\n                                                        })\n                                                    }, React.createElement(PfIcon.make, {\n                                                          className: \"if i-times-regular text-base\"\n                                                        }))), React.createElement(\"p\", {\n                                                  className: \"text-sm pt-2 max-w-sm\"\n                                                }, React.createElement(MarkdownBlock.make, {\n                                                      markdown: TopicsShow__Post.body(reply),\n                                                      className: \"leading-normal text-sm truncate\",\n                                                      profile: /* QuestionAndAnswer */1\n                                                    })));\n                                })), React.createElement(\"div\", undefined, React.createElement(MarkdownEditor.make, {\n                                    value: state.body,\n                                    onChange: updateMarkdownCB,\n                                    profile: /* QuestionAndAnswer */1,\n                                    textareaId: \"new-reply\",\n                                    maxLength: 10000,\n                                    placeholder: \"Type in your reply. You can use Markdown to format your response.\"\n                                  })), React.createElement(\"div\", {\n                                className: \"flex justify-end pt-3\"\n                              }, tmp, React.createElement(\"button\", {\n                                    className: \"btn btn-primary\",\n                                    disabled: state.saving || $$String.trim(state.body) === \"\",\n                                    onClick: (function (param) {\n                                        return savePost(partial_arg, topic, setState, currentUserId, replyToPostId, handlePostCB, post, newPostNumber, handleCloseCB, param);\n                                      })\n                                  }, post !== undefined ? (\n                                      TopicsShow__Post.postNumber(post) === 1 ? \"Update Post\" : \"Update Reply\"\n                                    ) : \"Post Your Reply\")))))\n            });\n}\n\nvar make$2 = TopicsShow__PostEditor;\n\nexports.str = str;\nexports.CreatePostQuery = CreatePostQuery;\nexports.UpdatePostQuery = UpdatePostQuery;\nexports.dateTime = dateTime;\nexports.handlePostCreateResponse = handlePostCreateResponse;\nexports.handlePostUpdateResponse = handlePostUpdateResponse;\nexports.savePost = savePost;\nexports.onBorderAnimationEnd = onBorderAnimationEnd;\nexports.replyToUserInfo = replyToUserInfo;\nexports.make = make$2;\n/* dateTime Not a pure module */\n"]},"metadata":{},"sourceType":"module"}