{"ast":null,"code":"import Prism from \"prismjs/components/prism-core\";\n/*\n * Prevent Prism from highlighting all eligible code blocks in the DOM upon\n * page load - its default behavior. It sets up an event listener as soon as\n * its lib code is evaluated, so the only option at this point is to remove\n * the listener.\n */\n\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-markup\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-css\";\nimport \"prismjs/components/prism-scss\";\nimport \"prismjs/components/prism-ruby\";\nimport \"prismjs/components/prism-markup-templating\";\nimport \"prismjs/components/prism-erb\";\nimport \"prismjs/components/prism-reason\";\nimport \"prismjs/components/prism-yaml\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers\";\nimport \"prismjs/plugins/custom-class/prism-custom-class\";\ndocument.removeEventListener(\"DOMContentLoaded\", Prism.highlightAll); // Use the custom-class plugin to instruct Prism to prefix all generated classes with 'prism-'.\n\nPrism.plugins.customClass.prefix(\"prism-\"); // Include a clone of the 'Okaidia' theme CSS with prefixed classes.\n\nrequire(\"./prism-okaidia.css\");\n\nvar highlightAllUnder = function highlightAllUnder(element) {\n  return Prism.highlightAllUnder(element);\n};\n\nexport default highlightAllUnder;","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/shared/utils/prismjsWrapper.js"],"names":["Prism","document","removeEventListener","highlightAll","plugins","customClass","prefix","require","highlightAllUnder","element"],"mappings":"OAAOA,K;AAEP;;;;;;;;;;;;;;;;;;;AAMAC,QAAQ,CAACC,mBAAT,CAA6B,kBAA7B,EAAiDF,KAAK,CAACG,YAAvD,E,CAEA;;AACAH,KAAK,CAACI,OAAN,CAAcC,WAAd,CAA0BC,MAA1B,CAAiC,QAAjC,E,CAEA;;AACAC,OAAO,CAAC,qBAAD,CAAP;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,OAAO;AAAA,SAAIT,KAAK,CAACQ,iBAAN,CAAwBC,OAAxB,CAAJ;AAAA,CAAjC;;AAEA,eAAeD,iBAAf","sourcesContent":["import Prism from \"prismjs\";\n\n/*\n * Prevent Prism from highlighting all eligible code blocks in the DOM upon\n * page load - its default behavior. It sets up an event listener as soon as\n * its lib code is evaluated, so the only option at this point is to remove\n * the listener.\n */\ndocument.removeEventListener(\"DOMContentLoaded\", Prism.highlightAll);\n\n// Use the custom-class plugin to instruct Prism to prefix all generated classes with 'prism-'.\nPrism.plugins.customClass.prefix(\"prism-\");\n\n// Include a clone of the 'Okaidia' theme CSS with prefixed classes.\nrequire(\"./prism-okaidia.css\");\n\nconst highlightAllUnder = element => Prism.highlightAllUnder(element);\n\nexport default highlightAllUnder;\n"]},"metadata":{},"sourceType":"module"}