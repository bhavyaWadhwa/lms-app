{"ast":null,"code":"'use strict';\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar $$AbortController = {};\n\nfunction encodeRequestMethod(param) {\n  if (typeof param === \"number\") {\n    switch (param) {\n      case\n      /* Get */\n      0:\n        return \"GET\";\n\n      case\n      /* Head */\n      1:\n        return \"HEAD\";\n\n      case\n      /* Post */\n      2:\n        return \"POST\";\n\n      case\n      /* Put */\n      3:\n        return \"PUT\";\n\n      case\n      /* Delete */\n      4:\n        return \"DELETE\";\n\n      case\n      /* Connect */\n      5:\n        return \"CONNECT\";\n\n      case\n      /* Options */\n      6:\n        return \"OPTIONS\";\n\n      case\n      /* Trace */\n      7:\n        return \"TRACE\";\n\n      case\n      /* Patch */\n      8:\n        return \"PATCH\";\n    }\n  } else {\n    return param[0];\n  }\n}\n\nfunction encodeReferrerPolicy(param) {\n  switch (param) {\n    case\n    /* None */\n    0:\n      return \"\";\n\n    case\n    /* NoReferrer */\n    1:\n      return \"no-referrer\";\n\n    case\n    /* NoReferrerWhenDowngrade */\n    2:\n      return \"no-referrer-when-downgrade\";\n\n    case\n    /* SameOrigin */\n    3:\n      return \"same-origin\";\n\n    case\n    /* Origin */\n    4:\n      return \"origin\";\n\n    case\n    /* StrictOrigin */\n    5:\n      return \"strict-origin\";\n\n    case\n    /* OriginWhenCrossOrigin */\n    6:\n      return \"origin-when-cross-origin\";\n\n    case\n    /* StrictOriginWhenCrossOrigin */\n    7:\n      return \"strict-origin-when-cross-origin\";\n\n    case\n    /* UnsafeUrl */\n    8:\n      return \"unsafe-url\";\n  }\n}\n\nfunction encodeRequestMode(param) {\n  switch (param) {\n    case\n    /* Navigate */\n    0:\n      return \"navigate\";\n\n    case\n    /* SameOrigin */\n    1:\n      return \"same-origin\";\n\n    case\n    /* NoCORS */\n    2:\n      return \"no-cors\";\n\n    case\n    /* CORS */\n    3:\n      return \"cors\";\n  }\n}\n\nfunction encodeRequestCredentials(param) {\n  switch (param) {\n    case\n    /* Omit */\n    0:\n      return \"omit\";\n\n    case\n    /* SameOrigin */\n    1:\n      return \"same-origin\";\n\n    case\n    /* Include */\n    2:\n      return \"include\";\n  }\n}\n\nfunction encodeRequestCache(param) {\n  switch (param) {\n    case\n    /* Default */\n    0:\n      return \"default\";\n\n    case\n    /* NoStore */\n    1:\n      return \"no-store\";\n\n    case\n    /* Reload */\n    2:\n      return \"reload\";\n\n    case\n    /* NoCache */\n    3:\n      return \"no-cache\";\n\n    case\n    /* ForceCache */\n    4:\n      return \"force-cache\";\n\n    case\n    /* OnlyIfCached */\n    5:\n      return \"only-if-cached\";\n  }\n}\n\nfunction encodeRequestRedirect(param) {\n  switch (param) {\n    case\n    /* Follow */\n    0:\n      return \"follow\";\n\n    case\n    /* Error */\n    1:\n      return \"error\";\n\n    case\n    /* Manual */\n    2:\n      return \"manual\";\n  }\n}\n\nvar HeadersInit = {};\nvar $$Headers = {};\nvar BodyInit = {};\n\nfunction map(f, param) {\n  if (param !== undefined) {\n    return Caml_option.some(Curry._1(f, Caml_option.valFromOption(param)));\n  }\n}\n\nfunction make(method_, headers, body, referrer, referrerPolicyOpt, mode, credentials, cache, redirect, integrityOpt, keepalive, signal) {\n  var referrerPolicy = referrerPolicyOpt !== undefined ? referrerPolicyOpt :\n  /* None */\n  0;\n  var integrity = integrityOpt !== undefined ? integrityOpt : \"\";\n  var partial_arg = integrity;\n  var partial_arg$1 = map(encodeRequestRedirect, redirect);\n  var partial_arg$2 = map(encodeRequestCache, cache);\n  var partial_arg$3 = map(encodeRequestCredentials, credentials);\n  var partial_arg$4 = map(encodeRequestMode, mode);\n  var partial_arg$5 = encodeReferrerPolicy(referrerPolicy);\n  var partial_arg$6 = map(encodeRequestMethod, method_);\n  return function (param) {\n    var tmp = {};\n\n    if (partial_arg$6 !== undefined) {\n      tmp.method = Caml_option.valFromOption(partial_arg$6);\n    }\n\n    if (headers !== undefined) {\n      tmp.headers = Caml_option.valFromOption(headers);\n    }\n\n    if (body !== undefined) {\n      tmp.body = Caml_option.valFromOption(body);\n    }\n\n    if (referrer !== undefined) {\n      tmp.referrer = Caml_option.valFromOption(referrer);\n    }\n\n    if (partial_arg$5 !== undefined) {\n      tmp.referrerPolicy = Caml_option.valFromOption(partial_arg$5);\n    }\n\n    if (partial_arg$4 !== undefined) {\n      tmp.mode = Caml_option.valFromOption(partial_arg$4);\n    }\n\n    if (partial_arg$3 !== undefined) {\n      tmp.credentials = Caml_option.valFromOption(partial_arg$3);\n    }\n\n    if (partial_arg$2 !== undefined) {\n      tmp.cache = Caml_option.valFromOption(partial_arg$2);\n    }\n\n    if (partial_arg$1 !== undefined) {\n      tmp.redirect = Caml_option.valFromOption(partial_arg$1);\n    }\n\n    if (partial_arg !== undefined) {\n      tmp.integrity = Caml_option.valFromOption(partial_arg);\n    }\n\n    if (keepalive !== undefined) {\n      tmp.keepalive = Caml_option.valFromOption(keepalive);\n    }\n\n    if (signal !== undefined) {\n      tmp.signal = Caml_option.valFromOption(signal);\n    }\n\n    return tmp;\n  };\n}\n\nfunction method_(self) {\n  var method_$1 = self.method;\n\n  switch (method_$1) {\n    case \"CONNECT\":\n      return (\n        /* Connect */\n        5\n      );\n\n    case \"DELETE\":\n      return (\n        /* Delete */\n        4\n      );\n\n    case \"GET\":\n      return (\n        /* Get */\n        0\n      );\n\n    case \"HEAD\":\n      return (\n        /* Head */\n        1\n      );\n\n    case \"OPTIONS\":\n      return (\n        /* Options */\n        6\n      );\n\n    case \"PATCH\":\n      return (\n        /* Patch */\n        8\n      );\n\n    case \"POST\":\n      return (\n        /* Post */\n        2\n      );\n\n    case \"PUT\":\n      return (\n        /* Put */\n        3\n      );\n\n    case \"TRACE\":\n      return (\n        /* Trace */\n        7\n      );\n\n    default:\n      return (\n        /* Other */\n        [method_$1]\n      );\n  }\n}\n\nfunction type_(self) {\n  var e = self.type;\n\n  switch (e) {\n    case \"\":\n      return (\n        /* None */\n        0\n      );\n\n    case \"audio\":\n      return (\n        /* Audio */\n        1\n      );\n\n    case \"font\":\n      return (\n        /* Font */\n        2\n      );\n\n    case \"image\":\n      return (\n        /* Image */\n        3\n      );\n\n    case \"script\":\n      return (\n        /* Script */\n        4\n      );\n\n    case \"style\":\n      return (\n        /* Style */\n        5\n      );\n\n    case \"track\":\n      return (\n        /* Track */\n        6\n      );\n\n    case \"video\":\n      return (\n        /* Video */\n        7\n      );\n\n    default:\n      throw [Caml_builtin_exceptions.failure, \"Unknown requestType: \" + e];\n  }\n}\n\nfunction destination(self) {\n  var e = self.destination;\n\n  switch (e) {\n    case \"\":\n      return (\n        /* None */\n        0\n      );\n\n    case \"document\":\n      return (\n        /* Document */\n        1\n      );\n\n    case \"embed\":\n      return (\n        /* Embed */\n        2\n      );\n\n    case \"font\":\n      return (\n        /* Font */\n        3\n      );\n\n    case \"image\":\n      return (\n        /* Image */\n        4\n      );\n\n    case \"manifest\":\n      return (\n        /* Manifest */\n        5\n      );\n\n    case \"media\":\n      return (\n        /* Media */\n        6\n      );\n\n    case \"object\":\n      return (\n        /* Object */\n        7\n      );\n\n    case \"report\":\n      return (\n        /* Report */\n        8\n      );\n\n    case \"script\":\n      return (\n        /* Script */\n        9\n      );\n\n    case \"serviceworker\":\n      return (\n        /* ServiceWorker */\n        10\n      );\n\n    case \"sharedworder\":\n      return (\n        /* SharedWorker */\n        11\n      );\n\n    case \"style\":\n      return (\n        /* Style */\n        12\n      );\n\n    case \"worker\":\n      return (\n        /* Worker */\n        13\n      );\n\n    case \"xslt\":\n      return (\n        /* Xslt */\n        14\n      );\n\n    default:\n      throw [Caml_builtin_exceptions.failure, \"Unknown requestDestination: \" + e];\n  }\n}\n\nfunction referrerPolicy(self) {\n  var e = self.referrerPolicy;\n\n  switch (e) {\n    case \"\":\n      return (\n        /* None */\n        0\n      );\n\n    case \"no-referrer\":\n      return (\n        /* NoReferrer */\n        1\n      );\n\n    case \"no-referrer-when-downgrade\":\n      return (\n        /* NoReferrerWhenDowngrade */\n        2\n      );\n\n    case \"origin\":\n      return (\n        /* Origin */\n        4\n      );\n\n    case \"origin-when-cross-origin\":\n      return (\n        /* OriginWhenCrossOrigin */\n        6\n      );\n\n    case \"same-origin\":\n      return (\n        /* SameOrigin */\n        3\n      );\n\n    case \"strict-origin\":\n      return (\n        /* StrictOrigin */\n        5\n      );\n\n    case \"strict-origin-when-cross-origin\":\n      return (\n        /* StrictOriginWhenCrossOrigin */\n        7\n      );\n\n    case \"unsafe-url\":\n      return (\n        /* UnsafeUrl */\n        8\n      );\n\n    default:\n      throw [Caml_builtin_exceptions.failure, \"Unknown referrerPolicy: \" + e];\n  }\n}\n\nfunction mode(self) {\n  var e = self.mode;\n\n  switch (e) {\n    case \"cors\":\n      return (\n        /* CORS */\n        3\n      );\n\n    case \"navigate\":\n      return (\n        /* Navigate */\n        0\n      );\n\n    case \"no-cors\":\n      return (\n        /* NoCORS */\n        2\n      );\n\n    case \"same-origin\":\n      return (\n        /* SameOrigin */\n        1\n      );\n\n    default:\n      throw [Caml_builtin_exceptions.failure, \"Unknown requestMode: \" + e];\n  }\n}\n\nfunction credentials(self) {\n  var e = self.credentials;\n\n  switch (e) {\n    case \"include\":\n      return (\n        /* Include */\n        2\n      );\n\n    case \"omit\":\n      return (\n        /* Omit */\n        0\n      );\n\n    case \"same-origin\":\n      return (\n        /* SameOrigin */\n        1\n      );\n\n    default:\n      throw [Caml_builtin_exceptions.failure, \"Unknown requestCredentials: \" + e];\n  }\n}\n\nfunction cache(self) {\n  var e = self.cache;\n\n  switch (e) {\n    case \"default\":\n      return (\n        /* Default */\n        0\n      );\n\n    case \"force-cache\":\n      return (\n        /* ForceCache */\n        4\n      );\n\n    case \"no-cache\":\n      return (\n        /* NoCache */\n        3\n      );\n\n    case \"no-store\":\n      return (\n        /* NoStore */\n        1\n      );\n\n    case \"only-if-cached\":\n      return (\n        /* OnlyIfCached */\n        5\n      );\n\n    case \"reload\":\n      return (\n        /* Reload */\n        2\n      );\n\n    default:\n      throw [Caml_builtin_exceptions.failure, \"Unknown requestCache: \" + e];\n  }\n}\n\nfunction redirect(self) {\n  var e = self.redirect;\n\n  switch (e) {\n    case \"error\":\n      return (\n        /* Error */\n        1\n      );\n\n    case \"follow\":\n      return (\n        /* Follow */\n        0\n      );\n\n    case \"manual\":\n      return (\n        /* Manual */\n        2\n      );\n\n    default:\n      throw [Caml_builtin_exceptions.failure, \"Unknown requestRedirect: \" + e];\n  }\n}\n\nvar $$Request = {\n  method_: method_,\n  type_: type_,\n  destination: destination,\n  referrerPolicy: referrerPolicy,\n  mode: mode,\n  credentials: credentials,\n  cache: cache,\n  redirect: redirect\n};\nvar $$Response = {};\nvar Body = {};\nvar RequestInit = {\n  make: make\n};\nexports.$$AbortController = $$AbortController;\nexports.HeadersInit = HeadersInit;\nexports.$$Headers = $$Headers;\nexports.BodyInit = BodyInit;\nexports.Body = Body;\nexports.RequestInit = RequestInit;\nexports.$$Request = $$Request;\nexports.$$Response = $$Response;\n/* No side effect */","map":null,"metadata":{},"sourceType":"module"}