{"ast":null,"code":"'use strict';\n\nvar Caml_builtin_exceptions = require(\"bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction encodeCompareHow(param) {\n  return param;\n}\n\nfunction decodeCompareResult(param) {\n  var switcher = param + 1 | 0;\n\n  if (switcher > 2 || switcher < 0) {\n    return (\n      /* Unknown */\n      3\n    );\n  } else {\n    return switcher;\n  }\n}\n\nfunction decodeCompatMode(param) {\n  switch (param) {\n    case \"BackCompat\":\n      return (\n        /* BackCompat */\n        0\n      );\n\n    case \"CSS1Compat\":\n      return (\n        /* CSS1Compat */\n        1\n      );\n\n    default:\n      return (\n        /* Unknown */\n        2\n      );\n  }\n}\n\nfunction encodeContentEditable(param) {\n  switch (param) {\n    case\n    /* True */\n    0:\n      return \"true\";\n\n    case\n    /* False */\n    1:\n      return \"false\";\n\n    case\n    /* Inherit */\n    2:\n      return \"inherit\";\n\n    case\n    /* Unknown */\n    3:\n      return \"\";\n  }\n}\n\nfunction decodeContentEditable(param) {\n  switch (param) {\n    case \"false\":\n      return (\n        /* False */\n        1\n      );\n\n    case \"inherit\":\n      return (\n        /* Inherit */\n        2\n      );\n\n    case \"true\":\n      return (\n        /* True */\n        0\n      );\n\n    default:\n      return (\n        /* Unknown */\n        3\n      );\n  }\n}\n\nfunction decodeDeltaMode(param) {\n  if (param > 2 || param < 0) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"invalid deltaMode\"];\n  }\n\n  return param;\n}\n\nfunction encodeDesignMode(param) {\n  switch (param) {\n    case\n    /* On */\n    0:\n      return \"on\";\n\n    case\n    /* Off */\n    1:\n      return \"off\";\n\n    case\n    /* Unknown */\n    2:\n      return \"\";\n  }\n}\n\nfunction decodeDesignMode(param) {\n  switch (param) {\n    case \"off\":\n      return (\n        /* Off */\n        1\n      );\n\n    case \"on\":\n      return (\n        /* On */\n        0\n      );\n\n    default:\n      return (\n        /* Unknown */\n        2\n      );\n  }\n}\n\nfunction encodeDir(param) {\n  switch (param) {\n    case\n    /* Ltr */\n    0:\n      return \"ltr\";\n\n    case\n    /* Rtl */\n    1:\n      return \"rtl\";\n\n    case\n    /* Unknown */\n    2:\n      return \"\";\n  }\n}\n\nfunction decodeDir(param) {\n  switch (param) {\n    case \"ltr\":\n      return (\n        /* Ltr */\n        0\n      );\n\n    case \"rtl\":\n      return (\n        /* Rtl */\n        1\n      );\n\n    default:\n      return (\n        /* Unknown */\n        2\n      );\n  }\n}\n\nfunction decodeEventPhase(param) {\n  if (param > 3 || param < 0) {\n    return (\n      /* Unknown */\n      4\n    );\n  } else {\n    return param;\n  }\n}\n\nfunction encodeFilterAction(param) {\n  return param + 1 | 0;\n}\n\nfunction encodeInsertPosition(param) {\n  switch (param) {\n    case\n    /* BeforeBegin */\n    0:\n      return \"beforebegin\";\n\n    case\n    /* AfterBegin */\n    1:\n      return \"afterbegin\";\n\n    case\n    /* BeforeEnd */\n    2:\n      return \"beforeend\";\n\n    case\n    /* AfterEnd */\n    3:\n      return \"afterend\";\n  }\n}\n\nfunction encodeModifierKey(param) {\n  switch (param) {\n    case\n    /* Alt */\n    0:\n      return \"Alt\";\n\n    case\n    /* AltGraph */\n    1:\n      return \"AltGraph\";\n\n    case\n    /* CapsLock */\n    2:\n      return \"CapsLock\";\n\n    case\n    /* Control */\n    3:\n      return \"Control\";\n\n    case\n    /* Fn */\n    4:\n      return \"Fn\";\n\n    case\n    /* FnLock */\n    5:\n      return \"FnLock\";\n\n    case\n    /* Hyper */\n    6:\n      return \"Hyper\";\n\n    case\n    /* Meta */\n    7:\n      return \"Meta\";\n\n    case\n    /* NumLock */\n    8:\n      return \"NumLock\";\n\n    case\n    /* ScrollLock */\n    9:\n      return \"ScrollLock\";\n\n    case\n    /* Shift */\n    10:\n      return \"Shift\";\n\n    case\n    /* Super */\n    11:\n      return \"Super\";\n\n    case\n    /* Symbol */\n    12:\n      return \"Symbol\";\n\n    case\n    /* SymbolLock */\n    13:\n      return \"SymbolLock\";\n  }\n}\n\nfunction decodeNodeType(param) {\n  var switcher = param - 1 | 0;\n\n  if (switcher > 11 || switcher < 0) {\n    return (\n      /* Unknown */\n      12\n    );\n  } else {\n    return switcher;\n  }\n}\n\nfunction decodePointerType(param) {\n  switch (param) {\n    case \"mouse\":\n      return (\n        /* Mouse */\n        0\n      );\n\n    case \"pen\":\n      return (\n        /* Pen */\n        1\n      );\n\n    case \"touch|\":\n      return (\n        /* Touch */\n        2\n      );\n\n    default:\n      return (\n        /* Unknown */\n        3\n      );\n  }\n}\n\nfunction decodeReadyState(param) {\n  switch (param) {\n    case \"complete\":\n      return (\n        /* Complete */\n        2\n      );\n\n    case \"interactive\":\n      return (\n        /* Interactive */\n        1\n      );\n\n    case \"loading\":\n      return (\n        /* Loading */\n        0\n      );\n\n    default:\n      return (\n        /* Unknown */\n        3\n      );\n  }\n}\n\nfunction decodeShadowRootMode(param) {\n  switch (param) {\n    case \"closed\":\n      return (\n        /* Closed */\n        1\n      );\n\n    case \"open\":\n      return (\n        /* Open */\n        0\n      );\n\n    default:\n      throw [Caml_builtin_exceptions.invalid_argument, \"Unknown shadowRootMode\"];\n  }\n}\n\nfunction decodeVisibilityState(param) {\n  switch (param) {\n    case \"hidden\":\n      return (\n        /* Hidden */\n        1\n      );\n\n    case \"prerender\":\n      return (\n        /* Prerender */\n        2\n      );\n\n    case \"unloaded\":\n      return (\n        /* Unloaded */\n        3\n      );\n\n    case \"visible\":\n      return (\n        /* Visible */\n        0\n      );\n\n    default:\n      return (\n        /* Unknown */\n        4\n      );\n  }\n}\n\nfunction many(param) {\n  if (param) {\n    return param[0] | many(param[1]);\n  } else {\n    return 0;\n  }\n}\n\nvar WhatToShow = {\n  _All: -1,\n  _Element: 1,\n  _Attribute: 2,\n  _Text: 4,\n  _CDATASection: 8,\n  _EntityReference: 16,\n  _Entity: 32,\n  _ProcessingInstruction: 64,\n  _Comment: 128,\n  _Document: 256,\n  _DocumentType: 512,\n  _DocumentFragment: 1024,\n  _Notation: 2048,\n  many: many\n};\nexports.encodeCompareHow = encodeCompareHow;\nexports.decodeCompareResult = decodeCompareResult;\nexports.decodeCompatMode = decodeCompatMode;\nexports.encodeContentEditable = encodeContentEditable;\nexports.decodeContentEditable = decodeContentEditable;\nexports.decodeDeltaMode = decodeDeltaMode;\nexports.encodeDesignMode = encodeDesignMode;\nexports.decodeDesignMode = decodeDesignMode;\nexports.encodeDir = encodeDir;\nexports.decodeDir = decodeDir;\nexports.decodeEventPhase = decodeEventPhase;\nexports.encodeFilterAction = encodeFilterAction;\nexports.encodeInsertPosition = encodeInsertPosition;\nexports.encodeModifierKey = encodeModifierKey;\nexports.decodeNodeType = decodeNodeType;\nexports.decodePointerType = decodePointerType;\nexports.decodeReadyState = decodeReadyState;\nexports.decodeShadowRootMode = decodeShadowRootMode;\nexports.decodeVisibilityState = decodeVisibilityState;\nexports.WhatToShow = WhatToShow;\n/* No side effect */","map":null,"metadata":{},"sourceType":"module"}