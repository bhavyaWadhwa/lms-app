{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar Block = require(\"bs-platform/lib/js/block.js\");\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar React = require(\"react\");\n\nvar Js_exn = require(\"bs-platform/lib/js/js_exn.js\");\n\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\n\nvar Js_json = require(\"bs-platform/lib/js/js_json.js\");\n\nvar Js_option = require(\"bs-platform/lib/js/js_option.js\");\n\nvar EmailUtils = require(\"../../../shared/utils/EmailUtils.bs.js\");\n\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\n\nvar OptionUtils = require(\"../../../shared/utils/OptionUtils.bs.js\");\n\nvar GraphqlQuery = require(\"../../../shared/utils/GraphqlQuery.bs.js\");\n\nvar $$Notification = require(\"../../../shared/Notification.bs.js\");\n\nvar DisablingCover = require(\"../../../shared/components/DisablingCover.bs.js\");\n\nvar GraphqlErrorHandler = require(\"../../../shared/utils/GraphqlErrorHandler.bs.js\");\n\nvar School__InputGroupError = require(\"../../shared/components/School__InputGroupError.bs.js\");\n\nvar SchoolCustomize__Customizations = require(\"../types/SchoolCustomize__Customizations.bs.js\");\n\nvar SchoolCustomize__UpdateSchoolStringError = require(\"./SchoolCustomize__UpdateSchoolStringError.bs.js\");\n\nfunction str(prim) {\n  return prim;\n}\n\nfunction handleInputChange(callback, $$event) {\n  return Curry._1(callback, $$event.target.value);\n}\n\nfunction updateContactDetailsButtonText(updating) {\n  if (updating) {\n    return \"Updating...\";\n  } else {\n    return \"Update Contact Details\";\n  }\n}\n\nvar ppx_printed_query = \"mutation UpdateAddressAndEmailMutation($address: String!, $emailAddress: String!)  {\\nupdateAddress: updateSchoolString(key: \\\"address\\\", value: $address)  {\\nerrors  \\n}\\n\\nupdateEmailAddress: updateSchoolString(key: \\\"email_address\\\", value: $emailAddress)  {\\nerrors  \\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"updateAddress\");\n  var tmp;\n\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"errors\");\n    tmp = {\n      errors: match$1 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match$1))).map(function (value) {\n        var match = Js_json.decodeString(value);\n\n        if (match !== undefined) {\n          var value$1 = match;\n\n          switch (value$1) {\n            case \"InvalidKey\":\n              return (\n                /* InvalidKey */\n                -37069048\n              );\n\n            case \"InvalidLengthValue\":\n              return (\n                /* InvalidLengthValue */\n                718585620\n              );\n\n            case \"InvalidValue\":\n              return (\n                /* InvalidValue */\n                522207514\n              );\n\n            default:\n              return Js_exn.raiseError(\"graphql_ppx: Unknown enum variant for UpdateSchoolStringError: \" + value$1);\n          }\n        } else {\n          return Js_exn.raiseError(\"graphql_ppx: Expected enum value for UpdateSchoolStringError, got \" + JSON.stringify(value));\n        }\n      }) : Js_exn.raiseError(\"graphql_ppx: Field errors on type UpdateSchoolStringPayload is missing\")\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field updateAddress on type Mutation is missing\");\n  }\n\n  var match$2 = Js_dict.get(value$1, \"updateEmailAddress\");\n  var tmp$1;\n\n  if (match$2 !== undefined) {\n    var value$3 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match$2)));\n    var match$3 = Js_dict.get(value$3, \"errors\");\n    tmp$1 = {\n      errors: match$3 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match$3))).map(function (value) {\n        var match = Js_json.decodeString(value);\n\n        if (match !== undefined) {\n          var value$1 = match;\n\n          switch (value$1) {\n            case \"InvalidKey\":\n              return (\n                /* InvalidKey */\n                -37069048\n              );\n\n            case \"InvalidLengthValue\":\n              return (\n                /* InvalidLengthValue */\n                718585620\n              );\n\n            case \"InvalidValue\":\n              return (\n                /* InvalidValue */\n                522207514\n              );\n\n            default:\n              return Js_exn.raiseError(\"graphql_ppx: Unknown enum variant for UpdateSchoolStringError: \" + value$1);\n          }\n        } else {\n          return Js_exn.raiseError(\"graphql_ppx: Expected enum value for UpdateSchoolStringError, got \" + JSON.stringify(value));\n        }\n      }) : Js_exn.raiseError(\"graphql_ppx: Field errors on type UpdateSchoolStringPayload is missing\")\n    };\n  } else {\n    tmp$1 = Js_exn.raiseError(\"graphql_ppx: Field updateEmailAddress on type Mutation is missing\");\n  }\n\n  return {\n    updateAddress: tmp,\n    updateEmailAddress: tmp$1\n  };\n}\n\nfunction make(address, emailAddress, param) {\n  return {\n    query: ppx_printed_query,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"address\", address],\n    /* tuple */\n    [\"emailAddress\", emailAddress]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse\n  };\n}\n\nfunction makeWithVariables(variables) {\n  var address = variables.address;\n  var emailAddress = variables.emailAddress;\n  return {\n    query: ppx_printed_query,\n    variables: Js_dict.fromArray([\n    /* tuple */\n    [\"address\", address],\n    /* tuple */\n    [\"emailAddress\", emailAddress]].filter(function (param) {\n      return !Js_json.test(param[1],\n      /* Null */\n      5);\n    })),\n    parse: parse\n  };\n}\n\nfunction makeVariables(address, emailAddress, param) {\n  return Js_dict.fromArray([\n  /* tuple */\n  [\"address\", address],\n  /* tuple */\n  [\"emailAddress\", emailAddress]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  }));\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn, address, emailAddress, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n  /* tuple */\n  [\"address\", address],\n  /* tuple */\n  [\"emailAddress\", emailAddress]].filter(function (param) {\n    return !Js_json.test(param[1],\n    /* Null */\n    5);\n  })));\n}\n\nvar definition =\n/* tuple */\n[parse, ppx_printed_query, definition_002];\n\nfunction ret_type(f) {\n  return {};\n}\n\nvar MT_Ret = {};\nvar UpdateContactDetailsQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\nvar UpdateSchoolStringErrorHandler = GraphqlErrorHandler.Make(SchoolCustomize__UpdateSchoolStringError);\n\nfunction handleUpdateContactDetails(state, send, updateAddressCB, updateEmailAddressCB, $$event) {\n  $$event.preventDefault();\n\n  Curry._1(send,\n  /* BeginUpdate */\n  0);\n\n  Curry._2(UpdateSchoolStringErrorHandler.$$catch, function (param) {\n    return Curry._1(send,\n    /* ErrorOccured */\n    1);\n  }, function (eta) {\n    return GraphqlQuery.sendQuery(undefined, eta);\n  }(make(state.address, state.emailAddress,\n  /* () */\n  0)).then(function (result) {\n    var match = result.updateAddress.errors;\n    var match$1 = result.updateEmailAddress.errors;\n\n    if (match.length !== 0) {\n      if (match$1.length !== 0) {\n        var errors = $$Array.append(match$1, match);\n        return Promise.reject([UpdateSchoolStringErrorHandler.Errors, errors]);\n      } else {\n        $$Notification.notice(\"Partial success!\", \"We were only able to update the email address.\");\n        return Promise.reject([UpdateSchoolStringErrorHandler.Errors, match]);\n      }\n    } else if (match$1.length !== 0) {\n      $$Notification.notice(\"Partial success!\", \"We were only able to update the address.\");\n      return Promise.reject([UpdateSchoolStringErrorHandler.Errors, match$1]);\n    } else {\n      $$Notification.success(\"Done!\", \"Contact details have been updated.\");\n\n      Curry._1(updateAddressCB, state.address);\n\n      Curry._1(updateEmailAddressCB, state.emailAddress);\n\n      Curry._1(send,\n      /* DoneUpdating */\n      2);\n\n      return Promise.resolve(\n      /* () */\n      0);\n    }\n  }));\n\n  return (\n    /* () */\n    0\n  );\n}\n\nfunction updateButtonDisabled(state) {\n  if (state.updating || !state.formDirty) {\n    return true;\n  } else {\n    return state.emailAddressInvalid;\n  }\n}\n\nfunction initialState(customizations) {\n  return {\n    address: OptionUtils.$$default(\"\", SchoolCustomize__Customizations.address(customizations)),\n    emailAddress: OptionUtils.$$default(\"\", SchoolCustomize__Customizations.emailAddress(customizations)),\n    emailAddressInvalid: false,\n    updating: false,\n    formDirty: false\n  };\n}\n\nfunction reducer(state, action) {\n  if (typeof action === \"number\") {\n    switch (action) {\n      case\n      /* BeginUpdate */\n      0:\n        return {\n          address: state.address,\n          emailAddress: state.emailAddress,\n          emailAddressInvalid: state.emailAddressInvalid,\n          updating: true,\n          formDirty: state.formDirty\n        };\n\n      case\n      /* ErrorOccured */\n      1:\n        return {\n          address: state.address,\n          emailAddress: state.emailAddress,\n          emailAddressInvalid: state.emailAddressInvalid,\n          updating: false,\n          formDirty: state.formDirty\n        };\n\n      case\n      /* DoneUpdating */\n      2:\n        return {\n          address: state.address,\n          emailAddress: state.emailAddress,\n          emailAddressInvalid: state.emailAddressInvalid,\n          updating: false,\n          formDirty: false\n        };\n    }\n  } else if (action.tag) {\n    return {\n      address: state.address,\n      emailAddress: action[0],\n      emailAddressInvalid: action[1],\n      updating: state.updating,\n      formDirty: true\n    };\n  } else {\n    return {\n      address: action[0],\n      emailAddress: state.emailAddress,\n      emailAddressInvalid: state.emailAddressInvalid,\n      updating: state.updating,\n      formDirty: true\n    };\n  }\n}\n\nfunction SchoolCustomize__ContactsEditor(Props) {\n  var customizations = Props.customizations;\n  var updateAddressCB = Props.updateAddressCB;\n  var updateEmailAddressCB = Props.updateEmailAddressCB;\n  var match = React.useReducer(reducer, initialState(customizations));\n  var send = match[1];\n  var state = match[0];\n  return React.createElement(\"div\", {\n    className: \"mx-8 pt-8\"\n  }, React.createElement(\"h5\", {\n    className: \"uppercase text-center border-b border-gray-400 pb-2\"\n  }, \"Manage Contact Details\"), React.createElement(DisablingCover.make, {\n    disabled: state.updating,\n    children: null\n  }, React.createElement(\"div\", {\n    key: \"contacts-editor__address-input-group\",\n    className: \"mt-3\"\n  }, React.createElement(\"label\", {\n    className: \"inline-block tracking-wide text-xs font-semibold\",\n    htmlFor: \"contacts-editor__address\"\n  }, \"Contact Address \", React.createElement(\"i\", {\n    className: \"fab fa-markdown text-base\"\n  })), React.createElement(\"textarea\", {\n    className: \"appearance-none block w-full bg-white text-gray-800 border border-gray-400 rounded py-3 px-4 mt-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    id: \"contacts-editor__address\",\n    maxLength: 1000,\n    placeholder: \"Leave the address empty to hide the footer section.\",\n    value: state.address,\n    onChange: function onChange(param) {\n      var address = param.target.value;\n      return Curry._1(send,\n      /* UpdateAddress */\n      Block.__(0, [address]));\n    }\n  })), React.createElement(\"div\", {\n    key: \"contacts-editor__email-address-input-group\",\n    className: \"mt-3\"\n  }, React.createElement(\"label\", {\n    className: \"inline-block tracking-wide text-xs font-semibold\",\n    htmlFor: \"contacts-editor__email-address\"\n  }, \"Email Address\"), React.createElement(\"input\", {\n    className: \"appearance-none block w-full bg-white text-gray-800 border border-gray-400 rounded py-3 px-4 mt-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    id: \"contacts-editor__email-address\",\n    maxLength: 250,\n    placeholder: \"Leave the email address empty to hide the footer link.\",\n    type: \"text\",\n    value: state.emailAddress,\n    onChange: function onChange(param) {\n      var emailAddress = param.target.value;\n      return Curry._1(send,\n      /* UpdateEmailAddress */\n      Block.__(1, [emailAddress, EmailUtils.isInvalid(true, emailAddress)]));\n    }\n  }), React.createElement(School__InputGroupError.make, {\n    message: \"is not a valid email address\",\n    active: state.emailAddressInvalid\n  })), React.createElement(\"button\", {\n    key: \"contacts-editor__update-button\",\n    className: \"w-full bg-indigo-600 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded focus:outline-none mt-3\",\n    disabled: updateButtonDisabled(state),\n    onClick: function onClick(param) {\n      return handleUpdateContactDetails(state, send, updateAddressCB, updateEmailAddressCB, param);\n    }\n  }, state.updating ? \"Updating...\" : \"Update Contact Details\")));\n}\n\nvar make$1 = SchoolCustomize__ContactsEditor;\nexports.str = str;\nexports.handleInputChange = handleInputChange;\nexports.updateContactDetailsButtonText = updateContactDetailsButtonText;\nexports.UpdateContactDetailsQuery = UpdateContactDetailsQuery;\nexports.UpdateSchoolStringErrorHandler = UpdateSchoolStringErrorHandler;\nexports.handleUpdateContactDetails = handleUpdateContactDetails;\nexports.updateButtonDisabled = updateButtonDisabled;\nexports.initialState = initialState;\nexports.reducer = reducer;\nexports.make = make$1;\n/* UpdateSchoolStringErrorHandler Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/schools/settings/components/SchoolCustomize__ContactsEditor.bs.js"],"names":["$$Array","require","Block","Curry","React","Js_exn","Js_dict","Js_json","Js_option","EmailUtils","Caml_option","OptionUtils","GraphqlQuery","$$Notification","DisablingCover","GraphqlErrorHandler","School__InputGroupError","SchoolCustomize__Customizations","SchoolCustomize__UpdateSchoolStringError","str","prim","handleInputChange","callback","$$event","_1","target","value","updateContactDetailsButtonText","updating","ppx_printed_query","parse","value$1","getExn","decodeObject","match","get","tmp","undefined","value$2","valFromOption","match$1","errors","decodeArray","map","decodeString","raiseError","JSON","stringify","match$2","tmp$1","value$3","match$3","updateAddress","updateEmailAddress","make","address","emailAddress","param","query","variables","fromArray","filter","test","makeWithVariables","makeVariables","definition_002","graphql_ppx_use_json_variables_fn","definition","ret_type","f","MT_Ret","UpdateContactDetailsQuery","UpdateSchoolStringErrorHandler","Make","handleUpdateContactDetails","state","send","updateAddressCB","updateEmailAddressCB","preventDefault","_2","$$catch","eta","sendQuery","then","result","length","append","Promise","reject","Errors","notice","success","resolve","updateButtonDisabled","formDirty","emailAddressInvalid","initialState","customizations","$$default","reducer","action","tag","SchoolCustomize__ContactsEditor","Props","useReducer","createElement","className","disabled","children","key","htmlFor","id","maxLength","placeholder","onChange","__","type","isInvalid","message","active","onClick","make$1","exports"],"mappings":"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","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar Block = require(\"bs-platform/lib/js/block.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Js_exn = require(\"bs-platform/lib/js/js_exn.js\");\nvar Js_dict = require(\"bs-platform/lib/js/js_dict.js\");\nvar Js_json = require(\"bs-platform/lib/js/js_json.js\");\nvar Js_option = require(\"bs-platform/lib/js/js_option.js\");\nvar EmailUtils = require(\"../../../shared/utils/EmailUtils.bs.js\");\nvar Caml_option = require(\"bs-platform/lib/js/caml_option.js\");\nvar OptionUtils = require(\"../../../shared/utils/OptionUtils.bs.js\");\nvar GraphqlQuery = require(\"../../../shared/utils/GraphqlQuery.bs.js\");\nvar $$Notification = require(\"../../../shared/Notification.bs.js\");\nvar DisablingCover = require(\"../../../shared/components/DisablingCover.bs.js\");\nvar GraphqlErrorHandler = require(\"../../../shared/utils/GraphqlErrorHandler.bs.js\");\nvar School__InputGroupError = require(\"../../shared/components/School__InputGroupError.bs.js\");\nvar SchoolCustomize__Customizations = require(\"../types/SchoolCustomize__Customizations.bs.js\");\nvar SchoolCustomize__UpdateSchoolStringError = require(\"./SchoolCustomize__UpdateSchoolStringError.bs.js\");\n\nfunction str(prim) {\n  return prim;\n}\n\nfunction handleInputChange(callback, $$event) {\n  return Curry._1(callback, $$event.target.value);\n}\n\nfunction updateContactDetailsButtonText(updating) {\n  if (updating) {\n    return \"Updating...\";\n  } else {\n    return \"Update Contact Details\";\n  }\n}\n\nvar ppx_printed_query = \"mutation UpdateAddressAndEmailMutation($address: String!, $emailAddress: String!)  {\\nupdateAddress: updateSchoolString(key: \\\"address\\\", value: $address)  {\\nerrors  \\n}\\n\\nupdateEmailAddress: updateSchoolString(key: \\\"email_address\\\", value: $emailAddress)  {\\nerrors  \\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"updateAddress\");\n  var tmp;\n  if (match !== undefined) {\n    var value$2 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match)));\n    var match$1 = Js_dict.get(value$2, \"errors\");\n    tmp = {\n      errors: match$1 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match$1))).map((function (value) {\n                var match = Js_json.decodeString(value);\n                if (match !== undefined) {\n                  var value$1 = match;\n                  switch (value$1) {\n                    case \"InvalidKey\" :\n                        return /* InvalidKey */-37069048;\n                    case \"InvalidLengthValue\" :\n                        return /* InvalidLengthValue */718585620;\n                    case \"InvalidValue\" :\n                        return /* InvalidValue */522207514;\n                    default:\n                      return Js_exn.raiseError(\"graphql_ppx: Unknown enum variant for UpdateSchoolStringError: \" + value$1);\n                  }\n                } else {\n                  return Js_exn.raiseError(\"graphql_ppx: Expected enum value for UpdateSchoolStringError, got \" + JSON.stringify(value));\n                }\n              })) : Js_exn.raiseError(\"graphql_ppx: Field errors on type UpdateSchoolStringPayload is missing\")\n    };\n  } else {\n    tmp = Js_exn.raiseError(\"graphql_ppx: Field updateAddress on type Mutation is missing\");\n  }\n  var match$2 = Js_dict.get(value$1, \"updateEmailAddress\");\n  var tmp$1;\n  if (match$2 !== undefined) {\n    var value$3 = Js_option.getExn(Js_json.decodeObject(Caml_option.valFromOption(match$2)));\n    var match$3 = Js_dict.get(value$3, \"errors\");\n    tmp$1 = {\n      errors: match$3 !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match$3))).map((function (value) {\n                var match = Js_json.decodeString(value);\n                if (match !== undefined) {\n                  var value$1 = match;\n                  switch (value$1) {\n                    case \"InvalidKey\" :\n                        return /* InvalidKey */-37069048;\n                    case \"InvalidLengthValue\" :\n                        return /* InvalidLengthValue */718585620;\n                    case \"InvalidValue\" :\n                        return /* InvalidValue */522207514;\n                    default:\n                      return Js_exn.raiseError(\"graphql_ppx: Unknown enum variant for UpdateSchoolStringError: \" + value$1);\n                  }\n                } else {\n                  return Js_exn.raiseError(\"graphql_ppx: Expected enum value for UpdateSchoolStringError, got \" + JSON.stringify(value));\n                }\n              })) : Js_exn.raiseError(\"graphql_ppx: Field errors on type UpdateSchoolStringPayload is missing\")\n    };\n  } else {\n    tmp$1 = Js_exn.raiseError(\"graphql_ppx: Field updateEmailAddress on type Mutation is missing\");\n  }\n  return {\n          updateAddress: tmp,\n          updateEmailAddress: tmp$1\n        };\n}\n\nfunction make(address, emailAddress, param) {\n  return {\n          query: ppx_printed_query,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"address\",\n                    address\n                  ],\n                  /* tuple */[\n                    \"emailAddress\",\n                    emailAddress\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse\n        };\n}\n\nfunction makeWithVariables(variables) {\n  var address = variables.address;\n  var emailAddress = variables.emailAddress;\n  return {\n          query: ppx_printed_query,\n          variables: Js_dict.fromArray([\n                  /* tuple */[\n                    \"address\",\n                    address\n                  ],\n                  /* tuple */[\n                    \"emailAddress\",\n                    emailAddress\n                  ]\n                ].filter((function (param) {\n                      return !Js_json.test(param[1], /* Null */5);\n                    }))),\n          parse: parse\n        };\n}\n\nfunction makeVariables(address, emailAddress, param) {\n  return Js_dict.fromArray([\n                /* tuple */[\n                  \"address\",\n                  address\n                ],\n                /* tuple */[\n                  \"emailAddress\",\n                  emailAddress\n                ]\n              ].filter((function (param) {\n                    return !Js_json.test(param[1], /* Null */5);\n                  })));\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn, address, emailAddress, param) {\n  return Curry._1(graphql_ppx_use_json_variables_fn, Js_dict.fromArray([\n                    /* tuple */[\n                      \"address\",\n                      address\n                    ],\n                    /* tuple */[\n                      \"emailAddress\",\n                      emailAddress\n                    ]\n                  ].filter((function (param) {\n                        return !Js_json.test(param[1], /* Null */5);\n                      }))));\n}\n\nvar definition = /* tuple */[\n  parse,\n  ppx_printed_query,\n  definition_002\n];\n\nfunction ret_type(f) {\n  return { };\n}\n\nvar MT_Ret = { };\n\nvar UpdateContactDetailsQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\n\nvar UpdateSchoolStringErrorHandler = GraphqlErrorHandler.Make(SchoolCustomize__UpdateSchoolStringError);\n\nfunction handleUpdateContactDetails(state, send, updateAddressCB, updateEmailAddressCB, $$event) {\n  $$event.preventDefault();\n  Curry._1(send, /* BeginUpdate */0);\n  Curry._2(UpdateSchoolStringErrorHandler.$$catch, (function (param) {\n          return Curry._1(send, /* ErrorOccured */1);\n        }), (function (eta) {\n              return GraphqlQuery.sendQuery(undefined, eta);\n            })(make(state.address, state.emailAddress, /* () */0)).then((function (result) {\n              var match = result.updateAddress.errors;\n              var match$1 = result.updateEmailAddress.errors;\n              if (match.length !== 0) {\n                if (match$1.length !== 0) {\n                  var errors = $$Array.append(match$1, match);\n                  return Promise.reject([\n                              UpdateSchoolStringErrorHandler.Errors,\n                              errors\n                            ]);\n                } else {\n                  $$Notification.notice(\"Partial success!\", \"We were only able to update the email address.\");\n                  return Promise.reject([\n                              UpdateSchoolStringErrorHandler.Errors,\n                              match\n                            ]);\n                }\n              } else if (match$1.length !== 0) {\n                $$Notification.notice(\"Partial success!\", \"We were only able to update the address.\");\n                return Promise.reject([\n                            UpdateSchoolStringErrorHandler.Errors,\n                            match$1\n                          ]);\n              } else {\n                $$Notification.success(\"Done!\", \"Contact details have been updated.\");\n                Curry._1(updateAddressCB, state.address);\n                Curry._1(updateEmailAddressCB, state.emailAddress);\n                Curry._1(send, /* DoneUpdating */2);\n                return Promise.resolve(/* () */0);\n              }\n            })));\n  return /* () */0;\n}\n\nfunction updateButtonDisabled(state) {\n  if (state.updating || !state.formDirty) {\n    return true;\n  } else {\n    return state.emailAddressInvalid;\n  }\n}\n\nfunction initialState(customizations) {\n  return {\n          address: OptionUtils.$$default(\"\", SchoolCustomize__Customizations.address(customizations)),\n          emailAddress: OptionUtils.$$default(\"\", SchoolCustomize__Customizations.emailAddress(customizations)),\n          emailAddressInvalid: false,\n          updating: false,\n          formDirty: false\n        };\n}\n\nfunction reducer(state, action) {\n  if (typeof action === \"number\") {\n    switch (action) {\n      case /* BeginUpdate */0 :\n          return {\n                  address: state.address,\n                  emailAddress: state.emailAddress,\n                  emailAddressInvalid: state.emailAddressInvalid,\n                  updating: true,\n                  formDirty: state.formDirty\n                };\n      case /* ErrorOccured */1 :\n          return {\n                  address: state.address,\n                  emailAddress: state.emailAddress,\n                  emailAddressInvalid: state.emailAddressInvalid,\n                  updating: false,\n                  formDirty: state.formDirty\n                };\n      case /* DoneUpdating */2 :\n          return {\n                  address: state.address,\n                  emailAddress: state.emailAddress,\n                  emailAddressInvalid: state.emailAddressInvalid,\n                  updating: false,\n                  formDirty: false\n                };\n      \n    }\n  } else if (action.tag) {\n    return {\n            address: state.address,\n            emailAddress: action[0],\n            emailAddressInvalid: action[1],\n            updating: state.updating,\n            formDirty: true\n          };\n  } else {\n    return {\n            address: action[0],\n            emailAddress: state.emailAddress,\n            emailAddressInvalid: state.emailAddressInvalid,\n            updating: state.updating,\n            formDirty: true\n          };\n  }\n}\n\nfunction SchoolCustomize__ContactsEditor(Props) {\n  var customizations = Props.customizations;\n  var updateAddressCB = Props.updateAddressCB;\n  var updateEmailAddressCB = Props.updateEmailAddressCB;\n  var match = React.useReducer(reducer, initialState(customizations));\n  var send = match[1];\n  var state = match[0];\n  return React.createElement(\"div\", {\n              className: \"mx-8 pt-8\"\n            }, React.createElement(\"h5\", {\n                  className: \"uppercase text-center border-b border-gray-400 pb-2\"\n                }, \"Manage Contact Details\"), React.createElement(DisablingCover.make, {\n                  disabled: state.updating,\n                  children: null\n                }, React.createElement(\"div\", {\n                      key: \"contacts-editor__address-input-group\",\n                      className: \"mt-3\"\n                    }, React.createElement(\"label\", {\n                          className: \"inline-block tracking-wide text-xs font-semibold\",\n                          htmlFor: \"contacts-editor__address\"\n                        }, \"Contact Address \", React.createElement(\"i\", {\n                              className: \"fab fa-markdown text-base\"\n                            })), React.createElement(\"textarea\", {\n                          className: \"appearance-none block w-full bg-white text-gray-800 border border-gray-400 rounded py-3 px-4 mt-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n                          id: \"contacts-editor__address\",\n                          maxLength: 1000,\n                          placeholder: \"Leave the address empty to hide the footer section.\",\n                          value: state.address,\n                          onChange: (function (param) {\n                              var address = param.target.value;\n                              return Curry._1(send, /* UpdateAddress */Block.__(0, [address]));\n                            })\n                        })), React.createElement(\"div\", {\n                      key: \"contacts-editor__email-address-input-group\",\n                      className: \"mt-3\"\n                    }, React.createElement(\"label\", {\n                          className: \"inline-block tracking-wide text-xs font-semibold\",\n                          htmlFor: \"contacts-editor__email-address\"\n                        }, \"Email Address\"), React.createElement(\"input\", {\n                          className: \"appearance-none block w-full bg-white text-gray-800 border border-gray-400 rounded py-3 px-4 mt-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n                          id: \"contacts-editor__email-address\",\n                          maxLength: 250,\n                          placeholder: \"Leave the email address empty to hide the footer link.\",\n                          type: \"text\",\n                          value: state.emailAddress,\n                          onChange: (function (param) {\n                              var emailAddress = param.target.value;\n                              return Curry._1(send, /* UpdateEmailAddress */Block.__(1, [\n                                            emailAddress,\n                                            EmailUtils.isInvalid(true, emailAddress)\n                                          ]));\n                            })\n                        }), React.createElement(School__InputGroupError.make, {\n                          message: \"is not a valid email address\",\n                          active: state.emailAddressInvalid\n                        })), React.createElement(\"button\", {\n                      key: \"contacts-editor__update-button\",\n                      className: \"w-full bg-indigo-600 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded focus:outline-none mt-3\",\n                      disabled: updateButtonDisabled(state),\n                      onClick: (function (param) {\n                          return handleUpdateContactDetails(state, send, updateAddressCB, updateEmailAddressCB, param);\n                        })\n                    }, state.updating ? \"Updating...\" : \"Update Contact Details\")));\n}\n\nvar make$1 = SchoolCustomize__ContactsEditor;\n\nexports.str = str;\nexports.handleInputChange = handleInputChange;\nexports.updateContactDetailsButtonText = updateContactDetailsButtonText;\nexports.UpdateContactDetailsQuery = UpdateContactDetailsQuery;\nexports.UpdateSchoolStringErrorHandler = UpdateSchoolStringErrorHandler;\nexports.handleUpdateContactDetails = handleUpdateContactDetails;\nexports.updateButtonDisabled = updateButtonDisabled;\nexports.initialState = initialState;\nexports.reducer = reducer;\nexports.make = make$1;\n/* UpdateSchoolStringErrorHandler Not a pure module */\n"]},"metadata":{},"sourceType":"module"}