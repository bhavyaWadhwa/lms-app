{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar User = require(\"../../shared/types/User.bs.js\");\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar DateFns = require(\"../../shared/utils/DateFns.bs.js\");\n\nvar ArrayUtils = require(\"../../shared/utils/ArrayUtils.bs.js\");\n\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\n\nfunction id(t) {\n  return t.id;\n}\n\nfunction creatorId(t) {\n  return t.creatorId;\n}\n\nfunction editorId(t) {\n  return t.editorId;\n}\n\nfunction body(t) {\n  return t.body;\n}\n\nfunction replies(t) {\n  return t.replies;\n}\n\nfunction createdAt(t) {\n  return t.createdAt;\n}\n\nfunction updatedAt(t) {\n  return t.updatedAt;\n}\n\nfunction likedByUser(t) {\n  return t.likedByUser;\n}\n\nfunction postNumber(t) {\n  return t.postNumber;\n}\n\nfunction totalLikes(t) {\n  return t.totalLikes;\n}\n\nfunction solution(t) {\n  return t.solution;\n}\n\nfunction user(users, t) {\n  return ArrayUtils.unsafeFind(function (user) {\n    return User.id(user) === t.creatorId;\n  }, \"Unable to user with id: \" + (t.creatorId + \" in TopicsShow__Post\"), users);\n}\n\nfunction sort(posts) {\n  return ArrayUtils.copyAndSort(function (x, y) {\n    return x.postNumber - y.postNumber | 0;\n  }, posts);\n}\n\nfunction repliesToPost(posts, post) {\n  return sort(posts.filter(function (p) {\n    return $$Array.mem(p.id, post.replies);\n  }));\n}\n\nfunction addReply(newReplyId, t) {\n  return {\n    id: t.id,\n    body: t.body,\n    creatorId: t.creatorId,\n    editorId: t.editorId,\n    postNumber: t.postNumber,\n    createdAt: t.createdAt,\n    updatedAt: t.updatedAt,\n    totalLikes: t.totalLikes,\n    likedByUser: t.likedByUser,\n    replies: $$Array.append([newReplyId], t.replies),\n    solution: t.solution\n  };\n}\n\nfunction addLike(t) {\n  return {\n    id: t.id,\n    body: t.body,\n    creatorId: t.creatorId,\n    editorId: t.editorId,\n    postNumber: t.postNumber,\n    createdAt: t.createdAt,\n    updatedAt: t.updatedAt,\n    totalLikes: t.totalLikes + 1 | 0,\n    likedByUser: true,\n    replies: t.replies,\n    solution: t.solution\n  };\n}\n\nfunction removeLike(t) {\n  return {\n    id: t.id,\n    body: t.body,\n    creatorId: t.creatorId,\n    editorId: t.editorId,\n    postNumber: t.postNumber,\n    createdAt: t.createdAt,\n    updatedAt: t.updatedAt,\n    totalLikes: t.totalLikes - 1 | 0,\n    likedByUser: false,\n    replies: t.replies,\n    solution: t.solution\n  };\n}\n\nfunction markAsSolution(replyId, replies) {\n  return replies.map(function (reply) {\n    if (reply.id === replyId) {\n      return {\n        id: reply.id,\n        body: reply.body,\n        creatorId: reply.creatorId,\n        editorId: reply.editorId,\n        postNumber: reply.postNumber,\n        createdAt: reply.createdAt,\n        updatedAt: reply.updatedAt,\n        totalLikes: reply.totalLikes,\n        likedByUser: reply.likedByUser,\n        replies: reply.replies,\n        solution: true\n      };\n    } else {\n      return {\n        id: reply.id,\n        body: reply.body,\n        creatorId: reply.creatorId,\n        editorId: reply.editorId,\n        postNumber: reply.postNumber,\n        createdAt: reply.createdAt,\n        updatedAt: reply.updatedAt,\n        totalLikes: reply.totalLikes,\n        likedByUser: reply.likedByUser,\n        replies: reply.replies,\n        solution: false\n      };\n    }\n  });\n}\n\nfunction find(postId, posts) {\n  return ArrayUtils.unsafeFind(function (post) {\n    return post.id === postId;\n  }, \"Unable for find post with ID: \" + (postId + \" in TopicShow__Post\"), posts);\n}\n\nfunction highestPostNumber(posts) {\n  return posts.reduce(function (maxPostNumber, t) {\n    if (t.postNumber > maxPostNumber) {\n      return t.postNumber;\n    } else {\n      return maxPostNumber;\n    }\n  }, 0);\n}\n\nfunction make(id, body, creatorId, editorId, postNumber, createdAt, updatedAt, totalLikes, likedByUser, replies, solution) {\n  return {\n    id: id,\n    body: body,\n    creatorId: creatorId,\n    editorId: editorId,\n    postNumber: postNumber,\n    createdAt: createdAt,\n    updatedAt: updatedAt,\n    totalLikes: totalLikes,\n    likedByUser: likedByUser,\n    replies: replies,\n    solution: solution\n  };\n}\n\nfunction decodeReplyId(json) {\n  return Json_decode.field(\"id\", Json_decode.string, json);\n}\n\nfunction decode(json) {\n  return {\n    id: Json_decode.field(\"id\", Json_decode.string, json),\n    body: Json_decode.field(\"body\", Json_decode.string, json),\n    creatorId: Json_decode.field(\"creatorId\", Json_decode.string, json),\n    editorId: Json_decode.optional(function (param) {\n      return Json_decode.field(\"editorId\", Json_decode.string, param);\n    }, json),\n    postNumber: Json_decode.field(\"postNumber\", Json_decode.$$int, json),\n    createdAt: Json_decode.field(\"createdAt\", DateFns.decodeISO, json),\n    updatedAt: Json_decode.field(\"updatedAt\", DateFns.decodeISO, json),\n    totalLikes: Json_decode.field(\"totalLikes\", Json_decode.$$int, json),\n    likedByUser: Json_decode.field(\"likedByUser\", Json_decode.bool, json),\n    replies: Json_decode.field(\"replies\", function (param) {\n      return Json_decode.array(decodeReplyId, param);\n    }, json),\n    solution: Json_decode.field(\"solution\", Json_decode.bool, json)\n  };\n}\n\nexports.id = id;\nexports.creatorId = creatorId;\nexports.editorId = editorId;\nexports.body = body;\nexports.replies = replies;\nexports.createdAt = createdAt;\nexports.updatedAt = updatedAt;\nexports.likedByUser = likedByUser;\nexports.postNumber = postNumber;\nexports.totalLikes = totalLikes;\nexports.solution = solution;\nexports.user = user;\nexports.sort = sort;\nexports.repliesToPost = repliesToPost;\nexports.addReply = addReply;\nexports.addLike = addLike;\nexports.removeLike = removeLike;\nexports.markAsSolution = markAsSolution;\nexports.find = find;\nexports.highestPostNumber = highestPostNumber;\nexports.make = make;\nexports.decodeReplyId = decodeReplyId;\nexports.decode = decode;\n/* DateFns Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/topics/types/TopicsShow__Post.bs.js"],"names":["User","require","$$Array","DateFns","ArrayUtils","Json_decode","id","t","creatorId","editorId","body","replies","createdAt","updatedAt","likedByUser","postNumber","totalLikes","solution","user","users","unsafeFind","sort","posts","copyAndSort","x","y","repliesToPost","post","filter","p","mem","addReply","newReplyId","append","addLike","removeLike","markAsSolution","replyId","map","reply","find","postId","highestPostNumber","reduce","maxPostNumber","make","decodeReplyId","json","field","string","decode","optional","param","$$int","decodeISO","bool","array","exports"],"mappings":"AAAA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,+BAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,6BAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,kCAAD,CAArB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,qCAAD,CAAxB;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,wCAAD,CAAzB;;AAEA,SAASK,EAAT,CAAYC,CAAZ,EAAe;AACb,SAAOA,CAAC,CAACD,EAAT;AACD;;AAED,SAASE,SAAT,CAAmBD,CAAnB,EAAsB;AACpB,SAAOA,CAAC,CAACC,SAAT;AACD;;AAED,SAASC,QAAT,CAAkBF,CAAlB,EAAqB;AACnB,SAAOA,CAAC,CAACE,QAAT;AACD;;AAED,SAASC,IAAT,CAAcH,CAAd,EAAiB;AACf,SAAOA,CAAC,CAACG,IAAT;AACD;;AAED,SAASC,OAAT,CAAiBJ,CAAjB,EAAoB;AAClB,SAAOA,CAAC,CAACI,OAAT;AACD;;AAED,SAASC,SAAT,CAAmBL,CAAnB,EAAsB;AACpB,SAAOA,CAAC,CAACK,SAAT;AACD;;AAED,SAASC,SAAT,CAAmBN,CAAnB,EAAsB;AACpB,SAAOA,CAAC,CAACM,SAAT;AACD;;AAED,SAASC,WAAT,CAAqBP,CAArB,EAAwB;AACtB,SAAOA,CAAC,CAACO,WAAT;AACD;;AAED,SAASC,UAAT,CAAoBR,CAApB,EAAuB;AACrB,SAAOA,CAAC,CAACQ,UAAT;AACD;;AAED,SAASC,UAAT,CAAoBT,CAApB,EAAuB;AACrB,SAAOA,CAAC,CAACS,UAAT;AACD;;AAED,SAASC,QAAT,CAAkBV,CAAlB,EAAqB;AACnB,SAAOA,CAAC,CAACU,QAAT;AACD;;AAED,SAASC,IAAT,CAAcC,KAAd,EAAqBZ,CAArB,EAAwB;AACtB,SAAOH,UAAU,CAACgB,UAAX,CAAuB,UAAUF,IAAV,EAAgB;AAChC,WAAOlB,IAAI,CAACM,EAAL,CAAQY,IAAR,MAAkBX,CAAC,CAACC,SAA3B;AACD,GAFN,EAES,8BAA8BD,CAAC,CAACC,SAAF,GAAc,sBAA5C,CAFT,EAE8EW,KAF9E,CAAP;AAGD;;AAED,SAASE,IAAT,CAAcC,KAAd,EAAqB;AACnB,SAAOlB,UAAU,CAACmB,WAAX,CAAwB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACjC,WAAOD,CAAC,CAACT,UAAF,GAAeU,CAAC,CAACV,UAAjB,GAA8B,CAArC;AACD,GAFN,EAESO,KAFT,CAAP;AAGD;;AAED,SAASI,aAAT,CAAuBJ,KAAvB,EAA8BK,IAA9B,EAAoC;AAClC,SAAON,IAAI,CAACC,KAAK,CAACM,MAAN,CAAc,UAAUC,CAAV,EAAa;AACrB,WAAO3B,OAAO,CAAC4B,GAAR,CAAYD,CAAC,CAACvB,EAAd,EAAkBqB,IAAI,CAAChB,OAAvB,CAAP;AACD,GAFL,CAAD,CAAX;AAGD;;AAED,SAASoB,QAAT,CAAkBC,UAAlB,EAA8BzB,CAA9B,EAAiC;AAC/B,SAAO;AACCD,IAAAA,EAAE,EAAEC,CAAC,CAACD,EADP;AAECI,IAAAA,IAAI,EAAEH,CAAC,CAACG,IAFT;AAGCF,IAAAA,SAAS,EAAED,CAAC,CAACC,SAHd;AAICC,IAAAA,QAAQ,EAAEF,CAAC,CAACE,QAJb;AAKCM,IAAAA,UAAU,EAAER,CAAC,CAACQ,UALf;AAMCH,IAAAA,SAAS,EAAEL,CAAC,CAACK,SANd;AAOCC,IAAAA,SAAS,EAAEN,CAAC,CAACM,SAPd;AAQCG,IAAAA,UAAU,EAAET,CAAC,CAACS,UARf;AASCF,IAAAA,WAAW,EAAEP,CAAC,CAACO,WAThB;AAUCH,IAAAA,OAAO,EAAET,OAAO,CAAC+B,MAAR,CAAe,CAACD,UAAD,CAAf,EAA6BzB,CAAC,CAACI,OAA/B,CAVV;AAWCM,IAAAA,QAAQ,EAAEV,CAAC,CAACU;AAXb,GAAP;AAaD;;AAED,SAASiB,OAAT,CAAiB3B,CAAjB,EAAoB;AAClB,SAAO;AACCD,IAAAA,EAAE,EAAEC,CAAC,CAACD,EADP;AAECI,IAAAA,IAAI,EAAEH,CAAC,CAACG,IAFT;AAGCF,IAAAA,SAAS,EAAED,CAAC,CAACC,SAHd;AAICC,IAAAA,QAAQ,EAAEF,CAAC,CAACE,QAJb;AAKCM,IAAAA,UAAU,EAAER,CAAC,CAACQ,UALf;AAMCH,IAAAA,SAAS,EAAEL,CAAC,CAACK,SANd;AAOCC,IAAAA,SAAS,EAAEN,CAAC,CAACM,SAPd;AAQCG,IAAAA,UAAU,EAAET,CAAC,CAACS,UAAF,GAAe,CAAf,GAAmB,CARhC;AASCF,IAAAA,WAAW,EAAE,IATd;AAUCH,IAAAA,OAAO,EAAEJ,CAAC,CAACI,OAVZ;AAWCM,IAAAA,QAAQ,EAAEV,CAAC,CAACU;AAXb,GAAP;AAaD;;AAED,SAASkB,UAAT,CAAoB5B,CAApB,EAAuB;AACrB,SAAO;AACCD,IAAAA,EAAE,EAAEC,CAAC,CAACD,EADP;AAECI,IAAAA,IAAI,EAAEH,CAAC,CAACG,IAFT;AAGCF,IAAAA,SAAS,EAAED,CAAC,CAACC,SAHd;AAICC,IAAAA,QAAQ,EAAEF,CAAC,CAACE,QAJb;AAKCM,IAAAA,UAAU,EAAER,CAAC,CAACQ,UALf;AAMCH,IAAAA,SAAS,EAAEL,CAAC,CAACK,SANd;AAOCC,IAAAA,SAAS,EAAEN,CAAC,CAACM,SAPd;AAQCG,IAAAA,UAAU,EAAET,CAAC,CAACS,UAAF,GAAe,CAAf,GAAmB,CARhC;AASCF,IAAAA,WAAW,EAAE,KATd;AAUCH,IAAAA,OAAO,EAAEJ,CAAC,CAACI,OAVZ;AAWCM,IAAAA,QAAQ,EAAEV,CAAC,CAACU;AAXb,GAAP;AAaD;;AAED,SAASmB,cAAT,CAAwBC,OAAxB,EAAiC1B,OAAjC,EAA0C;AACxC,SAAOA,OAAO,CAAC2B,GAAR,CAAa,UAAUC,KAAV,EAAiB;AACvB,QAAIA,KAAK,CAACjC,EAAN,KAAa+B,OAAjB,EAA0B;AACxB,aAAO;AACC/B,QAAAA,EAAE,EAAEiC,KAAK,CAACjC,EADX;AAECI,QAAAA,IAAI,EAAE6B,KAAK,CAAC7B,IAFb;AAGCF,QAAAA,SAAS,EAAE+B,KAAK,CAAC/B,SAHlB;AAICC,QAAAA,QAAQ,EAAE8B,KAAK,CAAC9B,QAJjB;AAKCM,QAAAA,UAAU,EAAEwB,KAAK,CAACxB,UALnB;AAMCH,QAAAA,SAAS,EAAE2B,KAAK,CAAC3B,SANlB;AAOCC,QAAAA,SAAS,EAAE0B,KAAK,CAAC1B,SAPlB;AAQCG,QAAAA,UAAU,EAAEuB,KAAK,CAACvB,UARnB;AASCF,QAAAA,WAAW,EAAEyB,KAAK,CAACzB,WATpB;AAUCH,QAAAA,OAAO,EAAE4B,KAAK,CAAC5B,OAVhB;AAWCM,QAAAA,QAAQ,EAAE;AAXX,OAAP;AAaD,KAdD,MAcO;AACL,aAAO;AACCX,QAAAA,EAAE,EAAEiC,KAAK,CAACjC,EADX;AAECI,QAAAA,IAAI,EAAE6B,KAAK,CAAC7B,IAFb;AAGCF,QAAAA,SAAS,EAAE+B,KAAK,CAAC/B,SAHlB;AAICC,QAAAA,QAAQ,EAAE8B,KAAK,CAAC9B,QAJjB;AAKCM,QAAAA,UAAU,EAAEwB,KAAK,CAACxB,UALnB;AAMCH,QAAAA,SAAS,EAAE2B,KAAK,CAAC3B,SANlB;AAOCC,QAAAA,SAAS,EAAE0B,KAAK,CAAC1B,SAPlB;AAQCG,QAAAA,UAAU,EAAEuB,KAAK,CAACvB,UARnB;AASCF,QAAAA,WAAW,EAAEyB,KAAK,CAACzB,WATpB;AAUCH,QAAAA,OAAO,EAAE4B,KAAK,CAAC5B,OAVhB;AAWCM,QAAAA,QAAQ,EAAE;AAXX,OAAP;AAaD;AACF,GA9BN,CAAP;AA+BD;;AAED,SAASuB,IAAT,CAAcC,MAAd,EAAsBnB,KAAtB,EAA6B;AAC3B,SAAOlB,UAAU,CAACgB,UAAX,CAAuB,UAAUO,IAAV,EAAgB;AAChC,WAAOA,IAAI,CAACrB,EAAL,KAAYmC,MAAnB;AACD,GAFN,EAES,oCAAoCA,MAAM,GAAG,qBAA7C,CAFT,EAE8EnB,KAF9E,CAAP;AAGD;;AAED,SAASoB,iBAAT,CAA2BpB,KAA3B,EAAkC;AAChC,SAAOA,KAAK,CAACqB,MAAN,CAAc,UAAUC,aAAV,EAAyBrC,CAAzB,EAA4B;AACnC,QAAIA,CAAC,CAACQ,UAAF,GAAe6B,aAAnB,EAAkC;AAChC,aAAOrC,CAAC,CAACQ,UAAT;AACD,KAFD,MAEO;AACL,aAAO6B,aAAP;AACD;AACF,GANN,EAMS,CANT,CAAP;AAOD;;AAED,SAASC,IAAT,CAAcvC,EAAd,EAAkBI,IAAlB,EAAwBF,SAAxB,EAAmCC,QAAnC,EAA6CM,UAA7C,EAAyDH,SAAzD,EAAoEC,SAApE,EAA+EG,UAA/E,EAA2FF,WAA3F,EAAwGH,OAAxG,EAAiHM,QAAjH,EAA2H;AACzH,SAAO;AACCX,IAAAA,EAAE,EAAEA,EADL;AAECI,IAAAA,IAAI,EAAEA,IAFP;AAGCF,IAAAA,SAAS,EAAEA,SAHZ;AAICC,IAAAA,QAAQ,EAAEA,QAJX;AAKCM,IAAAA,UAAU,EAAEA,UALb;AAMCH,IAAAA,SAAS,EAAEA,SANZ;AAOCC,IAAAA,SAAS,EAAEA,SAPZ;AAQCG,IAAAA,UAAU,EAAEA,UARb;AASCF,IAAAA,WAAW,EAAEA,WATd;AAUCH,IAAAA,OAAO,EAAEA,OAVV;AAWCM,IAAAA,QAAQ,EAAEA;AAXX,GAAP;AAaD;;AAED,SAAS6B,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAO1C,WAAW,CAAC2C,KAAZ,CAAkB,IAAlB,EAAwB3C,WAAW,CAAC4C,MAApC,EAA4CF,IAA5C,CAAP;AACD;;AAED,SAASG,MAAT,CAAgBH,IAAhB,EAAsB;AACpB,SAAO;AACCzC,IAAAA,EAAE,EAAED,WAAW,CAAC2C,KAAZ,CAAkB,IAAlB,EAAwB3C,WAAW,CAAC4C,MAApC,EAA4CF,IAA5C,CADL;AAECrC,IAAAA,IAAI,EAAEL,WAAW,CAAC2C,KAAZ,CAAkB,MAAlB,EAA0B3C,WAAW,CAAC4C,MAAtC,EAA8CF,IAA9C,CAFP;AAGCvC,IAAAA,SAAS,EAAEH,WAAW,CAAC2C,KAAZ,CAAkB,WAAlB,EAA+B3C,WAAW,CAAC4C,MAA3C,EAAmDF,IAAnD,CAHZ;AAICtC,IAAAA,QAAQ,EAAEJ,WAAW,CAAC8C,QAAZ,CAAsB,UAAUC,KAAV,EAAiB;AACzC,aAAO/C,WAAW,CAAC2C,KAAZ,CAAkB,UAAlB,EAA8B3C,WAAW,CAAC4C,MAA1C,EAAkDG,KAAlD,CAAP;AACD,KAFG,EAEAL,IAFA,CAJX;AAOChC,IAAAA,UAAU,EAAEV,WAAW,CAAC2C,KAAZ,CAAkB,YAAlB,EAAgC3C,WAAW,CAACgD,KAA5C,EAAmDN,IAAnD,CAPb;AAQCnC,IAAAA,SAAS,EAAEP,WAAW,CAAC2C,KAAZ,CAAkB,WAAlB,EAA+B7C,OAAO,CAACmD,SAAvC,EAAkDP,IAAlD,CARZ;AASClC,IAAAA,SAAS,EAAER,WAAW,CAAC2C,KAAZ,CAAkB,WAAlB,EAA+B7C,OAAO,CAACmD,SAAvC,EAAkDP,IAAlD,CATZ;AAUC/B,IAAAA,UAAU,EAAEX,WAAW,CAAC2C,KAAZ,CAAkB,YAAlB,EAAgC3C,WAAW,CAACgD,KAA5C,EAAmDN,IAAnD,CAVb;AAWCjC,IAAAA,WAAW,EAAET,WAAW,CAAC2C,KAAZ,CAAkB,aAAlB,EAAiC3C,WAAW,CAACkD,IAA7C,EAAmDR,IAAnD,CAXd;AAYCpC,IAAAA,OAAO,EAAEN,WAAW,CAAC2C,KAAZ,CAAkB,SAAlB,EAA8B,UAAUI,KAAV,EAAiB;AAChD,aAAO/C,WAAW,CAACmD,KAAZ,CAAkBV,aAAlB,EAAiCM,KAAjC,CAAP;AACD,KAFE,EAECL,IAFD,CAZV;AAeC9B,IAAAA,QAAQ,EAAEZ,WAAW,CAAC2C,KAAZ,CAAkB,UAAlB,EAA8B3C,WAAW,CAACkD,IAA1C,EAAgDR,IAAhD;AAfX,GAAP;AAiBD;;AAEDU,OAAO,CAACnD,EAAR,GAAaA,EAAb;AACAmD,OAAO,CAACjD,SAAR,GAAoBA,SAApB;AACAiD,OAAO,CAAChD,QAAR,GAAmBA,QAAnB;AACAgD,OAAO,CAAC/C,IAAR,GAAeA,IAAf;AACA+C,OAAO,CAAC9C,OAAR,GAAkBA,OAAlB;AACA8C,OAAO,CAAC7C,SAAR,GAAoBA,SAApB;AACA6C,OAAO,CAAC5C,SAAR,GAAoBA,SAApB;AACA4C,OAAO,CAAC3C,WAAR,GAAsBA,WAAtB;AACA2C,OAAO,CAAC1C,UAAR,GAAqBA,UAArB;AACA0C,OAAO,CAACzC,UAAR,GAAqBA,UAArB;AACAyC,OAAO,CAACxC,QAAR,GAAmBA,QAAnB;AACAwC,OAAO,CAACvC,IAAR,GAAeA,IAAf;AACAuC,OAAO,CAACpC,IAAR,GAAeA,IAAf;AACAoC,OAAO,CAAC/B,aAAR,GAAwBA,aAAxB;AACA+B,OAAO,CAAC1B,QAAR,GAAmBA,QAAnB;AACA0B,OAAO,CAACvB,OAAR,GAAkBA,OAAlB;AACAuB,OAAO,CAACtB,UAAR,GAAqBA,UAArB;AACAsB,OAAO,CAACrB,cAAR,GAAyBA,cAAzB;AACAqB,OAAO,CAACjB,IAAR,GAAeA,IAAf;AACAiB,OAAO,CAACf,iBAAR,GAA4BA,iBAA5B;AACAe,OAAO,CAACZ,IAAR,GAAeA,IAAf;AACAY,OAAO,CAACX,aAAR,GAAwBA,aAAxB;AACAW,OAAO,CAACP,MAAR,GAAiBA,MAAjB;AACA","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar User = require(\"../../shared/types/User.bs.js\");\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar DateFns = require(\"../../shared/utils/DateFns.bs.js\");\nvar ArrayUtils = require(\"../../shared/utils/ArrayUtils.bs.js\");\nvar Json_decode = require(\"@glennsl/bs-json/src/Json_decode.bs.js\");\n\nfunction id(t) {\n  return t.id;\n}\n\nfunction creatorId(t) {\n  return t.creatorId;\n}\n\nfunction editorId(t) {\n  return t.editorId;\n}\n\nfunction body(t) {\n  return t.body;\n}\n\nfunction replies(t) {\n  return t.replies;\n}\n\nfunction createdAt(t) {\n  return t.createdAt;\n}\n\nfunction updatedAt(t) {\n  return t.updatedAt;\n}\n\nfunction likedByUser(t) {\n  return t.likedByUser;\n}\n\nfunction postNumber(t) {\n  return t.postNumber;\n}\n\nfunction totalLikes(t) {\n  return t.totalLikes;\n}\n\nfunction solution(t) {\n  return t.solution;\n}\n\nfunction user(users, t) {\n  return ArrayUtils.unsafeFind((function (user) {\n                return User.id(user) === t.creatorId;\n              }), \"Unable to user with id: \" + (t.creatorId + \" in TopicsShow__Post\"), users);\n}\n\nfunction sort(posts) {\n  return ArrayUtils.copyAndSort((function (x, y) {\n                return x.postNumber - y.postNumber | 0;\n              }), posts);\n}\n\nfunction repliesToPost(posts, post) {\n  return sort(posts.filter((function (p) {\n                    return $$Array.mem(p.id, post.replies);\n                  })));\n}\n\nfunction addReply(newReplyId, t) {\n  return {\n          id: t.id,\n          body: t.body,\n          creatorId: t.creatorId,\n          editorId: t.editorId,\n          postNumber: t.postNumber,\n          createdAt: t.createdAt,\n          updatedAt: t.updatedAt,\n          totalLikes: t.totalLikes,\n          likedByUser: t.likedByUser,\n          replies: $$Array.append([newReplyId], t.replies),\n          solution: t.solution\n        };\n}\n\nfunction addLike(t) {\n  return {\n          id: t.id,\n          body: t.body,\n          creatorId: t.creatorId,\n          editorId: t.editorId,\n          postNumber: t.postNumber,\n          createdAt: t.createdAt,\n          updatedAt: t.updatedAt,\n          totalLikes: t.totalLikes + 1 | 0,\n          likedByUser: true,\n          replies: t.replies,\n          solution: t.solution\n        };\n}\n\nfunction removeLike(t) {\n  return {\n          id: t.id,\n          body: t.body,\n          creatorId: t.creatorId,\n          editorId: t.editorId,\n          postNumber: t.postNumber,\n          createdAt: t.createdAt,\n          updatedAt: t.updatedAt,\n          totalLikes: t.totalLikes - 1 | 0,\n          likedByUser: false,\n          replies: t.replies,\n          solution: t.solution\n        };\n}\n\nfunction markAsSolution(replyId, replies) {\n  return replies.map((function (reply) {\n                if (reply.id === replyId) {\n                  return {\n                          id: reply.id,\n                          body: reply.body,\n                          creatorId: reply.creatorId,\n                          editorId: reply.editorId,\n                          postNumber: reply.postNumber,\n                          createdAt: reply.createdAt,\n                          updatedAt: reply.updatedAt,\n                          totalLikes: reply.totalLikes,\n                          likedByUser: reply.likedByUser,\n                          replies: reply.replies,\n                          solution: true\n                        };\n                } else {\n                  return {\n                          id: reply.id,\n                          body: reply.body,\n                          creatorId: reply.creatorId,\n                          editorId: reply.editorId,\n                          postNumber: reply.postNumber,\n                          createdAt: reply.createdAt,\n                          updatedAt: reply.updatedAt,\n                          totalLikes: reply.totalLikes,\n                          likedByUser: reply.likedByUser,\n                          replies: reply.replies,\n                          solution: false\n                        };\n                }\n              }));\n}\n\nfunction find(postId, posts) {\n  return ArrayUtils.unsafeFind((function (post) {\n                return post.id === postId;\n              }), \"Unable for find post with ID: \" + (postId + \" in TopicShow__Post\"), posts);\n}\n\nfunction highestPostNumber(posts) {\n  return posts.reduce((function (maxPostNumber, t) {\n                if (t.postNumber > maxPostNumber) {\n                  return t.postNumber;\n                } else {\n                  return maxPostNumber;\n                }\n              }), 0);\n}\n\nfunction make(id, body, creatorId, editorId, postNumber, createdAt, updatedAt, totalLikes, likedByUser, replies, solution) {\n  return {\n          id: id,\n          body: body,\n          creatorId: creatorId,\n          editorId: editorId,\n          postNumber: postNumber,\n          createdAt: createdAt,\n          updatedAt: updatedAt,\n          totalLikes: totalLikes,\n          likedByUser: likedByUser,\n          replies: replies,\n          solution: solution\n        };\n}\n\nfunction decodeReplyId(json) {\n  return Json_decode.field(\"id\", Json_decode.string, json);\n}\n\nfunction decode(json) {\n  return {\n          id: Json_decode.field(\"id\", Json_decode.string, json),\n          body: Json_decode.field(\"body\", Json_decode.string, json),\n          creatorId: Json_decode.field(\"creatorId\", Json_decode.string, json),\n          editorId: Json_decode.optional((function (param) {\n                  return Json_decode.field(\"editorId\", Json_decode.string, param);\n                }), json),\n          postNumber: Json_decode.field(\"postNumber\", Json_decode.$$int, json),\n          createdAt: Json_decode.field(\"createdAt\", DateFns.decodeISO, json),\n          updatedAt: Json_decode.field(\"updatedAt\", DateFns.decodeISO, json),\n          totalLikes: Json_decode.field(\"totalLikes\", Json_decode.$$int, json),\n          likedByUser: Json_decode.field(\"likedByUser\", Json_decode.bool, json),\n          replies: Json_decode.field(\"replies\", (function (param) {\n                  return Json_decode.array(decodeReplyId, param);\n                }), json),\n          solution: Json_decode.field(\"solution\", Json_decode.bool, json)\n        };\n}\n\nexports.id = id;\nexports.creatorId = creatorId;\nexports.editorId = editorId;\nexports.body = body;\nexports.replies = replies;\nexports.createdAt = createdAt;\nexports.updatedAt = updatedAt;\nexports.likedByUser = likedByUser;\nexports.postNumber = postNumber;\nexports.totalLikes = totalLikes;\nexports.solution = solution;\nexports.user = user;\nexports.sort = sort;\nexports.repliesToPost = repliesToPost;\nexports.addReply = addReply;\nexports.addLike = addLike;\nexports.removeLike = removeLike;\nexports.markAsSolution = markAsSolution;\nexports.find = find;\nexports.highestPostNumber = highestPostNumber;\nexports.make = make;\nexports.decodeReplyId = decodeReplyId;\nexports.decode = decode;\n/* DateFns Not a pure module */\n"]},"metadata":{},"sourceType":"module"}