{"ast":null,"code":"// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\n\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\n\nvar $$Notification = require(\"../Notification.bs.js\");\n\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nfunction Make($$Error) {\n  var Errors = Caml_exceptions.create(\"GraphqlErrorHandler.Make(Error).Errors\");\n\n  var handler = function handler(param, match) {\n    if (Caml_exceptions.caml_is_extension(match) && match[0] === Errors) {\n      return $$Array.iter(function (error) {\n        var match = Curry._1($$Error.notification, error);\n\n        return $$Notification.error(match[0], match[1]);\n      }, match[1]);\n    }\n  };\n\n  var $$catch = function $$catch(callback, promise) {\n    return promise[\"catch\"](function (error) {\n      var match = handler(\n      /* () */\n      0, error);\n\n      if (match !== undefined) {\n        Curry._1(callback,\n        /* () */\n        0);\n      } else {\n        $$Notification.error(\"Something went wrong!\", \"An unexpected error has occurred, and our team has been notified about this. Please reload the page and try again.\");\n\n        Curry._1(callback,\n        /* () */\n        0);\n      }\n\n      return Promise.resolve(\n      /* () */\n      0);\n    });\n  };\n\n  return {\n    Errors: Errors,\n    handler: handler,\n    $$catch: $$catch\n  };\n}\n\nexports.Make = Make;\n/* Notification Not a pure module */","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/shared/utils/GraphqlErrorHandler.bs.js"],"names":["$$Array","require","Curry","$$Notification","Caml_exceptions","Make","$$Error","Errors","create","handler","param","match","caml_is_extension","iter","error","_1","notification","$$catch","callback","promise","undefined","Promise","resolve","exports"],"mappings":"AAAA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,6BAAD,CAArB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,6BAAD,CAAnB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAIG,eAAe,GAAGH,OAAO,CAAC,uCAAD,CAA7B;;AAEA,SAASI,IAAT,CAAcC,OAAd,EAAuB;AACrB,MAAIC,MAAM,GAAGH,eAAe,CAACI,MAAhB,CAAuB,wCAAvB,CAAb;;AACA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACpC,QAAIP,eAAe,CAACQ,iBAAhB,CAAkCD,KAAlC,KAA4CA,KAAK,CAAC,CAAD,CAAL,KAAaJ,MAA7D,EAAqE;AACnE,aAAOP,OAAO,CAACa,IAAR,CAAc,UAAUC,KAAV,EAAiB;AACxB,YAAIH,KAAK,GAAGT,KAAK,CAACa,EAAN,CAAST,OAAO,CAACU,YAAjB,EAA+BF,KAA/B,CAAZ;;AACA,eAAOX,cAAc,CAACW,KAAf,CAAqBH,KAAK,CAAC,CAAD,CAA1B,EAA+BA,KAAK,CAAC,CAAD,CAApC,CAAP;AACD,OAHN,EAGSA,KAAK,CAAC,CAAD,CAHd,CAAP;AAID;AAEF,GARD;;AASA,MAAIM,OAAO,GAAG,SAAVA,OAAU,CAAUC,QAAV,EAAoBC,OAApB,EAA6B;AACzC,WAAOA,OAAO,SAAP,CAAe,UAAUL,KAAV,EAAiB;AACzB,UAAIH,KAAK,GAAGF,OAAO;AAAC;AAAQ,OAAT,EAAYK,KAAZ,CAAnB;;AACA,UAAIH,KAAK,KAAKS,SAAd,EAAyB;AACvBlB,QAAAA,KAAK,CAACa,EAAN,CAASG,QAAT;AAAmB;AAAQ,SAA3B;AACD,OAFD,MAEO;AACLf,QAAAA,cAAc,CAACW,KAAf,CAAqB,uBAArB,EAA8C,oHAA9C;;AACAZ,QAAAA,KAAK,CAACa,EAAN,CAASG,QAAT;AAAmB;AAAQ,SAA3B;AACD;;AACD,aAAOG,OAAO,CAACC,OAAR;AAAgB;AAAQ,OAAxB,CAAP;AACD,KATN,CAAP;AAUD,GAXD;;AAYA,SAAO;AACCf,IAAAA,MAAM,EAAEA,MADT;AAECE,IAAAA,OAAO,EAAEA,OAFV;AAGCQ,IAAAA,OAAO,EAAEA;AAHV,GAAP;AAKD;;AAEDM,OAAO,CAAClB,IAAR,GAAeA,IAAf;AACA","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = require(\"bs-platform/lib/js/array.js\");\nvar Curry = require(\"bs-platform/lib/js/curry.js\");\nvar $$Notification = require(\"../Notification.bs.js\");\nvar Caml_exceptions = require(\"bs-platform/lib/js/caml_exceptions.js\");\n\nfunction Make($$Error) {\n  var Errors = Caml_exceptions.create(\"GraphqlErrorHandler.Make(Error).Errors\");\n  var handler = function (param, match) {\n    if (Caml_exceptions.caml_is_extension(match) && match[0] === Errors) {\n      return $$Array.iter((function (error) {\n                    var match = Curry._1($$Error.notification, error);\n                    return $$Notification.error(match[0], match[1]);\n                  }), match[1]);\n    }\n    \n  };\n  var $$catch = function (callback, promise) {\n    return promise.catch((function (error) {\n                  var match = handler(/* () */0, error);\n                  if (match !== undefined) {\n                    Curry._1(callback, /* () */0);\n                  } else {\n                    $$Notification.error(\"Something went wrong!\", \"An unexpected error has occurred, and our team has been notified about this. Please reload the page and try again.\");\n                    Curry._1(callback, /* () */0);\n                  }\n                  return Promise.resolve(/* () */0);\n                }));\n  };\n  return {\n          Errors: Errors,\n          handler: handler,\n          $$catch: $$catch\n        };\n}\n\nexports.Make = Make;\n/* Notification Not a pure module */\n"]},"metadata":{},"sourceType":"module"}