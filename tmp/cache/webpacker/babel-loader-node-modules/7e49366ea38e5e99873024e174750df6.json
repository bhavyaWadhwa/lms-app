{"ast":null,"code":"'use strict';\n\nvar Caml_bytes = require(\"./caml_bytes.js\");\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction chr(n) {\n  if (n < 0 || n > 255) {\n    throw [Caml_builtin_exceptions.invalid_argument, \"Char.chr\"];\n  }\n\n  return n;\n}\n\nfunction escaped(c) {\n  var exit = 0;\n\n  if (c >= 40) {\n    if (c !== 92) {\n      exit = c >= 127 ? 1 : 2;\n    } else {\n      return \"\\\\\\\\\";\n    }\n  } else if (c >= 32) {\n    if (c >= 39) {\n      return \"\\\\'\";\n    } else {\n      exit = 2;\n    }\n  } else if (c >= 14) {\n    exit = 1;\n  } else {\n    switch (c) {\n      case 8:\n        return \"\\\\b\";\n\n      case 9:\n        return \"\\\\t\";\n\n      case 10:\n        return \"\\\\n\";\n\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 11:\n      case 12:\n        exit = 1;\n        break;\n\n      case 13:\n        return \"\\\\r\";\n    }\n  }\n\n  switch (exit) {\n    case 1:\n      var s = [0, 0, 0, 0];\n      s[0] =\n      /* \"\\\\\" */\n      92;\n      s[1] = 48 + (c / 100 | 0) | 0;\n      s[2] = 48 + (c / 10 | 0) % 10 | 0;\n      s[3] = 48 + c % 10 | 0;\n      return Caml_bytes.bytes_to_string(s);\n\n    case 2:\n      var s$1 = [0];\n      s$1[0] = c;\n      return Caml_bytes.bytes_to_string(s$1);\n  }\n}\n\nfunction lowercase(c) {\n  if (c >=\n  /* \"A\" */\n  65 && c <=\n  /* \"Z\" */\n  90 || c >=\n  /* \"\\192\" */\n  192 && c <=\n  /* \"\\214\" */\n  214 || c >=\n  /* \"\\216\" */\n  216 && c <=\n  /* \"\\222\" */\n  222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction uppercase(c) {\n  if (c >=\n  /* \"a\" */\n  97 && c <=\n  /* \"z\" */\n  122 || c >=\n  /* \"\\224\" */\n  224 && c <=\n  /* \"\\246\" */\n  246 || c >=\n  /* \"\\248\" */\n  248 && c <=\n  /* \"\\254\" */\n  254) {\n    return c - 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction lowercase_ascii(c) {\n  if (c >=\n  /* \"A\" */\n  65 && c <=\n  /* \"Z\" */\n  90) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction uppercase_ascii(c) {\n  if (c >=\n  /* \"a\" */\n  97 && c <=\n  /* \"z\" */\n  122) {\n    return c - 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction compare(c1, c2) {\n  return c1 - c2 | 0;\n}\n\nfunction equal(c1, c2) {\n  return (c1 - c2 | 0) === 0;\n}\n\nexports.chr = chr;\nexports.escaped = escaped;\nexports.lowercase = lowercase;\nexports.uppercase = uppercase;\nexports.lowercase_ascii = lowercase_ascii;\nexports.uppercase_ascii = uppercase_ascii;\nexports.compare = compare;\nexports.equal = equal;\n/* No side effect */","map":null,"metadata":{},"sourceType":"module"}