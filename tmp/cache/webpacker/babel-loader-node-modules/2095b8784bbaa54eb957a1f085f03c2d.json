{"ast":null,"code":"'use strict';\n\nvar getGlobalThis = function getGlobalThis() {\n  if (typeof globalThis !== 'undefined') return globalThis;\n  if (typeof self !== 'undefined') return self;\n  if (typeof window !== 'undefined') return window;\n  if (typeof global !== 'undefined') return global;\n  if (typeof this !== 'undefined') return this;\n  throw new Error('Unable to locate global `this`');\n};\n\nvar resolve = function resolve(s) {\n  var myGlobal = getGlobalThis();\n\n  if (myGlobal[s] === undefined) {\n    throw new Error(s + \" not polyfilled by BuckleScript yet\\n\");\n  }\n\n  return myGlobal[s];\n};\n\nvar register = function register(s, fn) {\n  var myGlobal = getGlobalThis();\n  myGlobal[s] = fn;\n  return 0;\n};\n\nexports.getGlobalThis = getGlobalThis;\nexports.resolve = resolve;\nexports.register = register;\n/* No side effect */","map":null,"metadata":{},"sourceType":"module"}