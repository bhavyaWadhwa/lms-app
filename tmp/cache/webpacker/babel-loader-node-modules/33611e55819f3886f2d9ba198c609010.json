{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport commonmarkPreset from \"markdown-it/lib/presets/commonmark\";\n\nvar md = require(\"markdown-it\")(_objectSpread(_objectSpread({}, commonmarkPreset.options), {}, {\n  highlight: function highlight(str, lang) {\n    return '<pre class=\"line-numbers\"><code class=\"language-' + lang + '\">' + md.utils.escapeHtml(str) + \"</code></pre>\";\n  }\n}));\n\nvar subscriptPlugin = require(\"markdown-it-sub\");\n\nvar superscriptPlugin = require(\"markdown-it-sup\");\n\nvar tablePlugin = require(\"markdown-it-multimd-table\");\n\nvar linkifyImagesPlugin = require(\"markdown-it-linkify-images\");\n\nmd.use(subscriptPlugin).use(superscriptPlugin).use(tablePlugin).use(linkifyImagesPlugin, {\n  target: \"_blank\"\n});\n\nvar parse = function parse(markdown) {\n  return md.render(markdown);\n};\n\nexport default parse;","map":{"version":3,"sources":["/home/kochar/Documents/pupilfirst-master/app/javascript/shared/utils/markdownIt.js"],"names":["commonmarkPreset","md","require","options","highlight","str","lang","utils","escapeHtml","subscriptPlugin","superscriptPlugin","tablePlugin","linkifyImagesPlugin","use","target","parse","markdown","render"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,oCAA7B;;AAEA,IAAMC,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAP,iCACNF,gBAAgB,CAACG,OADX;AAETC,EAAAA,SAAS,EAAE,mBAACC,GAAD,EAAMC,IAAN,EAAe;AACxB,WACE,qDACAA,IADA,GAEA,IAFA,GAGAL,EAAE,CAACM,KAAH,CAASC,UAAT,CAAoBH,GAApB,CAHA,GAIA,eALF;AAOD;AAVQ,GAAX;;AAaA,IAAMI,eAAe,GAAGP,OAAO,CAAC,iBAAD,CAA/B;;AACA,IAAMQ,iBAAiB,GAAGR,OAAO,CAAC,iBAAD,CAAjC;;AACA,IAAMS,WAAW,GAAGT,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAMU,mBAAmB,GAAGV,OAAO,CAAC,4BAAD,CAAnC;;AAEAD,EAAE,CAACY,GAAH,CAAOJ,eAAP,EACGI,GADH,CACOH,iBADP,EAEGG,GAFH,CAEOF,WAFP,EAGGE,GAHH,CAGOD,mBAHP,EAG4B;AACxBE,EAAAA,MAAM,EAAE;AADgB,CAH5B;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,QAAQ,EAAI;AACxB,SAAOf,EAAE,CAACgB,MAAH,CAAUD,QAAV,CAAP;AACD,CAFD;;AAIA,eAAeD,KAAf","sourcesContent":["import commonmarkPreset from \"markdown-it/lib/presets/commonmark\";\n\nconst md = require(\"markdown-it\")({\n  ...commonmarkPreset.options,\n  highlight: (str, lang) => {\n    return (\n      '<pre class=\"line-numbers\"><code class=\"language-' +\n      lang +\n      '\">' +\n      md.utils.escapeHtml(str) +\n      \"</code></pre>\"\n    );\n  }\n});\n\nconst subscriptPlugin = require(\"markdown-it-sub\");\nconst superscriptPlugin = require(\"markdown-it-sup\");\nconst tablePlugin = require(\"markdown-it-multimd-table\");\nconst linkifyImagesPlugin = require(\"markdown-it-linkify-images\");\n\nmd.use(subscriptPlugin)\n  .use(superscriptPlugin)\n  .use(tablePlugin)\n  .use(linkifyImagesPlugin, {\n    target: \"_blank\"\n  });\n\nconst parse = markdown => {\n  return md.render(markdown);\n};\n\nexport default parse;\n"]},"metadata":{},"sourceType":"module"}